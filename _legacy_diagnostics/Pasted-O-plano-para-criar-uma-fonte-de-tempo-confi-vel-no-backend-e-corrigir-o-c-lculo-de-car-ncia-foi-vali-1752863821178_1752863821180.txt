O plano para criar uma fonte de tempo confiável no backend e corrigir o cálculo de carência foi validado.

Sua tarefa é modificar o arquivo de rotas do nosso backend (provavelmente `/server/routes.ts`). Execute as seguintes ações:

1.  **Adicione a Nova Rota de Tempo:** Adicione o seguinte código para a nova rota `GET /api/server-time`:

    ```typescript
    app.get("/api/server-time", (req, res) => {
      res.json({ now: new Date().toISOString() });
    });
    ```

2.  **Atualize a Rota de Simulação:** Substitua a rota `GET /api/simulacao` existente pela seguinte versão aprimorada, que agora usa a data do servidor para o cálculo da carência:

    ```typescript
    app.get('/api/simulacao', (req, res) => {
      const { valor, prazo, produto_id, incluir_tac, dataVencimento } = req.query;

      const valorSolicitado = parseFloat(valor as string);
      const prazoEmMeses = parseInt(prazo as string);
      
      if (isNaN(valorSolicitado) || isNaN(prazoEmMeses) || !produto_id || !dataVencimento) {
        return res.status(400).json({ error: 'Parâmetros inválidos.' });
      }
    
      // Correção Crítica: Usa a data do servidor como a "verdade"
      const dataAtual = new Date(); 
      const primeiroVencimento = new Date(dataVencimento as string);
      const diasDiferenca = Math.ceil((primeiroVencimento.getTime() - dataAtual.getTime()) / (1000 * 3600 * 24));

      if (diasDiferenca > 45) {
        return res.status(400).json({ error: "A data do primeiro vencimento não pode ser superior a 45 dias." });
      }

      const { taxaDeJurosMensal, valorTac } = buscarTaxas(produto_id as string);
      
      const taxaJurosDiaria = taxaDeJurosMensal / 30; 
      const jurosCarencia = valorSolicitado * (taxaJurosDiaria / 100) * diasDiferenca;

      const iof = calcularIOF(valorSolicitado);
      const tac = incluir_tac === 'true' ? valorTac : 0;
      
      const valorTotalFinanciado = valorSolicitado + iof + tac + jurosCarencia;

      const valorParcela = calcularParcela(valorTotalFinanciado, prazoEmMeses, taxaDeJurosMensal);
      
      const custoTotal = (valorParcela * prazoEmMeses);
      const cetAnual = (((custoTotal / valorSolicitado) - 1) / (prazoEmMeses / 12)) * 100;

      return res.json({ 
          valorParcela: parseFloat(valorParcela.toFixed(2)), 
          taxaJurosMensal, 
          iof: parseFloat(iof.toFixed(2)),
          valorTac: tac,
          cet: parseFloat(cetAnual.toFixed(2)) 
      });
    });
    ```

Execute estas modificações no nosso backend.