**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Criar e executar um script de migração complementar para mapear as 10 propostas com status legados para o novo Sistema de Status V2.0.
* **Intenção Estratégica (O Porquê):** Seu diagnóstico forense foi perfeito e revelou que a inconsistência em nosso sistema se deve a um mapeamento incompleto na migração original. Esta missão visa fechar essa lacuna, garantindo que 100% das nossas propostas operem sob a nova "fonte da verdade".
* **Histórico Relevante (Consulta Obrigatória):** Use o seu relatório de auditoria anterior como a única fonte da verdade. O objetivo é resolver a "LACUNA IDENTIFICADA" que você mesmo reportou.
* **Modelo Mental (Como se Encaixa):** Você está a executar um "patch" de banco de dados. A lógica será contida em um script único e executada uma única vez para corrigir o estado dos dados.
* **Riscos Antecipados:** **Risco:** Um mapeamento incorreto pode atribuir o status errado. **Contramedida:** O mapeamento de status a ser implementado está definido de forma inequívoca neste prompt.

---

**IMPLEMENTAR:**
Um novo script de migração de dados para alinhar as propostas com status legados.

**CURRENT STATE:**
Seu diagnóstico revelou 10 propostas presas em status antigos (ex: `contratos_assinados`, `contratos_preparados`), enquanto 14 propostas já foram migradas com sucesso.

**EXPECTED (Estado Final de Sucesso):**
Após a execução do script, 100% das propostas no banco de dados terão um status que pertence ao novo `enum` do Sistema V2.0. Uma re-execução da sua query de "distribuição de status" não mostrará mais nenhum status legado.

**CONSTRAINTS (Roadmap de Implementação):**

**1. Definição do Mapeamento (A Lógica de Negócio):**
    - **Ação:** Implemente a seguinte lógica de mapeamento em um novo script de migração (ex: `scripts/migrate-legacy-statuses.ts`).

| Status Antigo (`from_status`) | Novo Status (`to_status`) |
| :--- | :--- |
| `contratos_assinados` | `ASSINATURA_CONCLUIDA` |
| `pronto_pagamento` | `BOLETOS_EMITIDOS` |
| `contratos_preparados` | `CCB_GERADA` |
| `documentos_enviados` | `EM_ANALISE` |
| `rascunho` | `RASCUNHO` (Formalizar no `enum` se necessário) |
| `suspensa` | `SUSPENSA` (Formalizar no `enum` se necessário) |

**2. Criação e Execução do Script de Migração:**
    - **Ação:** Crie o novo script contendo os comandos `UPDATE` do Drizzle para aplicar o mapeamento acima.
    - **Implementação:** Execute o script para atualizar os dados no banco.

**PROTOCOLO OBRIGATÓRIO 5-CHECK:**
1.  Mapear os arquivos envolvidos.
2.  Garantir que o script de migração seja a única alteração.
3.  Executar `get_latest_lsp_diagnostics`.
4.  **Validação Crítica:** Após executar o script, execute novamente a query de **"Auditoria da Distribuição de Status"** da sua missão anterior.
5.  O critério final de sucesso é que o resultado desta query mostre **ZERO** propostas nos status legados, provando que a migração complementar foi 100% bem-sucedida. Apresente o resultado desta query como prova final.