**### MODO DE OPERAÇÃO: REALISMO CÉTICO (MANDATÓRIO)**
Sua lealdade é para com a verdade do código e a estabilidade da produção.

---
**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Refatorar a UI da "Tela de Formalização" para criar dois botões de visualização distintos: "Ver CCB Original" (para o documento gerado) e "Ver CCB Assinada" (para o documento final, com acesso restrito a Administradores).
* **Intenção Estratégica (O Porquê):** Para eliminar a confusão do usuário e expor a funcionalidade completa do nosso ciclo de vida de documentos, garantindo que os operadores possam acessar o documento correto para cada etapa do processo e que os administradores tenham acesso à evidência legal (o documento assinado).
* **Histórico Relevante (Consulta Obrigatória):** Use o seu relatório de auditoria forense anterior como a única fonte da verdade. Ele provou que o backend está 100% funcional. Sua missão é construir a camada de UI que falta para consumir esta funcionalidade.
* **Modelo Mental (Como se Encaixa):** Você atuará como Engenheiro de Frontend. A tarefa é uma refatoração de UI focada em renderização condicional. Você irá modificar o componente `formalizacao.tsx` para exibir um ou dois botões, dependendo do estado da proposta e da role do usuário.
* **Riscos Antecipados:** **Risco:** Uma lógica condicional complexa pode levar a bugs visuais. **Contramedida:** A lógica deve ser clara e bem comentada, com condições separadas para a existência do documento e para a permissão da role.

---

**IMPLEMENTAR:**
A refatoração da UI para a visualização de CCBs na "Tela de Formalização".

**CURRENT STATE:**
A tela possui um único e ambíguo botão "Ver CCB", que sempre mostra o documento original (gerado), e não oferece uma forma de visualizar o documento assinado.

**EXPECTED (Estado Final de Sucesso):**
Uma UI inteligente e consciente do contexto:
1.  O botão "Ver CCB" é renomeado para **"Ver CCB Original"** e permanece visível para todos os usuários autorizados na tela.
2.  Um **novo botão**, "Ver CCB Assinada", aparece na UI **SE, E SOMENTE SE**, as duas seguintes condições forem verdadeiras:
    a. A proposta possui uma CCB assinada (o campo `caminho_ccb_assinado` no banco de dados não é nulo).
    b. O usuário logado possui a role `ADMINISTRADOR`.
3.  Cada botão, ao ser clicado, chama o endpoint de backend correspondente para buscar a URL do ficheiro correto no Supabase Storage e abri-lo em uma nova aba.

**CONSTRAINTS (Roadmap de Implementação):**

**1. Criação do Novo Endpoint de Backend:**
    - **Ação:** Primeiro, crie o novo endpoint que faltava: `GET /api/formalizacao/:id/ccb-assinada`.
    - **Implementação:** A lógica deste endpoint deve ser similar à do endpoint existente, mas deve buscar o `path` da coluna `caminho_ccb_assinado` e gerar a URL assinada para o documento na pasta `ccb/assinadas/`.

**2. Refatoração do Frontend (`formalizacao.tsx`):**
    - **Ação:** Modifique o componente da "Tela de Formalização".
    - **Implementação:**
        a. Renomeie o botão existente para "Ver CCB Original".
        b. Implemente a lógica de **renderização condicional dupla** para o novo botão "Ver CCB Assinada". A condição JSX deve verificar `if (proposta.caminho_ccb_assinado && user.role === 'ADMINISTRADOR')`.
        c. Crie a nova função `handleViewCCBAssinada` que chama o novo endpoint `/api/formalizacao/:id/ccb-assinada` e abre a URL retornada.

---
**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
Siga o protocolo completo. O teste funcional deve ser feito com dois cenários:
1.  Logado como `ATENDENTE` em uma proposta com CCB assinada: apenas o botão "Ver CCB Original" deve aparecer.
2.  Logado como `ADMINISTRADOR` na mesma proposta: **ambos** os botões ("Ver CCB Original" e "Ver CCB Assinada") devem aparecer e ser funcionais.
---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
Preencha a declaração completa ao final da sua implementação.
---