#!/bin/bash

# Teste de OAuth 2.0 - Banco Inter API
# Este script testa a autentica√ß√£o diretamente

echo "========================================="
echo "üè¶ TESTE OAUTH 2.0 - BANCO INTER"
echo "========================================="
echo ""

# Verificar vari√°veis
if [ -z "$INTER_CLIENT_ID" ] || [ -z "$INTER_CLIENT_SECRET" ]; then
    echo "‚ùå Erro: Vari√°veis INTER_CLIENT_ID e INTER_CLIENT_SECRET n√£o definidas"
    exit 1
fi

# URL do ambiente sandbox
OAUTH_URL="https://cdpj-sandbox.partners.uatinter.co/oauth/v2/token"

echo "üìã Configura√ß√£o:"
echo "   - URL: $OAUTH_URL"
echo "   - Client ID: ${INTER_CLIENT_ID:0:10}..."
echo "   - Ambiente: Sandbox"
echo ""

echo "üîë Tentando autentica√ß√£o..."

# Fazer requisi√ß√£o OAuth sem certificado (teste b√°sico)
RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$OAUTH_URL" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "client_id=$INTER_CLIENT_ID" \
  -d "client_secret=$INTER_CLIENT_SECRET" \
  -d "grant_type=client_credentials" \
  -d "scope=cobv.write cobv.read")

HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
BODY=$(echo "$RESPONSE" | sed '$d')

echo ""
echo "üì° Resposta HTTP: $HTTP_CODE"

if [ "$HTTP_CODE" = "200" ]; then
    echo "‚úÖ Autentica√ß√£o bem-sucedida!"
    echo ""
    echo "üìÑ Token recebido:"
    echo "$BODY" | jq '.'
else
    echo "‚ùå Erro na autentica√ß√£o"
    echo ""
    echo "üìÑ Resposta do servidor:"
    echo "$BODY"
    
    echo ""
    echo "üí° Poss√≠veis causas:"
    echo "   - Credenciais inv√°lidas ou expiradas"
    echo "   - Certificado mTLS obrigat√≥rio"
    echo "   - Ambiente sandbox indispon√≠vel"
fi

echo ""
echo "========================================="
echo "üîç TESTE ADICIONAL - COM CERTIFICADO"
echo "========================================="
echo ""

# Verificar se temos certificado
if [ -n "$INTER_CERTIFICATE" ] && [ -n "$INTER_PRIVATE_KEY" ]; then
    echo "‚úÖ Certificado e chave privada encontrados"
    
    # Criar arquivos tempor√°rios
    CERT_FILE=$(mktemp)
    KEY_FILE=$(mktemp)
    
    # Escrever certificado e chave
    echo "$INTER_CERTIFICATE" > "$CERT_FILE"
    echo "$INTER_PRIVATE_KEY" > "$KEY_FILE"
    
    echo "üîê Tentando com certificado mTLS..."
    
    # Fazer requisi√ß√£o com certificado
    RESPONSE_CERT=$(curl -s -w "\n%{http_code}" -X POST "$OAUTH_URL" \
      --cert "$CERT_FILE" \
      --key "$KEY_FILE" \
      -H "Content-Type: application/x-www-form-urlencoded" \
      -d "client_id=$INTER_CLIENT_ID" \
      -d "client_secret=$INTER_CLIENT_SECRET" \
      -d "grant_type=client_credentials" \
      -d "scope=cobv.write cobv.read" 2>&1)
    
    HTTP_CODE_CERT=$(echo "$RESPONSE_CERT" | tail -n1)
    
    echo ""
    echo "üì° Resposta com mTLS: $HTTP_CODE_CERT"
    
    # Limpar arquivos tempor√°rios
    rm -f "$CERT_FILE" "$KEY_FILE"
    
    if [[ "$RESPONSE_CERT" == *"SSL"* ]] || [[ "$RESPONSE_CERT" == *"certificate"* ]]; then
        echo "‚ö†Ô∏è  Problema com certificado SSL detectado"
        echo "üí° O certificado pode estar em formato incorreto ou expirado"
    fi
else
    echo "‚ùå Certificado ou chave privada n√£o encontrados"
fi

echo ""
echo "========================================="
echo "üìä RESUMO"
echo "========================================="

if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE_CERT" = "200" ]; then
    echo "‚úÖ API do Banco Inter est√° FUNCIONANDO!"
    echo "‚úÖ Autentica√ß√£o OAuth 2.0 validada"
else
    echo "‚ùå API do Banco Inter com PROBLEMAS"
    echo ""
    echo "üîß A√ß√µes necess√°rias:"
    echo "1. Verificar se as credenciais sandbox ainda s√£o v√°lidas"
    echo "2. Confirmar formato correto do certificado"
    echo "3. Contatar suporte Banco Inter se problema persistir"
fi