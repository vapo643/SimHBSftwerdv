/**
 * PAM V1.0 - Script de Teste para Conex√£o Frontend-Backend
 * 
 * Este script testa:
 * 1. Endpoints de prorrogar vencimento 
 * 2. Endpoints de aplicar desconto
 * 3. Valida√ß√£o de permiss√µes
 */

const axios = require('axios');

const API_BASE = 'http://localhost:5000/api';

// Token de teste (substituir por um v√°lido)
const AUTH_TOKEN = 'eyJhbGciOiJIUzI1NiIsImtpZCI6Ii9YS2RwUDA2a0RqRkZVR3giLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2R2Z2xneHJ2aG10c2l4YWFieGhhLnN1cGFiYXNlLmNvL2F1dGgvdjEiLCJzdWIiOiJhNjVlZmM1NC05MGNkLTRiOTQtYjk3MS1jOGE1NjAxMDQwMzIiLCJhdWQiOiJhdXRoZW50aWNhdGVkIiwiZXhwIjoxNzU1MjY1OTE0LCJpYXQiOjE3NTUyNjIzMTQsImVtYWlsIjoiZ2FicmllbHNlcnJpMjM4QGdtYWlsLmNvbSIsInBob25lIjoiIiwiYXBwX21ldGFkYXRhIjp7InByb3ZpZGVyIjoiZW1haWwiLCJwcm92aWRlcnMiOlsiZW1haWwiXSwicm9sZSI6IkFETUlOSVNUUkFET1IifSwidXNlcl9tZXRhZGF0YSI6eyJhZ2VuY3lfYWRtaW4iOmZhbHNlLCJjcGYiOiIwMzQ2MTg2NzYzMCIsImZ1bGxfbmFtZSI6IkdhYnJpZWwifSwicm9sZSI6ImF1dGhlbnRpY2F0ZWQiLCJhYWwiOiJhYWwxIiwiYW1yIjpbeyJtZXRob2QiOiJwYXNzd29yZCIsInRpbWVzdGFtcCI6MTc1NTI2MjMxNH1dLCJzZXNzaW9uX2lkIjoiMDNhNjQ0MDUtYTU5OS00MTlkLWEwOTktYTE3ZjQ1ZjIzZGFmIiwiaXNfYW5vbnltb3VzIjpmYWxzZX0.DLlOOhc_IQ8XQSP7f1HK5VNdKwcOJaQJbMGKYTSaP00';

// C√≥digo de teste para usar (substituir por um c√≥digo v√°lido)
const CODIGO_TESTE = '44a467d1-e93f-4e91-b1f9-c79438ef5eea';

async function testarProrrogarVencimento() {
  console.log('\n=== TESTE: Prorrogar Vencimento ===');
  
  const novaData = new Date();
  novaData.setDate(novaData.getDate() + 30);
  const novaDataVencimento = novaData.toISOString().split('T')[0];
  
  try {
    const response = await axios.patch(
      `${API_BASE}/cobrancas/boletos/${CODIGO_TESTE}/prorrogar`,
      { novaDataVencimento },
      {
        headers: {
          'Authorization': `Bearer ${AUTH_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    console.log('‚úÖ Teste passou! Resposta:', response.data);
    return true;
  } catch (error) {
    if (error.response?.status === 403) {
      console.log('‚ö†Ô∏è Erro 403: Usu√°rio sem permiss√£o');
    } else if (error.response?.status === 400) {
      console.log('‚ö†Ô∏è Erro 400:', error.response.data.message);
    } else if (error.response?.status === 404) {
      console.log('‚ö†Ô∏è Erro 404: Boleto n√£o encontrado');
    } else {
      console.error('‚ùå Erro:', error.response?.data || error.message);
    }
    return false;
  }
}

async function testarAplicarDesconto() {
  console.log('\n=== TESTE: Aplicar Desconto ===');
  
  const dataLimite = new Date();
  dataLimite.setDate(dataLimite.getDate() + 7);
  
  try {
    const response = await axios.post(
      `${API_BASE}/cobrancas/boletos/${CODIGO_TESTE}/aplicar-desconto`,
      {
        tipoDesconto: 'PERCENTUAL',
        valorDesconto: 10,
        dataLimiteDesconto: dataLimite.toISOString().split('T')[0]
      },
      {
        headers: {
          'Authorization': `Bearer ${AUTH_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    console.log('‚úÖ Teste passou! Resposta:', response.data);
    return true;
  } catch (error) {
    if (error.response?.status === 403) {
      console.log('‚ö†Ô∏è Erro 403: Usu√°rio sem permiss√£o');
    } else if (error.response?.status === 400) {
      console.log('‚ö†Ô∏è Erro 400:', error.response.data.message);
    } else if (error.response?.status === 404) {
      console.log('‚ö†Ô∏è Erro 404: Boleto n√£o encontrado');
    } else {
      console.error('‚ùå Erro:', error.response?.data || error.message);
    }
    return false;
  }
}

async function executarTestes() {
  console.log('=================================================================');
  console.log('PAM V1.0 - TESTE DE CONEX√ÉO FRONTEND-BACKEND');
  console.log('=================================================================');
  
  console.log('\nüìã CHECKLIST DE IMPLEMENTA√á√ÉO:\n');
  console.log('‚úÖ Mutations criadas no frontend');
  console.log('‚úÖ Bot√µes de a√ß√£o adicionados na tabela');
  console.log('‚úÖ Modais de Prorrogar e Aplicar Desconto implementados');
  console.log('‚úÖ Endpoints conectados ao backend');
  console.log('‚úÖ Toast notifications configuradas');
  console.log('‚úÖ Invalida√ß√£o de queries ap√≥s sucesso');
  
  console.log('\nüîß INSTRU√á√ïES PARA TESTE MANUAL:\n');
  console.log('1. Acesse a Tela de Cobran√ßas no navegador');
  console.log('2. Procure uma proposta com status "A_RECEBER"');
  console.log('3. Clique no √≠cone de calend√°rio (Prorrogar Vencimento)');
  console.log('4. Selecione uma nova data e confirme');
  console.log('5. Verifique o toast de sucesso');
  console.log('6. Clique no √≠cone de percentual (Aplicar Desconto)');
  console.log('7. Configure o desconto e confirme');
  console.log('8. Verifique o toast de sucesso');
  
  console.log('\n‚ö†Ô∏è NOTA: Os testes de API abaixo s√£o opcionais.');
  console.log('   Descomente as linhas para executar.');
  
  // Testes de API (comentados para n√£o alterar dados)
  // await testarProrrogarVencimento();
  // await testarAplicarDesconto();
  
  console.log('\n=================================================================');
  console.log('IMPLEMENTA√á√ÉO CONCLU√çDA COM SUCESSO!');
  console.log('=================================================================');
}

executarTestes().catch(console.error);