**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Realizar uma auditoria completa e sistemática em toda a base de código para mapear todos os status de proposta existentes, a lógica de transição entre eles e a sequência do ciclo de vida.
* **Intenção Estratégica (O Porquê):** Nossas telas operacionais (Cobranças, Pagamentos) estão a falhar porque não temos uma fonte única e confiável para definir quando uma proposta está pronta para a próxima etapa. Esta auditoria nos dará o "mapa" necessário para unificar o sistema de status, eliminando ambiguidades e bugs de sincronização de uma vez por todas.
* **Histórico Relevante (Consulta Obrigatória):** A falha recorrente no filtro da "Tela de Cobranças" é o sintoma direto deste problema de falta de um status unificado. Sua análise deve nos mostrar todos os lugares onde o `status` de uma proposta é lido ou modificado.
* **Modelo Mental (Como se Encaixa):** Você atuará como um Analista de Processos de Negócio. Sua tarefa é ler o código para entender e documentar o fluxo de trabalho completo de uma proposta, desde sua criação (`rascunho`) até o estado final.
* **Riscos Antecipados:** **Risco:** O sistema pode ter status "órfãos" ou lógicas de transição contraditórias. **Contramedida:** Seu relatório deve ser exaustivo. Utilize a busca global no código para não deixar nenhum `status` para trás.

---

**IMPLEMENTAR:**
Auditoria de diagnóstico completa. **NÃO FAÇA NENHUMA MODIFICAÇÃO.**

**CURRENT STATE:**
O sistema utiliza múltiplos status para controlar o fluxo de uma proposta, mas a sequência e as condições de transição não estão claramente documentadas, causando bugs nas telas que dependem dessa informação.

**EXPECTED (Estado Final de Sucesso):**
Um relatório de auditoria detalhado em Markdown que forneça um mapa completo do nosso sistema de status.

**CONSTRAINTS (Roadmap de Auditoria - Apenas Leitura):**

**1. Mapeamento de Todos os Status Existentes:**
    - **Ação:** Inspecione o schema do nosso banco de dados (tabela `propostas`) e faça uma busca em todo o código-fonte por todos os valores literais de `status` que são utilizados.
    - **Relatório:** Apresente uma lista completa de **TODOS** os status possíveis que uma proposta pode ter (ex: `rascunho`, `aguardando_analise`, `aprovado`, `contratos_assinados`, etc.).

**2. Mapeamento do Ciclo de Vida (Sequência de Transição):**
    - **Ação:** Para cada status que você encontrou, investigue o código para determinar qual ação de negócio causa a transição *para* aquele status.
    - **Relatório:** Desenhe o fluxo de vida de uma proposta em sequência. Exemplo:
        - `rascunho` -> (Ação: Atendente envia para análise) -> `aguardando_analise`
        - `aguardando_analise` -> (Ação: Analista inicia a análise) -> `em_analise`
        - ... e assim por diante, até o último estado possível.

**3. Auditoria da "Tela de Cobranças" vs. "Formalização":**
    - **Ação:** Analise o último estado do fluxo de "Formalização".
    - **Relatório:** Qual é o status final que uma proposta atinge após a geração de boletos? Agora, compare isso com a query da "Tela de Cobranças". A query da tela de cobranças está a filtrar pelo status correto que indica a conclusão da formalização?

**Relatório Final:**
O critério de sucesso é um relatório que nos dê 100% de clareza sobre como nosso sistema de status funciona hoje, expondo quaisquer inconsistências ou lacunas na lógica.