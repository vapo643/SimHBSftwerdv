**### MODO DE OPERAÇÃO: REALISMO CÉTICO (MANDATÓRIO)**
Sua lealdade é para com a verdade do código e a estabilidade da produção.

---
**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Executar uma correção cirúrgica e trifásica na "Ficha do Cliente" para resolver as falhas de status de parcela, download de PDF e a ação "Marcar como Pago".
* **Intenção Estratégica (O Porquê):** Restaurar a funcionalidade completa e a confiança na nossa ferramenta de cobranças mais crítica, garantindo que os dados sejam precisos e as ações, operacionais.
* **Histórico Relevante (Consulta Obrigatória):** Use o seu relatório de auditoria forense anterior como a única fonte da verdade e o mapa de correção para esta missão. Sua tarefa é corrigir as "Causas Raiz Identificadas" que você mesmo descobriu.
* **Modelo Mental (Como se Encaixa):** Você atuará como Engenheiro Full-Stack Sênior. A missão exigirá modificações coordenadas no frontend para corrigir a lógica de UI, o tratamento de tipos e as chamadas de API.
* **Riscos Antecipados:** **Risco:** Uma correção pode afetar outra. **Contramedida:** Siga o roadmap faseado abaixo, validando cada correção de forma isolada antes de passar para a próxima.

---

**IMPLEMENTAR:**
A refatoração completa da "Ficha do Cliente" para corrigir as 3 falhas críticas identificadas.

**CURRENT STATE:**
A ficha está com funcionalidades críticas quebradas: status de parcela inconsistente, downloads falham com erro de autenticação e a ação de marcar como pago não funciona.

**EXPECTED (Estado Final de Sucesso):**
Uma "Ficha do Cliente" 100% funcional:
1.  O status "Pago" é exibido corretamente quando a `situacao` do backend é `PAGO`.
2.  O botão "Baixar Boleto" funciona perfeitamente, sem erros de autenticação.
3.  O botão "Marcar como Pago" funciona e atualiza a UI com sucesso.

**CONSTRAINTS (Roadmap de Correção Faseado):**

**FASE 1: Correção do Status "Pago" Incorreto (P0 - Crítico):**
    - **Ação:** No ficheiro `client/src/pages/financeiro/CobrancasPage.tsx`, localize a função `getInterBankStatusLabel`.
    - **Implementação:** Adicione um novo `case` à estrutura `switch` para reconhecer o valor `"PAGO"` como um status de pagamento válido.

**FASE 2: Correção do Download sem Autenticação (P0 - Crítico):**
    - **Ação:** No mesmo ficheiro, localize a lógica `onClick` do botão de download de boletos.
    - **Implementação:** Substitua a chamada direta `window.open()` por uma função que utilize o nosso wrapper de API (`apiRequest`) que anexa o token JWT. Esta função deve:
        a. Chamar a API com `responseType: 'blob'`.
        b. Receber o Blob do PDF.
        c. Criar uma URL de objeto (`URL.createObjectURL`) a partir do Blob.
        d. Usar `window.open()` com esta nova URL de objeto para abrir o PDF.

**FASE 3: Correção da Ação "Marcar como Pago" (P1 - Investigação):**
    - **Ação:** No mesmo ficheiro, localize a `mutation` do TanStack Query para a ação "Marcar como Pago".
    - **Implementação:** Aplique a tipagem correta à resposta da API para que o `response` não seja mais `unknown`. Use as interfaces que já criamos para garantir que `response.success` possa ser acessado com segurança de tipos.

---
**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1. Mapear o ficheiro `CobrancasPage.tsx`.
2. Garantir que as novas lógicas e tipos estejam corretos.
3. Executar `get_latest_lsp_diagnostics` e corrigir TODOS os erros.
4. **Declarar Nível de Confiança (0-100%)**.
5. **Categorizar Riscos Descobertos**.
6. **Teste Funcional Obrigatório:** Execute um teste ponta-a-ponta para CADA UMA das três funcionalidades corrigidas.
7. **Documentar Decisões Técnicas**.
---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher]
* **RISCOS IDENTIFICADOS:** [Preencher]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Preencher]
* **VALIDAÇÃO PENDENTE:** [Valide visualmente que os 3 bugs reportados foram completamente resolvidos.]
---