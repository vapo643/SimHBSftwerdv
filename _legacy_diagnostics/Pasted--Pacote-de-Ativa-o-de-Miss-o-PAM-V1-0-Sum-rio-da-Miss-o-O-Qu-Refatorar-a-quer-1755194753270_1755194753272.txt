**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Refatorar a query de backend da "Tela de Cobranças" para usar a regra de negócio correta e absoluta: exibir apenas e somente propostas que já tenham boletos gerados na tabela `inter_collections`.
* **Intenção Estratégica (O Porquê):** A regra de negócio anterior era incorreta e complexa, mostrando propostas prematuramente na tela de cobranças. A nova regra é simples e alinha a tela com o momento exato em que a cobrança se torna financeiramente acionável: a existência de um boleto.
* **Histórico Relevante (Consulta Obrigatória):** Nossas implementações anteriores para esta tela usavam `ccbGerado` e `assinaturaEletronicaConcluida` como filtros primários. O Arquiteto corrigiu esta lógica. A nova e única fonte da verdade para esta tela é a existência de um registro associado na tabela `inter_collections`.
* **Modelo Mental (Como se Encaixa):** A "Tela de Cobranças" se torna um reflexo direto da tabela `inter_collections`. Se uma proposta tem boletos, ela aparece. Se não tem, não aparece. A complexidade de status e flags booleanos é removida desta query específica.
* **Riscos Antecipados:** **Risco:** A mudança pode impactar filtros secundários de status (pago, vencido, etc.) que já existem. **Contramedida:** A nova query principal deve ser a base, e os filtros secundários devem continuar a operar sobre o conjunto de resultados retornados por ela.

---

**IMPLEMENTAR:**
Refatoração da query de dados do endpoint `GET /api/cobrancas`.

**CURRENT STATE:**
A query atual usa uma combinação complexa de `status` da proposta e flags booleanas (`ccbGerado`, `assinaturaEletronicaConcluida`) para determinar quais propostas exibir, o que está incorreto.

**EXPECTED (Estado Final de Sucesso):**
A query é simplificada e corrigida para seguir uma única regra absoluta: retornar **apenas e somente** propostas que tenham pelo menos um registro associado na tabela `inter_collections`.

**CONSTRAINTS (Roadmap de Implementação):**

**1. Localize a Query:**
    - **Ação:** Encontre a query Drizzle no endpoint `GET /api/cobrancas` no ficheiro `server/routes/cobrancas.ts`.

**2. Refatore a Cláusula `WHERE`:**
    - **Ação:** Remova completamente as condições de filtro anteriores baseadas no `status` da proposta e nas flags `ccbGerado` e `assinaturaEletronicaConcluida`.
    - **Implementação:** A nova cláusula `WHERE` principal e absoluta deve ser uma verificação de existência na tabela `inter_collections`.

    - **Lógica de Exemplo (implemente com Drizzle):**
      ```sql
      // A nova lógica central deve ser o equivalente Drizzle disto:
      WHERE EXISTS (
          SELECT 1
          FROM inter_collections
          WHERE inter_collections.proposta_id = propostas.id
      )
      ```

**PROTOCOLO OBRIGATÓRIO 5-CHECK:**
1.  Mapear o ficheiro `server/routes/cobrancas.ts`.
2.  Garantir que a query seja simplificada conforme a nova regra.
3.  Executar `get_latest_lsp_diagnostics`.
4.  Realizar um teste funcional em dois cenários:
    a. Uma proposta que tenha CCB assinada mas **SEM** boletos gerados **NÃO DEVE** aparecer na tela.
    b. Uma proposta que tenha boletos gerados **DEVE** aparecer na tela.
5.  O critério final de sucesso é uma "Tela de Cobranças" que reflete perfeitamente a nova regra de negócio.