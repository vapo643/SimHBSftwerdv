openapi: 3.0.3
info:
  title: Simpix Proposal API
  description: |
    API for credit proposal management within the Simpix platform.
    
    This API follows Domain-Driven Design (DDD) architecture with clear separation between:
    - Presentation Layer (Controllers & Routes)
    - Application Layer (Use Cases & Orchestration)  
    - Domain Layer (Business Logic & Entities)
    - Infrastructure Layer (Data Persistence)
    
    All endpoints follow a consistent response format and include comprehensive error handling.
  version: 1.0.0
  contact:
    name: Simpix Development Team
    email: dev@simpix.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.simpix.com/api
    description: Production server
  - url: https://staging-api.simpix.com/api
    description: Staging server
  - url: http://localhost:3000/api
    description: Development server

paths:
  /proposals:
    post:
      summary: Create a new credit proposal
      description: |
        Creates a new credit proposal with customer data and loan conditions.
        The proposal will be initialized with status 'aguardando_analise' (awaiting analysis).
      operationId: createProposal
      tags:
        - Proposals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProposalRequest'
            examples:
              basicProposal:
                summary: Basic proposal example
                value:
                  customerData:
                    name: "João Silva"
                    cpf: "12345678901"
                    email: "joao.silva@email.com"
                    phone: "11999887766"
                    monthlyIncome: 5000
                  loanConditions:
                    requestedAmount: 10000
                    term: 24
                    purpose: "Reforma residencial"
                  storeId: "1"
                  productId: "1"
      responses:
        '201':
          description: Proposal created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSuccessResponse'
              examples:
                success:
                  summary: Successful proposal creation
                  value:
                    success: true
                    data:
                      id: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
                      status: "aguardando_analise"
                      customerData:
                        name: "João Silva"
                        cpf: "12345678901"
                        email: "joao.silva@email.com"
                        phone: "11999887766"
                        monthlyIncome: 5000
                      loanConditions:
                        requestedAmount: 10000
                        term: 24
                        purpose: "Reforma residencial"
                      storeId: "1"
                      productId: "1"
                      createdAt: "2025-08-21T21:00:00.000Z"
                      updatedAt: "2025-08-21T21:00:00.000Z"
                    message: "Proposal created successfully"
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
              examples:
                validationError:
                  summary: Validation error example
                  value:
                    success: false
                    error: "Validation error"
                    details:
                      - code: "invalid_type"
                        expected: "string"
                        received: "undefined"
                        path: ["customerData", "name"]
                        message: "Required"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Get all proposals
      description: |
        Retrieves all credit proposals. Returns an array of proposals with pagination metadata.
      operationId: getAllProposals
      tags:
        - Proposals
      responses:
        '200':
          description: Proposals retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalListResponse'
              examples:
                success:
                  summary: Successful proposals retrieval
                  value:
                    success: true
                    data:
                      - id: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
                        status: "aguardando_analise"
                        customerData:
                          name: "Cliente 1"
                          cpf: "11111111111"
                        loanConditions:
                          requestedAmount: 10000
                          term: 24
                        createdAt: "2025-08-20T19:32:58.573Z"
                        updatedAt: "2025-08-20T19:32:58.573Z"
                    total: 1
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}:
    get:
      summary: Get proposal by ID
      description: |
        Retrieves a specific credit proposal by its unique identifier.
      operationId: getProposalById
      tags:
        - Proposals
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      responses:
        '200':
          description: Proposal found and returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSuccessResponse'
              examples:
                success:
                  summary: Successful proposal retrieval
                  value:
                    success: true
                    data:
                      id: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
                      status: "aguardando_analise"
                      customerData:
                        name: "Cliente 1"
                        cpf: "11111111111"
                        email: "cliente1@teste.com"
                        phone: "11999888777"
                        monthlyIncome: 15000
                      loanConditions:
                        requestedAmount: 10000
                        term: 24
                      storeId: "1"
                      productId: "1"
                      createdAt: "2025-08-20T19:32:58.573Z"
                      updatedAt: "2025-08-20T19:32:58.573Z"
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFound:
                  summary: Proposal not found
                  value:
                    success: false
                    error: "Proposal not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/submit:
    put:
      summary: Submit proposal for analysis
      description: |
        Submits a proposal for credit analysis by transitioning its status to 'aguardando_analise'.
        This endpoint follows FSM state transitions.
      operationId: submitProposalForAnalysis
      tags:
        - Proposal Workflow
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      responses:
        '200':
          description: Proposal submitted for analysis successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSuccessResponse'
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Invalid status transition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/approve:
    put:
      summary: Approve a proposal
      description: |
        Approves a credit proposal, transitioning its status to 'aprovada'.
        Only users with ANALISTA or ADMINISTRADOR roles can approve proposals.
      operationId: approveProposal
      tags:
        - Proposal Workflow
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                observacoes:
                  type: string
                  description: Optional approval notes
                  example: "Aprovada conforme análise de risco"
                metadata:
                  type: object
                  description: Additional approval metadata
      responses:
        '200':
          description: Proposal approved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSuccessResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Invalid status transition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/reject:
    put:
      summary: Reject a proposal
      description: |
        Rejects a credit proposal, transitioning its status to 'rejeitada'.
        Only users with ANALISTA or ADMINISTRADOR roles can reject proposals.
      operationId: rejectProposal
      tags:
        - Proposal Workflow
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - motivo
              properties:
                motivo:
                  type: string
                  description: Reason for rejection
                  example: "Renda insuficiente para o valor solicitado"
                observacoes:
                  type: string
                  description: Additional rejection notes
                metadata:
                  type: object
                  description: Additional rejection metadata
      responses:
        '200':
          description: Proposal rejected successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSuccessResponse'
        '400':
          description: Missing required rejection reason
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Invalid status transition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/buscar-por-cpf/{cpf}:
    get:
      summary: Search proposals by CPF
      description: |
        Retrieves all proposals associated with a specific CPF.
        Returns a list of proposals for the given customer.
      operationId: getProposalsByCpf
      tags:
        - Proposals
      parameters:
        - name: cpf
          in: path
          required: true
          description: Customer's CPF (11 digits)
          schema:
            type: string
            pattern: '^[0-9]{11}$'
          example: "12345678901"
      responses:
        '200':
          description: Proposals found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalListResponse'
        '400':
          description: Invalid CPF format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: No proposals found for this CPF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/toggle-status:
    put:
      summary: Toggle proposal status (suspend/reactivate)
      description: |
        Toggles proposal status between active and suspended states.
        If proposal is active, it will be suspended. If suspended, it will be reactivated.
      operationId: toggleProposalStatus
      tags:
        - Proposal Workflow
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      responses:
        '200':
          description: Status toggled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  propostaId:
                    type: string
                    format: uuid
                  statusAnterior:
                    type: string
                    example: "aguardando_analise"
                  statusNovo:
                    type: string
                    example: "suspensa"
                  message:
                    type: string
                    example: "Proposta suspensa com sucesso"
        '400':
          description: Invalid operation for current status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Invalid status transition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/documents:
    get:
      summary: List proposal documents
      description: |
        Retrieves all documents associated with a proposal.
        Returns a list of uploaded documents with their metadata.
      operationId: getProposalDocuments
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      responses:
        '200':
          description: Documents retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentInfo'
                  total:
                    type: integer
                    example: 3
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Upload proposal document
      description: |
        Uploads a document for a proposal. Supported file types: PDF, JPG, PNG.
        Maximum file size: 10MB.
      operationId: uploadProposalDocument
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - documentType
              properties:
                file:
                  type: string
                  format: binary
                  description: Document file to upload
                documentType:
                  type: string
                  enum: [cpf, rg, comprovante_renda, comprovante_residencia, outros]
                  description: Type of document being uploaded
                  example: "cpf"
                description:
                  type: string
                  description: Optional document description
                  example: "Documento de CPF do cliente"
      responses:
        '201':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  document:
                    $ref: '#/components/schemas/DocumentInfo'
                  message:
                    type: string
                    example: "Document uploaded successfully"
        '400':
          description: Invalid file or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: File too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/ccb:
    get:
      summary: Download signed CCB document
      description: |
        Downloads the signed CCB (Cédula de Crédito Bancário) document for a proposal.
        Returns a PDF file or a signed URL for download.
      operationId: getSignedCcb
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      responses:
        '200':
          description: CCB document or download URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  url:
                    type: string
                    format: uri
                    description: Signed URL for document download
                  filename:
                    type: string
                    example: "ccb-signed-123.pdf"
                  contentType:
                    type: string
                    example: "application/pdf"
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          description: Proposal or CCB not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/observacoes:
    get:
      summary: Get proposal audit logs
      description: |
        Retrieves the complete audit trail for a proposal, including all status changes,
        observations, and user interactions.
      operationId: getProposalAuditLogs
      tags:
        - Audit
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      responses:
        '200':
          description: Audit logs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLogEntry'
                  total:
                    type: integer
                    example: 5
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/formalizacao:
    get:
      summary: Get formalization status
      description: |
        Retrieves the complete formalization status including CCB generation,
        electronic signature status, and payment slip generation.
      operationId: getFormalizationStatus
      tags:
        - Formalization
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      responses:
        '200':
          description: Formalization status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  proposal:
                    $ref: '#/components/schemas/FormalizationStatus'
                  timeline:
                    type: array
                    items:
                      $ref: '#/components/schemas/FormalizationEvent'
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/gerar-ccb:
    post:
      summary: Generate CCB document
      description: |
        Generates the CCB (Cédula de Crédito Bancário) document for an approved proposal.
        This action can only be performed on approved proposals.
      operationId: generateCcb
      tags:
        - Formalization
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      responses:
        '200':
          description: CCB generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  ccbPath:
                    type: string
                    description: Path to the generated CCB file
                  message:
                    type: string
                    example: "CCB generated successfully"
        '400':
          description: Proposal not in valid status for CCB generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /proposals/{id}/etapa-formalizacao:
    patch:
      summary: Update formalization step
      description: |
        Updates the current formalization step for a proposal.
        Used to track progress through the formalization workflow.
      operationId: updateFormalizationStep
      tags:
        - Formalization
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the proposal
          schema:
            type: string
            format: uuid
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - etapa
              properties:
                etapa:
                  type: string
                  enum: [aceite_solicitado, aceite_confirmado, ccb_gerada, assinatura_enviada, assinatura_concluida, boletos_gerados]
                  description: New formalization step
                  example: "aceite_confirmado"
                observacoes:
                  type: string
                  description: Optional step notes
                metadata:
                  type: object
                  description: Additional step metadata
      responses:
        '200':
          description: Formalization step updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalSuccessResponse'
        '400':
          description: Invalid step transition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: Proposal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateProposalRequest:
      type: object
      required:
        - customerData
        - loanConditions
      properties:
        customerData:
          $ref: '#/components/schemas/CustomerData'
        loanConditions:
          $ref: '#/components/schemas/LoanConditions'
        partnerId:
          type: string
          format: uuid
          description: ID of the partner/broker
          example: "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
        storeId:
          type: string
          description: ID of the store/branch
          example: "1"
        productId:
          type: string  
          description: ID of the credit product
          example: "1"

    CustomerData:
      type: object
      required:
        - name
        - cpf
      properties:
        name:
          type: string
          minLength: 1
          description: Full name of the customer
          example: "João Silva Santos"
        cpf:
          type: string
          pattern: '^[0-9]{11}$'
          description: Customer's CPF (Brazilian tax ID) - 11 digits
          example: "12345678901"
        email:
          type: string
          format: email
          description: Customer's email address
          example: "joao.silva@email.com"
        phone:
          type: string
          description: Customer's phone number
          example: "11999887766"
        birthDate:
          type: string
          format: date
          description: Customer's birth date (ISO 8601 format)
          example: "1985-03-15"
        monthlyIncome:
          type: number
          minimum: 0
          description: Customer's monthly income in BRL
          example: 5000.00
        rg:
          type: string
          description: Customer's RG (Brazilian ID document)
          example: "123456789"
        issuingBody:
          type: string
          description: RG issuing authority
          example: "SSP/SP"
        maritalStatus:
          type: string
          description: Customer's marital status
          enum: [solteiro, casado, divorciado, viuvo, separado]
          example: "solteiro"
        nationality:
          type: string
          description: Customer's nationality
          example: "Brasileira"
        zipCode:
          type: string
          pattern: '^[0-9]{8}$'
          description: ZIP code (CEP) - 8 digits
          example: "01234567"
        address:
          type: string
          description: Full address
          example: "Rua das Flores, 123, Apt 45, Centro"
        occupation:
          type: string
          description: Customer's profession/occupation
          example: "Engenheiro de Software"

    LoanConditions:
      type: object
      required:
        - requestedAmount
        - term
      properties:
        requestedAmount:
          type: number
          minimum: 0.01
          description: Requested loan amount in BRL
          example: 10000.00
        term:
          type: integer
          minimum: 1
          maximum: 84
          description: Loan term in months
          example: 24
        purpose:
          type: string
          description: Purpose of the loan
          example: "Reforma residencial"
        collateral:
          type: string
          description: Collateral for the loan
          example: "Imóvel próprio"
        tacValue:
          type: number
          minimum: 0
          description: TAC (Taxa de Abertura de Crédito) value in BRL
          example: 150.00
        iofValue:
          type: number
          minimum: 0  
          description: IOF (Imposto sobre Operações Financeiras) value in BRL
          example: 38.00
        totalFinancedAmount:
          type: number
          minimum: 0
          description: Total financed amount including fees
          example: 10188.00
        monthlyPayment:
          type: number
          minimum: 0
          description: Monthly payment amount in BRL
          example: 512.50
        interestRate:
          type: number
          minimum: 0
          maximum: 100
          description: Annual interest rate as percentage
          example: 2.99

    ProposalResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the proposal
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
        status:
          type: string
          enum: 
            - aguardando_analise
            - em_analise
            - aprovada
            - rejeitada
            - pendente
            - formalizada
            - paga
          description: Current status of the proposal
          example: "aguardando_analise"
        customerData:
          $ref: '#/components/schemas/CustomerData'
        loanConditions:
          $ref: '#/components/schemas/LoanConditions'
        partnerId:
          type: string
          format: uuid
          description: ID of the partner/broker
        storeId:
          type: string
          description: ID of the store/branch
        productId:
          type: string
          description: ID of the credit product
        createdAt:
          type: string
          format: date-time
          description: Proposal creation timestamp
          example: "2025-08-21T21:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2025-08-21T21:00:00.000Z"
        pendingReason:
          type: string
          description: Reason for pending status (if applicable)
        observations:
          type: string
          description: Additional observations about the proposal
        analysisResult:
          type: object
          description: Results from credit analysis (if completed)

    ProposalSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/ProposalResponse'
        message:
          type: string
          description: Success message
          example: "Proposal created successfully"

    ProposalListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProposalResponse'
        total:
          type: integer
          description: Total number of proposals
          example: 25

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error message
          example: "Internal server error"

    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Validation error"
        details:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: "invalid_type"
              expected:
                type: string
                example: "string"
              received:
                type: string
                example: "undefined"
              path:
                type: array
                items:
                  type: string
                example: ["customerData", "name"]
              message:
                type: string
                example: "Required"

    TransitionErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Invalid status transition from 'aprovada' to 'aguardando_analise'"
        error:
          type: string
          example: "INVALID_TRANSITION"
        currentStatus:
          type: string
          example: "aprovada"
        attemptedStatus:
          type: string
          example: "aguardando_analise"

    DocumentInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique document identifier
          example: "d3b5433f-0efe-4bbb-be01-411e37c262a9"
        proposalId:
          type: string
          format: uuid
          description: Associated proposal ID
          example: "b3b5433f-0efe-4bbb-be01-411e37c262a9"
        documentType:
          type: string
          enum: [cpf, rg, comprovante_renda, comprovante_residencia, ccb, outros]
          description: Type of document
          example: "cpf"
        filename:
          type: string
          description: Original filename
          example: "cpf-cliente.pdf"
        path:
          type: string
          description: Storage path
          example: "documents/proposals/123/cpf-cliente.pdf"
        size:
          type: integer
          description: File size in bytes
          example: 1024576
        mimeType:
          type: string
          description: MIME type of the document
          example: "application/pdf"
        uploadedBy:
          type: string
          format: uuid
          description: ID of the user who uploaded the document
        uploadedAt:
          type: string
          format: date-time
          description: Upload timestamp
          example: "2025-08-21T21:00:00.000Z"
        description:
          type: string
          description: Document description
          example: "Documento de CPF do cliente"

    AuditLogEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique log entry identifier
          example: "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
        acao:
          type: string
          description: Action performed
          example: "mudanca_status_aprovada"
        detalhes:
          type: string
          description: Action details/observations
          example: "Proposta aprovada após análise de crédito"
        status_anterior:
          type: string
          description: Previous status
          example: "em_analise"
        status_novo:
          type: string
          description: New status
          example: "aprovada"
        data_acao:
          type: string
          format: date-time
          description: Action timestamp
          example: "2025-08-21T21:00:00.000Z"
        autor_id:
          type: string
          format: uuid
          description: ID of the user who performed the action
        profiles:
          type: object
          description: User profile information
          properties:
            full_name:
              type: string
              example: "João Silva"
            role:
              type: string
              example: "ANALISTA"
        observacao:
          type: string
          description: Additional observations
        created_at:
          type: string
          format: date-time
          description: Log creation timestamp

    FormalizationStatus:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Proposal ID
        status:
          type: string
          description: Current proposal status
          example: "aprovada"
        ccb_gerado:
          type: boolean
          description: Whether CCB has been generated
          example: true
        caminho_ccb:
          type: string
          description: Path to the CCB file
          example: "documents/ccb/proposta-123-ccb.pdf"
        ccb_gerado_em:
          type: string
          format: date-time
          description: CCB generation timestamp
          example: "2025-08-21T21:00:00.000Z"
        assinatura_eletronica_enviada:
          type: boolean
          description: Whether electronic signature was sent
          example: true
        assinatura_eletronica_concluida:
          type: boolean
          description: Whether electronic signature is completed
          example: false
        clicksign_document_id:
          type: string
          description: ClickSign document ID
          example: "doc-abc123"
        clicksign_envelope_id:
          type: string
          description: ClickSign envelope ID
          example: "env-xyz789"
        boletos_gerados:
          type: boolean
          description: Whether payment slips have been generated
          example: false
        quantidade_boletos_gerados:
          type: integer
          description: Number of payment slips generated
          example: 0
        todos_boletos_enviados:
          type: boolean
          description: Whether all payment slips have been sent
          example: false

    FormalizationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Event ID
        acao:
          type: string
          enum: [CCB_GERADO, ASSINATURA_ENVIADA, ASSINATURA_CONCLUIDA, BOLETOS_GERADOS]
          description: Formalization action
          example: "CCB_GERADO"
        detalhes:
          type: string
          description: Event details
          example: "CCB gerado com sucesso"
        created_at:
          type: string
          format: date-time
          description: Event timestamp
          example: "2025-08-21T21:00:00.000Z"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT-based authentication using Supabase Auth. 
        Include the token in the Authorization header as 'Bearer {token}'.
        
        **Security Features:**
        - Row Level Security (RLS) policies enforce data isolation
        - Role-based access control (RBAC) with 4 roles: ATENDENTE, ANALISTA, GERENTE, ADMINISTRADOR
        - Anti-fragile security architecture with timing attack protection
        - Request rate limiting and input sanitization
        - Comprehensive audit logging for all operations
        
        **Required Permissions by Endpoint:**
        - Proposal creation/editing: ATENDENTE, GERENTE, ADMINISTRADOR
        - Proposal approval/rejection: ANALISTA, ADMINISTRADOR  
        - Document management: All authenticated users
        - Formalization operations: ATENDENTE, GERENTE, ADMINISTRADOR
        - Audit logs: All authenticated users (own data only)

security:
  - BearerAuth: []

tags:
  - name: Proposals
    description: Operations related to credit proposal management
  - name: Proposal Workflow
    description: Operations for proposal status transitions and analysis
  - name: Documents
    description: Document upload, retrieval and management operations
  - name: Formalization
    description: CCB generation, electronic signature, and payment slip operations
  - name: Audit
    description: Audit trail and logging operations for compliance