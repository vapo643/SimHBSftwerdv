### Pacote de Ativação de Missão (PAM) V1.1 (Hotfix de Conformidade da Especificação OpenAPI)

* **Sumário da Missão (O Quê):** Refatorar a especificação OpenAPI V3 (`proposal-api.v1.yaml`) para garantir 100% de conformidade com as nossas doutrinas de arquitetura já estabelecidas nos ADRs 004 (Tratamento de Erros), 007 (Guia de Estilo) e 008 (Contrato de Dados PII).
* **Intenção Estratégica (O Porquê):** Garantir a consistência e a integridade da nossa documentação arquitetural. Uma especificação de API que contradiz as nossas próprias regras de design é uma fonte de confusão e risco. Esta missão irá alinhar o nosso contrato de API com a nossa constituição de engenharia.
* **Histórico Relevante (Consulta Obrigatória):** A missão anterior gerou uma especificação OpenAPI funcional, mas uma revisão revelou que ela não adere às políticas de tratamento de erro, versionamento e segurança de PII que já formalizamos em ADRs anteriores.
* **Modelo Mental (Como se Encaixa):** Aja como um Arquiteto de API a realizar uma revisão de conformidade. A sua tarefa é pegar um artefato existente e refatorá-lo para que ele cumpra rigorosamente os padrões estabelecidos pela empresa.

---
**[NOVA DIRETRIZ DE PESQUISA WEB]**

**Você está autorizado a utilizar a sua capacidade de pesquisa na web para consultar a documentação oficial da OpenAPI 3.0 e da RFC 7807, bem como artigos sobre melhores práticas para versionamento de API e mascaramento de PII, para garantir que a sua refatoração seja de nível de produção.**

---

**IMPLEMENTAR:**
Refatoração de Conformidade da Especificação OpenAPI V3

**CURRENT STATE:**
A especificação `architecture/02-technical/api-contracts/proposal-api.v1.yaml` está funcional, mas desalinhada com três dos nossos principais ADRs.

**EXPECTED (Estado Final de Sucesso):**
O arquivo `architecture/02-technical/api-contracts/proposal-api.v1.yaml` é modificado para refletir as seguintes mudanças mandatórias:

1.  **Conformidade com ADR-007 (Versionamento):** Todos os `paths` da API devem ser atualizados para incluir o prefixo de versão `/v1`.
2.  **Conformidade com ADR-004 (Tratamento de Erros):** Todas as respostas de erro (`4xx`, `5xx`) devem ser refatoradas para usar um `$ref` que aponte para um schema `ProblemDetails` central, em conformidade com a **RFC 7807**.
3.  **Conformidade com ADR-008 (Segurança de PII):** Os schemas de resposta para os endpoints `GET` devem ser refatorados para refletir a nossa política de mascaramento de dados.

**CONSTRAINTS (Roadmap de Implementação):**
1.  **Refatore o Versionamento:** Adicione o prefixo `/v1` a todos os `paths`.
2.  **Refatore os Erros:** Crie um schema reutilizável `ProblemDetails` e refatore todas as respostas de erro para o utilizar.
3.  **Refatore a Segurança de PII:** Modifique os schemas de resposta para refletir a nossa política de mascaramento.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que a refatoração completa para conformidade pode ser realizada em uma única missão focada."]
* **VALIDAÇÃO PENDENTE:** [A especificação final e alinhada deve ser ratificada pelo Arquiteto Chefe como a versão canônica.]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear o ficheiro exato a ser modificado.
2.  Garantir que as três áreas de não-conformidade são completamente corrigidas.
3.  Executar `get_latest_lsp_diagnostics` para garantir 0 erros.
4.  **Declarar Nível de Confiança (0 a 100%)**.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (revisão da especificação YAML gerada).
7.  **Documentar Decisões Técnicas**.