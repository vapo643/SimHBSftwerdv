### **Pacote de Ativa√ß√£o de Miss√£o (PAM) V1.5 - REM-S2-002.1 (Remedia√ß√£o)**

**[DIRETRIZ MESTRA DE DIVULGA√á√ÉO - PDT V2.0 ATIVADA]**
*Sua resposta deve ser exaustiva. Reporte a realidade t√©cnica sem omiss√µes. A transpar√™ncia radical √© mandat√≥ria.*

* **Sum√°rio da Miss√£o (O Qu√™):** Refatorar o setup dos testes em `tests/integration/unit-of-work.test.ts` para satisfazer a fun√ß√£o de valida√ß√£o `validate_proposta_integrity()`, garantindo que todos os testes no arquivo passem com sucesso.
* **Inten√ß√£o Estrat√©gica (O Porqu√™):** Finalizar a valida√ß√£o do Unit of Work e eliminar a d√≠vida t√©cnica de um arquivo de teste quebrado. Um arquivo de teste 100% funcional √© a √∫nica "Defini√ß√£o de Feito" aceit√°vel e nos d√° a confian√ßa necess√°ria para usar o UoW em futuras implementa√ß√µes.
* **Hist√≥rico Relevante (Consulta Obrigat√≥ria):** Sua √∫ltima execu√ß√£o provou que o `ROLLBACK` funciona, mas os testes de `COMMIT` falham devido a uma regra de neg√≥cio que valida a rela√ß√£o entre o usu√°rio criador da proposta e a loja (`lojaId`) da proposta.
* **Modelo Mental (Como se Encaixa):** Voc√™ √© um engenheiro de QA finalizando um cen√°rio de teste. O trabalho pesado de provar o rollback foi feito. Agora, voc√™ precisa fornecer os dados de setup corretos para que os testes de "caminho feliz" tamb√©m passem, garantindo que a implementa√ß√£o n√£o quebrou as regras de neg√≥cio existentes.
* **Riscos Antecipados e Contramedidas:**
    * **Risco:** **M√âDIO** - A l√≥gica para associar um gerente a uma loja no setup do teste pode ser implementada incorretamente, levando a mais ciclos de depura√ß√£o.
    * **Contramedida:** A implementa√ß√£o deve ser expl√≠cita e direta: antes de cada teste, garanta que existe um registro na tabela `gerente_lojas` que conecta o `gerenteId` ao `lojaId` que ser√£o usados na cria√ß√£o da `mockProposta`.

---

**IMPLEMENTAR:**
User Story REM-S2-002.1: Estabilizar Teste de Integra√ß√£o do Unit of Work

**CONTEXT:**
N√≥s validamos com sucesso que o Unit of Work (UoW) executa o `ROLLBACK` corretamente. No entanto, os testes de `COMMIT` (caminho feliz) est√£o falhando porque nosso banco de dados possui uma regra de neg√≥cio (`validate_proposta_integrity`) que impede um usu√°rio de criar uma proposta para uma loja √† qual ele n√£o est√° associado. Para finalizar a valida√ß√£o do UoW, precisamos corrigir o setup dos nossos testes para que ele respeite essa regra.

**CURRENT STATE:**
O arquivo `tests/integration/unit-of-work.test.ts` tem 1 teste passando (rollback) e 2 falhando. As falhas ocorrem com a mensagem de erro `"User does not belong to the specified store"`, indicando que a constraint de integridade do banco de dados foi violada. O setup do teste cria um usu√°rio e uma loja, mas n√£o cria o registro de associa√ß√£o entre eles na tabela `gerente_lojas`.

**EXPECTED (Estado Final de Sucesso):**
1.  **Setup de Teste Corrigido:** O bloco `beforeEach` (ou um setup similar) no arquivo `tests/integration/unit-of-work.test.ts` deve ser modificado. Al√©m de criar o parceiro, a loja e o perfil de usu√°rio, ele DEVE inserir um registro na tabela `gerente_lojas` para associar o usu√°rio (gerente) √† loja criada.
2.  **Todos os Testes Passando:** A execu√ß√£o do comando `npx vitest run tests/integration/unit-of-work.test.ts` deve resultar em **3 testes passando** (`3 passed`).
3.  **Evid√™ncia de Sucesso:** O output completo e n√£o resumido da execu√ß√£o bem-sucedida do teste deve ser fornecido como prova final da conclus√£o da miss√£o.

**CONSTRAINTS (Roadmap de Implementa√ß√£o):**
1.  **Analisar Tabela de Jun√ß√£o:** Investigue o schema da tabela `gerente_lojas` em `shared/schema.ts` para entender as colunas necess√°rias (`gerenteId`, `lojaId`).
2.  **Modificar Setup do Teste:** No arquivo `tests/integration/unit-of-work.test.ts`, localize o bloco `beforeEach`. Adicione uma nova inser√ß√£o de dados (`db.insert(gerenteLojas).values(...)`) que conecte o `gerenteId` e o `lojaId` criados no setup.
3.  **Execu√ß√£o e Valida√ß√£o Final:** Execute o comando `npx vitest run tests/integration/unit-of-work.test.ts`.
4.  **Fornecer Prova:** Cole o output completo do terminal, que deve mostrar claramente que os 3 testes passaram.
5.  **Verifica√ß√£o Final:** Execute o protocolo `7-CHECK FULL` e preencha a declara√ß√£o de incerteza.

---

**DECLARA√ß√£o DE INCERTEZA (OBRIGAT√ìRIO):**
* **CONFIAN√áA NA IMPLEMENTA√á√ÉO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/M√âDIO/ALTO/CR√çTICO e uma breve descri√ß√£o]
* **DECIS√ïES T√âCNICAS ASSUMIDAS:** [Listar decis√µes tomadas que podem ter implica√ß√µes futuras]
* **VALIDA√á√ÉO PENDENTE:** [Listar a√ß√µes que o Orquestrador (GEM 02) ou o QA (GEM 03) devem validar]
---
---
[PGI ATIVO | LEMBRETE DE ESTADO DO ROADMAP]
- **Roadmap em Standby:** "üöÄ ROADMAP MESTRE DE IMPLEMENTA√á√ÉO_ OPERA√á√ÉO A√áO L√çQUIDO.md"
- **Pr√≥ximo Passo a ser Retomado:** Milestone M2: Data & Domain
- **Miss√£o de Emerg√™ncia Atual:** "Roadmap de Remedia√ß√£o do Sprint 2"
---