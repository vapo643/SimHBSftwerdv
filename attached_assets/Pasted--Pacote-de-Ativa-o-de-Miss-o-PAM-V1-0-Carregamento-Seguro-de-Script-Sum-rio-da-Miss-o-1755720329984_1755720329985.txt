### Pacote de Ativação de Missão (PAM) V1.0 (Carregamento Seguro de Script)

* **Sumário da Missão (O Quê):** Modificar o arquivo `client/index.html` para carregar de forma segura o script externo `custom-elements-protection.js`.
* **Intenção Estratégica (O Porquê):** Restaurar a funcionalidade de proteção de *custom elements* de uma maneira que seja segura, manutenível e compatível com uma futura Content Security Policy (CSP). Esta ação conclui a remediação da nossa violação de segurança mais crítica.
* **Histórico Relevante (Consulta Obrigatória):** A missão anterior (Passo 1.1) moveu o script inline para o arquivo `client/src/scripts/custom-elements-protection.js`. O script está atualmente inativo.
* **Modelo Mental (Como se Encaixa):** Esta é uma missão de modificação de HTML. O Agente irá adicionar uma única tag `<script>` ao `index.html`, apontando para o arquivo JavaScript que criamos na missão anterior.
* **Riscos Antecipados e Contramedidas:**
    * **Risco:** O caminho (`src`) para o script pode estar incorreto, ou o script pode ser carregado de uma forma que bloqueie a renderização (`render-blocking`).
    * **Contramedida:** O prompt especifica o uso do atributo `defer` para garantir o carregamento assíncrono e não-bloqueante, e a validação final confirmará que o script foi carregado e executado.

---

**IMPLEMENTAR:**
Carregamento Seguro do Script Externo

**CURRENT STATE:**
O arquivo `client/index.html` está limpo do script inline, mas, como resultado, a funcionalidade de proteção que o script fornecia está desativada.

**EXPECTED (Estado Final de Sucesso):**
1.  O arquivo `client/index.html` é modificado.
2.  Uma nova tag `<script>` é adicionada dentro da tag `<head>`.
3.  A nova tag possui os atributos `type="module"` e `src` apontando para o caminho correto do script (ex: `/src/scripts/custom-elements-protection.js`).
4.  A aplicação carrega e funciona corretamente, sem erros de "404 Not Found" para o script no console do navegador.

**CONSTRAINTS (Roadmap de Implementação):**
1.  **Local da Modificação:** A nova tag `<script>` deve ser inserida dentro da seção `<head>` do arquivo `client/index.html`.
2.  **Atributos Corretos:** A tag deve ser: `<script type="module" src="/src/scripts/custom-elements-protection.js"></script>`. O Vite (nosso build tool) irá lidar com o caminho e o processamento corretos.
3.  **Validação Final Mandatória:** Como prova de sucesso, recarregue a aplicação e abra o console do navegador. A missão só é considerada bem-sucedida se **não houver erros 404** relacionados ao carregamento do `custom-elements-protection.js`. Confirme este estado no seu relatório final.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que o Vite servirá corretamente os arquivos do diretório `src/` e que `type=module` é a abordagem correta para o ambiente do projeto."]
* **VALIDAÇÃO PENDENTE:** [Nenhuma. O sucesso é definido pelo carregamento bem-sucedido do script, verificado no console do navegador.]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear o ficheiro exato a ser modificado (`client/index.html`).
2.  Garantir que a tag `<script>` e seus atributos estão sintaticamente corretos.
3.  Executar `get_latest_lsp_diagnostics` para garantir 0 erros novos.
4.  **Declarar Nível de Confiança (0 a 100%)**.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (verificar o console do navegador para confirmar o carregamento bem-sucedido do script).
7.  **Documentar Decisões Técnicas**.