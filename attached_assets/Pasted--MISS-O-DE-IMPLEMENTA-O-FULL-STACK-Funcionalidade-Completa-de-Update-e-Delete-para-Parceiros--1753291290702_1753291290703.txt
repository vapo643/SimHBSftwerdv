# MISSÃO DE IMPLEMENTAÇÃO (FULL-STACK): Funcionalidade Completa de Update e Delete para Parceiros

**CONTEXTO:** Estamos a implementar a funcionalidade de ponta a ponta para a "Gestão de Parceiros". A missão envolve a criação de endpoints de backend e a integração da interface de usuário para as operações de atualização e exclusão.

**AÇÃO:** Implemente a funcionalidade completa, seguindo o roadmap de duas fases abaixo.

**ROADMAP DE EXECUÇÃO:**

**FASE 1: BACKEND (GARANTIR A FUNDAÇÃO)**
* **Implemente o Endpoint `PUT /api/admin/parceiros/:id`:**
    * **Lógica:** A rota deve receber um `id` de parceiro. Valide o corpo da requisição (`req.body`) com um schema Zod apropriado (ex: `updateParceiroSchema`). Se a validação passar, atualize o parceiro no banco de dados e retorne os dados atualizados com um status `200 OK`. Se a validação falhar, retorne `400 Bad Request`.
* **Implemente o Endpoint `DELETE /api/admin/parceiros/:id`:**
    * **Lógica:** A rota deve receber um `id`.
    * **Regra de Negócio Crítica:** Antes de excluir, execute uma consulta para verificar se este parceiro possui `Lojas` associadas a ele.
    * Se existirem lojas, a exclusão deve ser bloqueada, e a API deve retornar um status `409 Conflict` com a mensagem clara: "Não é possível excluir um parceiro que possui lojas cadastradas."
    * Se não houver lojas associadas, exclua o parceiro e retorne um status `204 No Content`.

**FASE 2: FRONTEND (CONECTAR A INTERFACE)**
* **Ficheiro Alvo:** `/client/src/pages/admin/parceiros.tsx` (ou similar).
* **Ação 1: Implementar Ações na Tabela:**
    * Garanta que cada linha da tabela de parceiros tenha botões para "Editar" e "Excluir".
* **Ação 2: Conectar Funcionalidade de Edição:**
    * Ao clicar em "Editar", o modal de formulário deve abrir, pré-preenchido com os dados do parceiro selecionado.
    * A submissão deste formulário deve chamar o endpoint `PUT /api/admin/parceiros/:id`.
    * Após o sucesso, a lista na tabela deve ser atualizada para refletir os novos dados.
* **Ação 3: Conectar Funcionalidade de Exclusão:**
    * Ao clicar em "Excluir", um modal de confirmação deve ser exibido.
    * Se o usuário confirmar, o frontend deve chamar o endpoint `DELETE /api/admin/parceiros/:id`.
    * Em caso de sucesso (`204`), o parceiro deve ser removido da lista na interface.
    * Em caso de erro (`409` ou outro), uma notificação de erro deve ser exibida ao usuário com a mensagem recebida da API.

**FASE 3: VALIDAÇÃO**
* **Lembrete:** Após a implementação, a funcionalidade deve ser testada para garantir que os endpoints do backend e a interface do frontend funcionam em harmonia, e que todos os cenários (sucesso e erro) são tratados corretamente.