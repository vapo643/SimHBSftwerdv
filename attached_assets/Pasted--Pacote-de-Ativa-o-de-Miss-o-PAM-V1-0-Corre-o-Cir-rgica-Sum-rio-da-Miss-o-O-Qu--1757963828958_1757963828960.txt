### **Pacote de Ativa√ß√£o de Miss√£o (PAM) V1.0 - Corre√ß√£o Cir√∫rgica**

* **Sum√°rio da Miss√£o (O Qu√™):** Refatorar a fun√ß√£o `safeRender` no componente da Fila de An√°lise para utilizar o `formatMoney` existente, garantindo que todos os valores de `rendaMensal` sejam exibidos com a formata√ß√£o monet√°ria correta e consistente em todo o sistema.
* **Inten√ß√£o Estrat√©gica (O Porqu√™):** Corrigir a corrup√ß√£o de dados visuais que est√° a induzir os analistas de cr√©dito a erro, restaurando a integridade e a confian√ßa nas informa√ß√µes financeiras apresentadas e eliminando um risco operacional cr√≠tico.
* **Modelo Mental (Como se Encaixa):** A solu√ß√£o envolve uma pequena, mas cr√≠tica, refatora√ß√£o. Em vez de duplicar a l√≥gica, vamos promover o reuso de c√≥digo. Iremos modificar o `proposta.mapper.ts` para exportar a sua funcionalidade de formata√ß√£o e, em seguida, importar e aplicar essa fun√ß√£o no local exato da falha em `analise.tsx`.
* **Riscos Antecipados e Contramedidas:**
    * **Risco:** A fun√ß√£o `formatMoney` pode n√£o estar acess√≠vel (ex: ser `private`). A modifica√ß√£o para torn√°-la `public` pode, teoricamente, ter efeitos colaterais se mal gerida.
    * **Contramedida:** O roadmap √© faseado. A primeira etapa √© garantir a acessibilidade da fun√ß√£o `formatMoney` de forma segura. A valida√ß√£o final garantir√° que a mudan√ßa n√£o introduziu regress√µes.

---

**IMPLEMENTAR:**
Plano de Refinamento para a Formata√ß√£o Monet√°ria na Fila de An√°lise.

**CURRENT STATE:**
A fun√ß√£o `safeRender` em `/client/src/pages/credito/analise.tsx` n√£o formata valores num√©ricos como moeda. Um `rendaMensal` de `300000` √© exibido incorretamente como a string `"300000"` em vez de `"R$ 300.000,00"`.

**EXPECTED (Estado Final de Sucesso):**
1. A fun√ß√£o `safeRender` em `/client/src/pages/credito/analise.tsx` deve invocar a l√≥gica de formata√ß√£o monet√°ria correta para qualquer valor num√©rico.
2. Uma proposta com `rendaMensal` de `300000` deve ser exibida na UI da Fila de An√°lise como **"R$ 300.000,00"**.
3. A solu√ß√£o deve priorizar o reuso do c√≥digo existente, evitando duplica√ß√£o de l√≥gica.

**CONSTRAINTS (Roadmap de Implementa√ß√£o Faseado):**

**Passo 1: [Prepara√ß√£o] Expor a Fun√ß√£o de Formata√ß√£o Existente**
1.  Abra o ficheiro `/client/src/mappers/proposta.mapper.ts`.
2.  Localize a fun√ß√£o `formatMoney`.
3.  Garanta que a sua assinatura seja `public static formatMoney(value: any): string`. Se for `private`, altere-a para `public`. Isto √© essencial para permitir o reuso.

**Passo 2: [Execu√ß√£o] Corrigir a Renderiza√ß√£o na Fila de An√°lise**
1.  Abra o ficheiro `/client/src/pages/credito/analise.tsx`.
2.  Adicione a seguinte importa√ß√£o no topo do ficheiro:
    ```typescript
    import { PropostaMapper } from '../../mappers/proposta.mapper';
    ```
3.  Localize a fun√ß√£o `safeRender`.
4.  Modifique a linha de verifica√ß√£o de `string` ou `number`:
    * **DE:**
        ```typescript
        if (typeof value === 'string' || typeof value === 'number') return String(value); // üö® BUG
        ```
    * **PARA:**
        ```typescript
        if (typeof value === 'number') {
          return PropostaMapper.formatMoney(value); // ‚úÖ CORRE√á√ÉO
        }
        if (typeof value === 'string') {
          return value;
        }
        ```

**Passo 3: [Valida√ß√£o] Verifica√ß√£o Final de Integridade**
1.  Ap√≥s as modifica√ß√µes, execute o comando `get_latest_lsp_diagnostics`.
2.  **O resultado DEVE ser zero erros.** Se houver qualquer erro, pare e corrija-o antes de prosseguir.
3.  Declare a sua confian√ßa na implementa√ß√£o e os riscos identificados.

---

**DECLARA√á√ÉO DE INCERTEZA (OBRIGAT√ìRIO):**

* **CONFIAN√áA NA IMPLEMENTA√á√ÉO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/M√âDIO/ALTO/CR√çTICO e uma breve descri√ß√£o]
* **DECIS√ïES T√âCNICAS ASSUMIDAS:** [Listar decis√µes tomadas que podem ter implica√ß√µes futuras]
* **VALIDA√á√ÉO PENDENTE:** [Listar a√ß√µes que o Orquestrador (GEM 02) ou o QA (GEM 03) devem validar]

---

**PROTOCOLO OBRIGAT√ìRIO 7-CHECK EXPANDIDO:**
1.  Mapear ficheiros e fun√ß√µes exatas afetadas.
2.  Garantir importa√ß√µes e tipos corretos.
3.  Executar `get_latest_lsp_diagnostics` e corrigir **TODOS** os erros.
4.  **Declarar N√≠vel de Confian√ßa (0-100%)** na implementa√ß√£o.
5.  **Categorizar Riscos Descobertos** (BAIXO/M√âDIO/ALTO/CR√çTICO).
6.  Realizar teste funcional completo, confirmando que a renda √© exibida corretamente.
7.  **Documentar Decis√µes T√©cnicas** assumidas (ex: "Tornada a fun√ß√£o `formatMoney` p√∫blica para promover reuso de c√≥digo.").