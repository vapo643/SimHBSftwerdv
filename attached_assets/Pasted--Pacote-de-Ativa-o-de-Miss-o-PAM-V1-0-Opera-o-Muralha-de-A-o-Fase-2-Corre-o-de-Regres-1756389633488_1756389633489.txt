### Pacote de Ativação de Missão (PAM) V1.0 - Operação "Muralha de Aço" / Fase 2: Correção de Regressão

* **Sumário da Missão (O Quê):** Corrigir a regressão de segurança no webhook do Banco Inter, reintroduzindo a chamada obrigatória ao serviço de auditoria, e implementar o `MarkBoletoAsPaidUseCase` em falta.
* **Intenção Estratégica (O Porquê):** Garantir que 100% das operações financeiras e de integração crítica sejam seguras, autênticas e, acima de tudo, completamente auditáveis, sem exceções. A rastreabilidade é um pilar não negociável da nossa arquitetura de segurança.
* **Modelo Mental (Como se Encaixa):** Você é um engenheiro de segurança a corrigir uma falha crítica de implementação. Sua tarefa é seguir as especificações de forma literal, sem tomar decisões arquiteturais que reduzam os níveis de segurança ou auditoria.

---

**IMPLEMENTAR (Plano de Correção):**
Execute a seguinte sequência de ações.

**CURRENT STATE:**
1. O webhook do Banco Inter em `server/routes/webhooks/inter.ts` foi modificado para usar `console.log` em vez de um serviço de auditoria.
2. O caso de uso `MarkBoletoAsPaidUseCase` não existe.

**EXPECTED (Estado Final de Sucesso):**
1. O webhook do Banco Inter valida a autenticidade da requisição e, em caso de sucesso, regista o evento de forma explícita através do `auditService` ou de um serviço de log de segurança dedicado.
2. O ficheiro `server/modules/boleto/application/MarkBoletoAsPaidUseCase.ts` existe, encapsula a lógica de negócio para marcar um boleto como pago e regista a operação no `auditService`.

**CONSTRAINTS (Roadmap de Implementação):**

**Passo 1: Restaurar a Auditoria no Webhook do Banco Inter**
1.1. Abra o ficheiro `server/routes/webhooks/inter.ts`.
1.2. **Restrição Crítica:** Remova a chamada `console.log` ou `winston.log` para o evento do webhook.
1.3. Re-implemente a chamada ao serviço de auditoria (`auditService.logSecurityEvent` ou similar) para registar cada chamada de webhook recebida e validada. A chamada deve incluir o *payload* do evento como metadados para rastreabilidade. Se o método exato não for encontrado, você deve criá-lo no `auditService` conforme as melhores práticas existentes no projeto.

**Passo 2: Criar o `MarkBoletoAsPaidUseCase` com Auditoria**
2.1. Crie o ficheiro `server/modules/boleto/application/MarkBoletoAsPaidUseCase.ts`.
2.2. Implemente a classe `MarkBoletoAsPaidUseCase`. Ela deve:
    a) Receber o `IUnitOfWork` por injeção de dependência.
    b) No método `execute`, carregar o boleto e a proposta associada através dos repositórios transacionais do UoW.
    c) Executar o método de domínio para alterar o status do boleto (ex: `boleto.markAsPaid()`).
    d) Salvar as alterações através dos repositórios do UoW.
    e) **Restrição Crítica:** Dentro da transação, após a lógica de negócio, chamar o `auditService` para registar que o boleto foi marcado como pago, incluindo o `boletoId`, `propostaId`, e o `userId` do responsável.

**Passo 3: Validação Final**
3.1. Apresente o código final do endpoint do webhook em `server/routes/webhooks/inter.ts`, mostrando a chamada de auditoria restaurada.
3.2. Apresente o código completo do novo `server/modules/boleto/application/MarkBoletoAsPaidUseCase.ts`.
3.3. Execute `get_latest_lsp_diagnostics` para confirmar que não há erros de compilação.

---

### **PROTOCOLO DE DIVULGAÇÃO TOTAL (PDT) V1.0 (MANDATÓRIO)**

* **Diretriz Mestra:** Completude exaustiva. Você DEVE listar a totalidade dos seus achados, riscos e recomendações. A omissão é uma falha de missão.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** 90%
* **RISCOS IDENTIFICADOS:** MÉDIO. O principal risco é que o agente, ao não encontrar um método de log específico, tente novamente simplificar ou remover a funcionalidade. O PAM é explícito: se o método não existir, ele deve ser criado.
* **DECISÕES TÉCNICAS ASSUMIDAS:** O `auditService` é a localização canónica para a lógica de auditoria.
* **VALIDAÇÃO PENDENTE:** Testes de integração são mandatórios para validar o fluxo completo do `MarkBoletoAsPaidUseCase` e a correta execução da auditoria.