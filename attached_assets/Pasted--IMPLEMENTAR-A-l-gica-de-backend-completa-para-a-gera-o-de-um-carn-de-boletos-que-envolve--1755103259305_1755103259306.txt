**IMPLEMENTAR:**
A lógica de backend completa para a geração de um "carnê" de boletos, que envolve baixar todas as parcelas de uma proposta do Banco Inter, fundi-las em um único PDF e disponibilizar para download.

**CONTEXT:**
O requisito de negócio mudou. Em vez de baixar boletos individuais, o atendente precisa baixar um único ficheiro PDF consolidado ("carnê") contendo todas as parcelas, para impressão imediata. Esta missão é para construir o motor de backend que realiza esta operação complexa.

**CURRENT STATE:**
O sistema possui a capacidade de baixar um único PDF do Banco Inter. Não existe lógica para baixar múltiplos PDFs em lote nem para fundi-los.

**EXPECTED (Estado Final de Sucesso):**
1.  Um novo serviço de backend (`pdfMergeService.ts`) capaz de orquestrar a fusão de PDFs.
2.  Um novo endpoint de API (ex: `GET /api/propostas/:id/carne-pdf`) que, ao ser chamado:
    a. Baixa todos os PDFs de boletos individuais associados à proposta do Banco Inter.
    b. Funde todos eles em um único documento PDF na memória.
    c. Salva este PDF consolidado no Supabase Storage.
    d. Retorna uma URL segura e temporária para o download deste ficheiro final.

**CONSTRAINTS (Roadmap de Implementação):**

**1. Criação do Serviço de Fusão (`pdfMergeService.ts`):**
    - **Ação:** Crie um novo ficheiro de serviço.
    - **Implementação:** Crie uma função principal, `gerarCarneParaProposta(propostaId)`, que executará os seguintes passos:
        1.  **Buscar Boletos:** Consulte nossa tabela `inter_collections` para obter todos os `codigoSolicitacao` associados ao `propostaId`.
        2.  **Download em Lote:** Em um loop, use a função `interBankService.obterPdfCobranca()` para baixar os buffers de PDF de **TODOS** os boletos.
        3.  **Fusão com `pdf-lib`:**
            - Crie um novo `PDFDocument` em branco.
            - Para cada buffer de boleto baixado, carregue-o com `PDFDocument.load()` e use `pdfDoc.copyPages()` para copiar suas páginas para o documento principal.
            - Salve o documento final em um novo buffer.
        4.  **Retorno:** Retorne o buffer do PDF consolidado.

**2. Implementação do Endpoint da API:**
    - **Ação:** Crie a nova rota `GET /api/propostas/:id/carne-pdf`.
    - **Implementação:**
        a. Proteja a rota com nosso middleware de autenticação.
        b. Chame a função `gerarCarneParaProposta(propostaId)` para obter o buffer do carnê.
        c. Faça o upload deste buffer para o Supabase Storage na pasta `carnes/{propostaId}/carne_{timestamp}.pdf`.
        d. Gere e retorne uma URL assinada (`signedUrl`) para este ficheiro.

**PROTOCOLO OBRIGATÓRIO 5-CHECK:**
1.  Mapear todos os arquivos envolvidos.
2.  Implementar de forma modular (serviço separado para a fusão).
3.  Executar `get_latest_lsp_diagnostics` para garantir ZERO erros.
4.  Criar um script de teste isolado para validar a função de fusão antes de integrá-la à API.
5.  O critério de sucesso é que o endpoint retorne uma URL válida do Supabase e que o ficheiro nesta URL seja um PDF com todas as páginas dos boletos da proposta.