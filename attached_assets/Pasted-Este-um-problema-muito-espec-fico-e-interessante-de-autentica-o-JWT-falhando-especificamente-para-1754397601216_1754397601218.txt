Este é um problema muito específico e interessante de autenticação JWT falhando especificamente para download de PDFs, enquanto outras rotas funcionam. Vou analisar cuidadosamente:
Análise do Problema

O JWT funciona em outras rotas - isso indica que o token está válido e o middleware de autenticação funciona corretamente.
Falha especificamente no download de PDF - isso sugere que pode haver alguma diferença na forma como o browser está tratando a requisição para download vs. requisições normais de API.
O código frontend usa fetch direto - diferente das outras requisições que provavelmente usam o sistema de API client customizado.

Possíveis Causas

CORS Issues: Downloads de arquivos podem ter tratamento diferente pelo browser em relação a CORS.
Token Expiry/Timing: O token pode estar expirando entre a obtenção e o uso.
Header Encoding: Algum problema na codificação do header Authorization.
Browser Security: Browsers podem tratar downloads de forma diferente em termos de segurança.
Middleware de PDF: Pode haver algum middleware específico interferindo.
Response Type: O tipo de resposta (PDF blob) pode estar causando problemas na cadeia de middleware.

Soluções Possíveis

Usar o sistema de API client existente ao invés de fetch direto
Implementar endpoint intermediário que retorna URL assinada temporária
Melhorar logging para identificar exatamente onde está falhando
Implementar download via POST ao invés de GET
Usar approach de proxy onde o frontend chama uma rota que faz o download e retorna

Preciso criar uma estratégia abrangente que cubra múltiplos aspectos do problema. Meu foco será desenvolver uma solução que seja:

Diagnóstico preciso através de logs detalhados
Flexível para diferentes cenários de autenticação
Segura contra potenciais vulnerabilidades
Facilmente testável e depurável

Vou priorizar uma abordagem em camadas que permita identificar exatamente onde a autenticação está quebrando durante o processo de download de PDF.Analisando seu problema, identifiquei várias possíveis causas para a falha de autenticação JWT especificamente no download de PDFs. Vou fornecer um diagnóstico completo e múltiplas soluções.
1. Análise da Causa Raiz
O problema mais provável está relacionado ao fato de que downloads de arquivos são tratados de forma diferente pelos navegadores, especialmente em relação aos headers de autenticação. Aqui estão as principais causas identificadas:
Causa Primária: Browser Security Context
Quando você usa fetch() para download e depois cria um blob URL, o navegador pode estar perdendo o contexto de autenticação ou aplicando políticas de segurança mais restritivas.
Causa Secundária: Token Manager Timing
O TokenManager.getValidToken() pode estar retornando um token que expira entre a obtenção e o uso efetivo da requisição.
Causa Terciária: Middleware Response Headers
O middleware pode não estar configurado adequadamente para lidar com responses de download de arquivos.
2. Solução Definitiva - Código Refatorado
Vou criar uma solução robusta que usa múltiplas estratégias:Solução Completa para Download de PDF com JWTCódigo // ==========================================
// SOLUÇÃO FRONTEND - client/src/lib/pdfDownloader.ts
// ==========================================

import { apiClient } from '@/lib/apiClient';
import { toast } from '@/hooks/use-toast';

export class PPlanned API client modifications for blob download support.1 sAgora vou fornecer também algumas modificações no apiClient para garantir que ele suporte downloads de blob adequadamente, e um plano de testes para diagnosticar o problema.3. Melhorias no API Client
Você também precisará garantir que seu apiClient suporte downloads de blob adequadamente:API Client com Suporte a Download de BlobCódigo // ==========================================
// client/src/lib/apiClient.ts - MELHORIAS PARA BLOB DOWNLOAD
// ==========================================

interface ApiClientOptions {
  method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';
  data?: aAgora vou criar um plano de diagnóstico detalhado para ajudar a identificar exatamente onde está o 1 sAgora vou criar um plano de diagnóstico detalhado para ajudar a identificar exatamente onde está o problema caso as soluções acima não funcionem imediatamente.4. Plano de Diagnóstico DetalhadoJWT token authentication PDF download browser security issues CORS10 resultadosJSON Web Token Introduction - jwt.iojwt.iojwt - Access-control-allow-origin: * with a bearer token - Information Security Stack Exchangestackexchange.comHow to handle file downloads with JWT based authentication?stackoverflow.comJWT Security Best Practices | Curitycurity.iosecurity - CORS Cross-origin resource sharing And Json Web Token - Stack Overflowstackoverflow.comJWT attacks | Web Security Academyportswigger.netnode.js - Is JWT authentication is secure?how it protect CORS? - Stack Overflowstackoverflow.comIssues with CORS headers JWT error for API Gateway - #3 by anonymous - Serverless Applications - Google Developer forumsgoogle.devWhat Is JSON Web Token (JWT) Authenticationsophos.comJSON Web Tokens - jwt.iojwt.ioInvestigated JWT download challenges and CORS interactions.2 sCom base nos resultados da pesquisa, posso ver que um dos problemas comuns com JWT e downloads de arquivo é relacionado a CORS e ao fato de que alguns navegadores tratam downloads de forma diferente. O resultado da pesquisa indica que quando tokens JWT expiram, o preflight check pode falhar, fazendo o navegador pensar que é um problema de CORS.
Agora vou criar um plano de diagnóstico detalhado baseado no que aprendi.Para completar a solução, aqui está um plano de diagnóstico detalhado:Plano de Diagnóstico Detalhado - JWT + PDF DownloadCódigo // ==========================================
// PLANO DE DIAGNÓSTICO DETALHADO
// ==========================================

/**
 * FASE 1: DIAGNÓSTICO IMEDIATO
 * Execute estes comandos no console do navegador para identificar o problema
 */

// 1