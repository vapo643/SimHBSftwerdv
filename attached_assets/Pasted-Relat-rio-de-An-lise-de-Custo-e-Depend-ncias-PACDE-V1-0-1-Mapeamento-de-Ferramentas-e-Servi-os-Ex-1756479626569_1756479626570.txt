Relatório de Análise de Custo e Dependências (PACDE) V1.0
1. Mapeamento de Ferramentas e Serviços Externos
A análise da base de código (package.json, docker-compose.yml, .github/workflows/ci.yml, ADRs e outros documentos) revela o seguinte ecossistema de dependências:

Ferramenta / Serviço	Categoria	Custo Imediato (MVP)	Necessidade de Pagamento Externo
Supabase	BaaS (Backend as a Service)	Freemium / Pago	Sim
Redis Cloud	Cache & Message Broker	Freemium / Pago	Sim
Sentry	Monitoramento de Erros	Freemium / Pago	Sim
ClickSign	Assinatura Eletrônica	Pago (por assinatura/envelope)	Sim
Banco Inter	Gateway de Pagamento	Pago (por transação)	Sim
Docker	Containerização	Gratuito (Desktop pode ter licença)	Não
PostgreSQL	Banco de Dados	Gratuito (Software)	Não (Custo está no Supabase)
BullMQ	Biblioteca de Fila	Gratuito (Open Source)	Não
Node.js/Express.js	Backend Runtime/Framework	Gratuito (Open Source)	Não
React/Vite	Frontend Framework/Build Tool	Gratuito (Open Source)	Não
GitHub Actions	CI/CD	Freemium / Pago (por minutos)	Sim (se exceder o free tier)
Drizzle ORM	ORM	Gratuito (Open Source)	Não
Snyk, Semgrep, etc.	Ferramentas de SAST (CI)	Freemium / Pago	Sim (para features avançadas)

Exportar para as Planilhas
2. Análise Detalhada dos Custos e Configurações
Serviços com Custo Direto (Pagamento Externo Mandatório):

Supabase (Autenticação, Banco de Dados, Storage):

Necessidade: Essencial. É o nosso provedor de BaaS principal.

Custo: Opera em um modelo "Freemium". O tier gratuito é limitado. Para um ambiente de produção que lida com dados financeiros e múltiplos usuários, a migração para um plano pago é obrigatória para garantir performance, backups e suporte.

Ação Requerida: Contratar um plano pago do Supabase (ex: "Pro" ou "Team").

Redis Cloud (Cache e Filas BullMQ):

Necessidade: Crítico. Sustenta todo o nosso sistema de processamento assíncrono (filas) e caching.

Custo: Também opera em um modelo "Freemium". O tier gratuito é suficiente para desenvolvimento, mas insuficiente para produção devido a limitações de memória, conexões e garantias de uptime.

Ação Requerida: Contratar um plano pago do Redis Cloud.

Sentry (Monitoramento de Erros):

Necessidade: Altamente recomendado. É nossa principal ferramenta de observabilidade para capturar erros em tempo real.

Custo: Freemium. O plano gratuito tem um volume de eventos limitado. Para um ambiente de produção, um plano pago é necessário para garantir a retenção de dados e o monitoramento completo.

Ação Requerida: Contratar um plano pago do Sentry.

ClickSign e Banco Inter (Integrações de Negócio):

Necessidade: Absolutamente essencial. São os serviços que permitem a formalização dos contratos e o processamento de pagamentos.

Custo: Estes são serviços transacionais. O custo é direto e baseado no uso (ex: por assinatura de documento, por boleto gerado/pago).

Ação Requerida: Manter as contas ativas e garantir que haja fundos ou crédito para cobrir os custos operacionais.

Serviços com Custo Potencial (Dependente da Escala):

GitHub Actions (CI/CD):

Necessidade: Essencial para nossa automação de DevOps.

Custo: Oferece um generoso "free tier" de minutos de execução por mês para repositórios privados.

Ação Requerida: Monitorar o consumo de minutos. Se a frequência de commits e a complexidade dos workflows aumentarem, pode ser necessário adquirir pacotes de minutos adicionais.

Ferramentas de Análise de Segurança (Snyk, Semgrep):

Necessidade: Altamente recomendado para manter a postura de segurança.

Custo: As versões utilizadas no pipeline de CI geralmente têm tiers gratuitos robustos.

Ação Requerida: Avaliar se as funcionalidades dos planos gratuitos são suficientes. Para relatórios mais detalhados ou conformidade com padrões específicos, pode ser necessário contratar planos pagos.

Ferramentas Gratuitas (Sem Custo de Licença):

Docker, PostgreSQL (Software), BullMQ, Node.js, React, Drizzle ORM: São tecnologias open source e não possuem custo de licenciamento direto. Seus custos são indiretos (hospedagem, manutenção), que no nosso caso estão embutidos nos serviços pagos como Supabase.

3. Configurações Externas Necessárias para Operação Contínua
Para que o sistema funcione em qualquer ambiente (desenvolvimento, staging ou produção), as seguintes credenciais e configurações externas, definidas no arquivo .env.example, precisam ser obtidas e configuradas como "secrets":

DATABASE_URL: A string de conexão para o banco de dados PostgreSQL (provida pelo Supabase).

TEST_DATABASE_URL: A string de conexão para o banco de dados de teste dedicado.

REDIS_URL: A string de conexão para o Redis (provida pelo Redis Cloud).

SUPABASE_URL e SUPABASE_ANON_KEY: Credenciais do projeto Supabase para o cliente frontend.

SUPABASE_SERVICE_ROLE_KEY: Chave de serviço do Supabase para operações de backend.

JWT_SECRET: Um segredo forte para assinar tokens JWT locais.

SENTRY_DSN: A chave de conexão para o Sentry.

Credenciais do Banco Inter: Chaves de API, certificados e outros segredos necessários para a integração.

Credenciais da ClickSign: Chave de API para o serviço de assinatura.

Veredito e Recomendações
Mapeamento de Custos: Para a operação contínua e escalável do sistema, é mandatório provisionar orçamento para os planos pagos de Supabase, Redis Cloud, Sentry, ClickSign e Banco Inter.

Segurança de Credenciais: As 9 categorias de "secrets" listadas acima são o "sangue" do sistema. A sua gestão segura é de prioridade máxima.

Próximo Passo Estratégico: Recomendo a criação de um "Plano de Continuidade Operacional" que documente formalmente os serviços contratados, seus custos, e os responsáveis pela gestão de cada conta.