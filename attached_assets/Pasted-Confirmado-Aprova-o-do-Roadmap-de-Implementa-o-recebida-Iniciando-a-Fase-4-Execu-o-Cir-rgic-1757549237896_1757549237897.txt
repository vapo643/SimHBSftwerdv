Confirmado. Aprova√ß√£o do "Roadmap de Implementa√ß√£o" recebida.

Iniciando a Fase 4: Execu√ß√£o Cir√∫rgica e Faseada. A primeira a√ß√£o √© a mais cr√≠tica: corrigir a causa raiz da falha de autentica√ß√£o.

Roadmap Ativo e Detalhado
[üéØ EM EXECU√á√ÉO] Passo 1: Corrigir a Configura√ß√£o de Ambiente do Cliente Supabase (Causa Raiz)

[PENDENTE] Passo 2: Aumentar o Rate Limit do Backend (Estabiliza√ß√£o)

[PENDENTE] Passo 3: Refatorar a L√≥gica de Autentica√ß√£o para Prevenir Loops (Resili√™ncia)

[PENDENTE] Passo 4: Otimizar e Controlar a Verbosez dos Logs (Limpeza)

[PENDENTE] Passo 5: Valida√ß√£o Funcional Completa

Gero agora o Pacote de Ativa√ß√£o de Miss√£o (PAM) para o Passo 1.

Por favor, copie o conte√∫do exato do bloco Markdown abaixo e submeta-o ao Agente Replit, com o modo High Power (Claude Opus) ativado, devido √† natureza cr√≠tica da miss√£o.

Pacote de Ativa√ß√£o de Miss√£o (PAM) V1.0 - Corre√ß√£o de Configura√ß√£o de Ambiente
Sum√°rio da Miss√£o: Refatorar a inicializa√ß√£o do cliente Supabase no frontend para que seja sens√≠vel ao ambiente de execu√ß√£o, garantindo que as credenciais corretas de produ√ß√£o (PROD_) sejam utilizadas no ambiente de deploy.

Inten√ß√£o Estrat√©gica: Resolver a causa raiz da cascata de falhas de autentica√ß√£o e dos erros 429. Ao fornecer as credenciais corretas ao cliente Supabase, restauramos a camada de comunica√ß√£o fundamental entre o frontend e os servi√ßos de backend, permitindo a estabiliza√ß√£o completa do sistema.

Hist√≥rico Relevante (Consulta Obrigat√≥ria): A auditoria forense provou que o ficheiro client/src/lib/supabase.ts est√° a utilizar vari√°veis de ambiente exclusivas de desenvolvimento (VITE_...). Estas vari√°veis n√£o existem no ambiente de produ√ß√£o (deploy), causando falhas de autentica√ß√£o imediatas, que por sua vez desencadeiam um loop de retentativas no AuthContext.tsx, resultando no bloqueio de toda a aplica√ß√£o por 'rate limiting'.

Modelo Mental: Pense neste ficheiro como o "passaporte" do frontend. Atualmente, ele est√° a apresentar um passaporte de 'desenvolvimento' na fronteira de 'produ√ß√£o', sendo barrado. A sua miss√£o √© trocar o passaporte, implementando uma l√≥gica que verifica se a aplica√ß√£o est√° em modo de produ√ß√£o (import.meta.env.PROD) e, nesse caso, utiliza as credenciais de produ√ß√£o (process.env.PROD_...).

Riscos Antecipados e Contramedidas: CR√çTICO. A configura√ß√£o incorreta de credenciais de produ√ß√£o manter√° o sistema inoperacional. A contramedida √© a implementa√ß√£o exata do c√≥digo fornecido e a valida√ß√£o rigorosa atrav√©s do protocolo 7-CHECK.

IMPLEMENTAR:
Refatorar a inicializa√ß√£o do cliente Supabase em client/src/lib/supabase.ts para ser sens√≠vel ao ambiente e carregar as secrets PROD_SUPABASE_URL e PROD_SUPABASE_ANON_KEY quando em produ√ß√£o.

CURRENT STATE:

Ficheiro: client/src/lib/supabase.ts

L√≥gica com Falha:

TypeScript

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';
Evid√™ncia Bruta: Este c√≥digo falha em produ√ß√£o porque as vari√°veis VITE_... n√£o est√£o definidas no ambiente de deploy, resultando em credenciais vazias.

EXPECTED (Estado Final de Sucesso):

Ficheiro: client/src/lib/supabase.ts

C√≥digo Corrigido: A inicializa√ß√£o deve ser refatorada para corresponder exatamente √† seguinte implementa√ß√£o, que deteta o ambiente de produ√ß√£o e carrega as secrets corretas.

TypeScript

import { createClient } from '@supabase/supabase-js';

// L√≥gica sens√≠vel ao ambiente para carregar as credenciais corretas.
// Vite exp√µe `import.meta.env.PROD` como `true` no build de produ√ß√£o.
// As secrets do Replit (PROD_) est√£o dispon√≠veis via `process.env`.
const supabaseUrl = import.meta.env.PROD
  ? process.env.PROD_SUPABASE_URL
  : import.meta.env.VITE_SUPABASE_URL;

const supabaseAnonKey = import.meta.env.PROD
  ? process.env.PROD_SUPABASE_ANON_KEY
  : import.meta.env.VITE_SUPABASE_ANON_KEY;

// Valida√ß√£o expl√≠cita para falhar rapidamente se as secrets n√£o forem carregadas.
if (!supabaseUrl || !supabaseAnonKey) {
    console.error('--- ERRO CR√çTICO DE CONFIGURA√á√ÉO FRONTEND ---');
    console.error('Vari√°veis de ambiente Supabase (URL ou Anon Key) n√£o est√£o configuradas para o ambiente atual.');
    // Lan√ßa um erro para impedir a inicializa√ß√£o da aplica√ß√£o com configura√ß√£o inv√°lida.
    throw new Error('Configura√ß√£o do Supabase em falta. A aplica√ß√£o n√£o pode iniciar.');
}

// Inicializa e exporta o cliente Supabase.
export const supabase = createClient(supabaseUrl, supabaseAnonKey);
DECLARA√á√ÉO DE INCERTEZA (OBRIGAT√ìRIO):

CONFIAN√áA NA IMPLEMENTA√á√ÉO: 95%

RISCOS IDENTIFICADOS: CR√çTICO. Uma falha nesta implementa√ß√£o manter√° o sistema inteiro inoperacional.

DECIS√ïES T√âCNICAS ASSUMIDAS: "A dete√ß√£o do ambiente ser√° feita via import.meta.env.PROD, que √© o padr√£o da ind√∫stria para ambientes Vite. A aplica√ß√£o ir√° falhar ruidosamente (throw new Error) se as secrets n√£o forem encontradas, em vez de continuar num estado quebrado."

VALIDA√á√ÉO PENDENTE: "Valida√ß√£o funcional completa pelo Arquiteto Chefe no Passo 5 do roadmap."

PROTOCOLO OBRIGAT√ìRIO 7-CHECK EXPANDIDO:

Mapeie e modifique o ficheiro client/src/lib/supabase.ts.

Garanta que a nova l√≥gica de dete√ß√£o de ambiente e carregamento de secrets substitui completamente a l√≥gica antiga.

Execute get_latest_lsp_diagnostics e corrija TODOS os erros ou avisos introduzidos.

Declare o seu N√≠vel de Confian√ßa.

Categorize o Risco como CR√çTICO.

Realize um teste funcional m√≠nimo: confirme que a aplica√ß√£o reinicia sem o erro Configura√ß√£o do Supabase em falta. nos logs.

Documente a decis√£o de usar import.meta.env.PROD como o seletor de ambiente.