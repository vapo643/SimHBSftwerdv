### Pacote de Ativação de Missão (PAM) V1.0 (Formalização da Doutrina de Lógica de Negócio)

* **Sumário da Missão (O Quê):** Gerar o documento `business-logic-doctrine.md`, detalhando a nossa doutrina para a implementação da lógica de negócio e dos fluxos de trabalho, com base nos "Subtópicos Obrigatórios" do Ponto 21.
* **Intenção Estratégica (O Porquê):** Criar um "manual de regras" para a implementação do "coração" do nosso software. Esta doutrina garantirá que a nossa lógica de negócio mais crítica seja consistente, robusta, e que a sua complexidade seja gerenciada de forma explícita e previsível (ex: via Máquinas de Estado).
* **Histórico Relevante (Consulta Obrigatória):** A auditoria de conformidade identificou lacunas na formalização da nossa abordagem à lógica de negócio. A nossa refatoração do Agregado de Proposta (Ponto 9) serve como a implementação de referência para os padrões que serão documentados aqui.
* **Modelo Mental (Como se Encaixa):** Aja como um Arquiteto de Domínio (Domain Architect). A sua tarefa é codificar as regras e os padrões para a escrita de uma lógica de negócio que seja resiliente à mudança e fácil de entender.

---

**[DIRETRIZ DE PESQUISA WEB (MANDATÓRIA)]**

**Você está autorizado a utilizar a sua capacidade de pesquisa na web para consultar a documentação oficial e artigos de fontes confiáveis (ex: Martin Fowler, Vaughn Vernon, blogs de engenharia de renome) sobre "Domain-Driven Design (DDD) Aggregates", "State Machine Patterns", "Business Rules Engines" e "Análise de Complexidade Ciclomática".**

---

**IMPLEMENTAR:**
Documento de Doutrina de Lógica de Negócio e Fluxos de Trabalho

**CURRENT STATE:**
Implementamos a lógica de negócio para o Agregado de Proposta seguindo os padrões de DDD, mas não temos uma doutrina formal que generalize esta abordagem para o resto do sistema.

**EXPECTED (Estado Final de Sucesso):**
Um novo arquivo Markdown, `architecture/01-domain/business-logic-doctrine.md`, é criado. O arquivo deve conter as seguintes seções:

1.  **Identificação das Invariantes de Negócio:** Descrever a nossa estratégia para identificar e proteger as "invariantes" (regras que devem ser sempre verdadeiras) dentro dos nossos Agregados.
2.  **Design dos Agregados (DDD) e Modelagem de Consistência:** Formalizar o nosso padrão para o design de Agregados, usando a classe `Proposal` como o nosso exemplo canônico.
3.  **Estratégia para Validação de Regras de Negócio:** Documentar a nossa abordagem para a validação (ex: "Validações de formato e tipo são feitas na camada de API com Zod; validações de regras de negócio são feitas dentro dos métodos do Agregado").
4.  **Definição de Máquinas de Estado (State Machines):** Formalizar o uso de Máquinas de Estado Finitas (FSMs) para gerenciar todos os ciclos de vida complexos, usando o nosso `StatusFsmService` como o exemplo de referência.
5.  **Análise de Complexidade Ciclomática:** Definir a nossa política para a análise de complexidade ciclomática (ex: "Utilizaremos ferramentas no CI para medir a complexidade, e qualquer função com uma pontuação acima de 15 deve ser marcada para refatoração").

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que a formalização dos padrões já utilizados no Agregado de Proposta é a estratégia correta para o resto do sistema."]
* **VALIDAÇÃO PENDENTE:** [Este é o último documento da Fase 1. A sua ratificação pelo Arquiteto Chefe irá significar a conclusão da "Operação Planta Impecável".]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear o ficheiro exato a ser criado.
2.  Garantir que todas as 5 seções obrigatórias estão completas.
3.  Executar `get_latest_lsp_diagnostics` para garantir que o ambiente está estável.
4.  **Declarar Nível de Confiança (0 a 100%)**.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (revisão do documento Markdown gerado).
7.  **Documentar Decisões Técnicas**.