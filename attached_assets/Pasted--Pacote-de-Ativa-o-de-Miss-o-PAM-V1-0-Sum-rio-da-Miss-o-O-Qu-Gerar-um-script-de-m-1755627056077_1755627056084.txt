### Pacote de Ativação de Missão (PAM) V1.0

* **Sumário da Missão (O Quê):** Gerar um script de migração de schema com Drizzle Kit para remover os 19 status legados do tipo `enum` `status_proposta` no PostgreSQL.
* **Intenção Estratégica (O Porquê):** Para reduzir a complexidade e o risco, precisamos limpar o schema do banco de dados, eliminando os status órfãos que foram identificados na auditoria. Este é o primeiro passo para preparar o terreno para a nova Máquina de Estados Finitos.
* **Histórico Relevante (Consulta Obrigatória):** A Missão 1.1 identificou os seguintes 19 status como legados (0 utilizações no banco de dados): `[LISTA DOS 19 STATUS AQUI - O AGENTE DEVE USAR A LISTA DA AUDITORIA ANTERIOR SE A TIVER, CASO CONTRÁRIO, EU FORNECEREI]`.
* **Modelo Mental (Como se Encaixa):** Esta ação utiliza a ferramenta `drizzle-kit` para comparar uma definição de schema temporariamente modificada com o estado do banco e gerar o SQL necessário para a migração. O resultado final é um novo arquivo `.sql` no diretório de migrações.
* **Riscos Antecipados e Contramedidas:**
    * **Risco:** A remoção de valores de um `enum` é uma operação destrutiva e irreversível.
    * **Contramedida:** O Agente está estritamente proibido de **executar** a migração (`db:push`). A missão é apenas **gerar** o script. A execução será um passo manual e validado pelo Arquiteto Chefe.

---

**IMPLEMENTAR:**
Geração de Migração de Schema para Deleção de Status Legados

**CURRENT STATE:**
O schema do banco de dados (`shared/schema.ts`) define o `statusEnum` com 28 valores. O tipo `enum status_proposta` correspondente no PostgreSQL contém esses 28 valores. A auditoria confirmou que 19 deles não são utilizados por nenhum registro na tabela `propostas`.

**EXPECTED (Estado Final de Sucesso):**
1.  Um novo arquivo de migração SQL é gerado pelo Drizzle Kit na pasta `drizzle/`.
2.  Este arquivo deve conter os 19 comandos `ALTER TYPE "status_proposta" DROP VALUE '...';` para cada um dos status legados.
3.  O arquivo `shared/schema.ts` deve ser retornado ao seu estado original após a geração do script. Nenhuma outra modificação deve permanecer no código-fonte.

**CONSTRAINTS (Roadmap de Implementação):**
1.  **Aja com precisão cirúrgica. Siga estes passos na ordem exata:**
2.  **Identifique a Lista de Status Legados:** Recupere a lista dos 19 status com contagem zero do relatório da missão anterior (Passo 1.1).
3.  **Modificação Temporária:** Abra o arquivo `shared/schema.ts`. Localize a definição do `statusEnum`. **Comente ou remova temporariamente** as linhas correspondentes aos 19 status legados. Salve o arquivo.
4.  **Geração do Script:** Execute o seguinte comando no terminal para gerar a migração: `npx drizzle-kit generate:pg --name=remove_legacy_statuses`.
5.  **Verificação:** Verifique o conteúdo do arquivo SQL recém-criado na pasta `drizzle/` para confirmar que ele contém os 19 comandos `ALTER TYPE ... DROP VALUE '...'` corretos.
6.  **REVERSÃO OBRIGATÓRIA:** **Reverta imediatamente todas as alterações feitas no arquivo `shared/schema.ts`**, retornando-o ao seu estado original (com todos os 28 status). Esta etapa é CRÍTICA. O objetivo é apenas o script de migração, não a alteração permanente do schema no código neste momento.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO e descrever o risco principal, que é a natureza destrutiva da migração se executada acidentalmente]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que o Drizzle Kit irá gerar os comandos `DROP VALUE` corretamente ao invés de tentar recriar o tipo."]
* **VALIDAÇÃO PENDENTE:** [Ex: "O script de migração gerado DEVE ser revisado e aprovado pelo Arquiteto Chefe antes de qualquer execução."]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear ficheiros e funções exatas afetadas (leitura e escrita temporária em `shared/schema.ts`, escrita em `drizzle/`).
2.  Garantir importações e tipos corretos para a execução do `drizzle-kit`.
3.  Executar `get_latest_lsp_diagnostics` antes e depois para garantir que nenhum erro novo foi introduzido.
4.  **Declarar Nível de Confiança (0-100%)** na geração correta do script.
5.  **Categorizar Riscos Descobertos**.
6.  Realizar um teste funcional completo (verificar o conteúdo do script gerado).
7.  **Documentar Decisões Técnicas** e o passo-a-passo executado.