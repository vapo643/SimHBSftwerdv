### **Pacote de Ativação de Missão (PAM) V1.0 - RECONSTRUÇÃO DE EMERGÊNCIA DE ROTAS**

* **Sumário da Missão:** Realizar uma substituição cirúrgica de código no ficheiro corrompido `server/routes.ts` para restaurar a funcionalidade da rota `GET /api/propostas/:id`, eliminando o código legado e conectando-a corretamente ao `proposalController` da arquitetura DDD.

* **Intenção Estratégica:** Estabilizar o sistema e eliminar os 250+ erros de compilação (LSP) para que a missão de correção principal possa ser retomada. Esta é uma operação de controle de danos com tolerância zero a falhas.

* **Contexto Crítico:** A auditoria anterior identificou corretamente que a rota `GET /api/propostas/:id` estava a ser tratada por um código legado, ignorando a nova arquitetura DDD. Uma tentativa falha de corrigir isso corrompeu o ficheiro `server/routes.ts` com código duplicado e sintaxe inválida.

---

**IMPLEMENTAR:**
Reconstrução da Rota de Busca de Proposta Individual

**CURRENT STATE:**
O ficheiro `server/routes.ts` está severamente corrompido, impedindo a compilação e operação do servidor. Contém múltiplos erros de sintaxe e lógica de roteamento duplicada/fragmentada.

**EXPECTED (Estado Final de Sucesso):**
1.  O ficheiro `server/routes.ts` é restaurado para um estado funcional, e o comando `get_latest_lsp_diagnostics` retorna zero erros para este ficheiro.
2.  A rota `GET /api/propostas/:id` deve ser **exclusivamente** tratada pelo método `show` do `proposalController`.
3.  Todo o código legado associado à rota antiga `app.get('/api/propostas/:id', ...)` que chama diretamente `storage.ts` é completamente removido.
4.  Como resultado, a chamada à API `GET /api/propostas/:id` deve funcionar e retornar o payload de dados completo, pois agora utilizará o método `findById` (já corrigido anteriormente) do `ProposalRepository`.

**CONSTRAINTS (Roadmap de Implementação Cirúrgica):**
1.  **Abra** o ficheiro `server/routes.ts`.
2.  **DELETE MASSIVO:** Localize e **DELETE** completamente todo o conteúdo do ficheiro a partir da linha `1215` até a linha `1687` (aproximadamente), que contém o bloco de código corrompido identificado nas tentativas de correção anteriores. O objetivo é remover todo o código fragmentado e duplicado introduzido.
3.  **Localize** a secção de rotas que já utiliza a instância `proposalController` (procure por `proposalController.list` ou `proposalController.update`).
4.  **INSIRA** o seguinte bloco de código **exatamente** como está escrito na secção correta, para garantir que a rota de busca individual siga o padrão DDD canônico do projeto:
    ```typescript
    // Busca uma proposta individual pelo ID (Rota DDD Canônica)
    app.get(
      '/api/propostas/:id',
      jwtAuthMiddleware, // Garante a segurança do endpoint
      (req, res, next) => {
        // Log para auditoria do fluxo de dados
        logger.info(`[DDD ROUTE] Rota GET /api/propostas/:id acessada para o ID: ${req.params.id}`);
        proposalController.show(req, res, next);
      }
    );
    ```
5.  **Validação Final e Mandatória:** Imediatamente após a edição, execute `get_latest_lsp_diagnostics`. O número de erros para o ficheiro `server/routes.ts` **DEVE SER ZERO**. Se não for, pare a execução e reporte a falha imediatamente.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** 80%
* **RISCOS IDENTIFICADOS:** **ALTO** - Dada a instabilidade demonstrada pelo agente executor, existe um risco significativo de que ele interprete mal as instruções de deleção massiva e remoção de código, podendo agravar a corrupção do ficheiro. A precisão da execução é crítica.
* **DECISÕES TÉCNICAS ASSUMIDAS:** Assume-se que a instância `proposalController` e o `jwtAuthMiddleware` estão corretamente inicializados e disponíveis no escopo do ficheiro `routes.ts`, como verificado em auditorias anteriores.
* **VALIDAÇÃO PENDENTE:** O QA (GEM 03) deve, após a confirmação de zero erros LSP, realizar um teste de fumo em **TODAS** as funcionalidades principais da aplicação para garantir que a cirurgia no ficheiro de rotas não introduziu regressões em outras áreas do sistema. O teste principal é validar se a tela de Análise Individual (`/credito/analise/:id`) agora exibe todos os campos financeiros.