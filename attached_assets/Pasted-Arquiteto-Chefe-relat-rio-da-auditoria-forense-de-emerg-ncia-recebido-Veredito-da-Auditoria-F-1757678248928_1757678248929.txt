Arquiteto Chefe, relatório da auditoria forense de emergência recebido.

**Veredito da Auditoria Forense (`RCA-500-FORMALIZATION-001-AUDIT`): SUCESSO ABSOLUTO.**

O agente `Sniper` forneceu evidências irrefutáveis e um diagnóstico preciso. A causa raiz da falha 500 está agora exposta, e é uma falha arquitetural sistêmica, não um simples erro de lógica.

---

### **PDME - FASE 3: ARQUITETURA DA SOLUÇÃO (EM EXECUÇÃO)**

#### **Análise Forense da Causa Raiz (RCA)**

A análise do agente está correta e aponta para uma violação fundamental do nosso padrão arquitetural:

1.  **Falha Primária (Quebra de Contrato de Injeção de Dependência):** A causa direta do erro 500 é uma `TypeError`. O `MarcarAssinaturaConcluidaUseCase` foi projetado para receber uma implementação da interface `IUnitOfWork` que provê repositórios (`.proposals`) e um método transacional (`.executeInTransaction()`). No entanto, o código no endpoint (`server/routes.ts`) está a instanciar e injetar uma classe `UnitOfWork` genérica de `lib/unit-of-work`, que **não cumpre este contrato**.

2.  **Dívida Técnica Exposta (Violação do Padrão de Inversão de Controle):** O problema real não é apenas a injeção da classe errada, mas o fato de que a **instanciação manual de serviços complexos está a ocorrer na camada de rotas**. Esta prática, conhecida como "Service Locator" manual, viola o princípio de Inversão de Controle (IoC) e acopla firmemente a nossa camada de apresentação a detalhes de implementação da infraestrutura, tornando o sistema frágil a refatorações - exatamente a causa da nossa falha atual.

#### **Roadmap de Implementação Faseado (Revisado)**

A correção não pode ser um simples patch no `UseCase` para se adaptar à classe errada. Isso seria propagar o erro arquitetural. A solução correta deve erradicar a causa raiz, restaurando a integridade do nosso padrão de injeção de dependência.

**Nível da Missão de Correção:** Nível 3 (Crítica/Arquitetural)
**Ferramenta Recomendada (Protocolo PSF):** High Power (Claude Opus)

---

**Passo 1: [BACKEND - ARQUITETURA] Centralizar e Corrigir a Construção do `UnitOfWork`.**
* **Objetivo:** Garantir que uma única fonte da verdade seja responsável por construir o `UnitOfWork` correto, com todos os seus repositórios transacionais.
* **Ações:**
    1.  Criar ou localizar a fábrica central de `UnitOfWork` (provavelmente em `server/modules/shared/infrastructure/`).
    2.  Garantir que esta fábrica instancie o `UnitOfWork` e anexe a ele todas as instâncias de repositórios necessários (`.proposals`, `.ccbs`, etc.).
    3.  Registrar esta fábrica ou o `UnitOfWork` resultante em nosso container de Inversão de Controle (`server/modules/shared/infrastructure/Container.ts`).

**Passo 2: [BACKEND - REFACTOR] Implementar Injeção de Dependência Correta no Endpoint.**
* **Objetivo:** Desacoplar o endpoint da construção de suas dependências, utilizando o container de IoC.
* **Ações:**
    1.  Refatorar o endpoint `PATCH /api/propostas/:id/etapa-formalizacao` em `server/routes.ts`.
    2.  **Remover completamente** as linhas `new UnitOfWork()` e `new MarcarAssinaturaConcluidaUseCase(...)`.
    3.  Utilizar o container de IoC para **resolver** a instância do `MarcarAssinaturaConcluidaUseCase`. O container será agora responsável por injetar o `UnitOfWork` correto, que foi configurado no Passo 1.

---

**STATUS ATUAL: FASE 3 (ARQUITETURA DA SOLUÇÃO) - ROADMAP GERADO.**

**PRÓXIMA AÇÃO:** Arquiteto Chefe, aguardo sua aprovação deste roadmap de correção arquitetural. Após a sua confirmação, gerarei o Pacote de Ativação de Missão (PAM) para a execução do **Passo 1**.

---
[PGI ATIVO | LEMBRETE DE ESTADO DO ROADMAP]
- **Roadmap em Standby:** "Correção do Fluxo de Formalização"
- **Próximo Passo a ser Retomado:** N/A (Missão anterior falhou)
- **Missão de Emergência Atual:** "Correção Arquitetural da Falha 500"
---