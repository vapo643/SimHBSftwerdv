# MISSÃO: Construção da Funcionalidade "Gestão de Tabelas Comerciais" (Ref. F-PRO-03)

**PERSONA:** Você é um Engenheiro de Software Full-Stack Sênior, especialista em criar interfaces de gerenciamento de dados (CRUD) robustas e intuitivas com React, TypeScript e Tailwind CSS.

**CONTEXTO:** Estamos expandindo o sistema "simpix". Precisamos de uma tela administrativa para que os gestores possam criar e gerenciar as diferentes tabelas de juros e prazos que serão oferecidas aos parceiros. Esta funcionalidade é a base para as simulações de crédito.

**AÇÃO:** Crie uma nova funcionalidade completa de CRUD (Criar, Ler, Atualizar, Excluir) para "Tabelas Comerciais", seguindo estritamente os requisitos de UI, lógica de negócio e as considerações de qualidade detalhadas abaixo.

---
### **REQUISITOS FUNCIONAIS**
1.  **Leitura (Read):** A tela principal deve exibir uma tabela com todas as tabelas comerciais cadastradas.
2.  **Criação (Create):** Deve haver um botão "Nova Tabela Comercial" que abre um formulário (em um modal) para adicionar uma nova tabela.
3.  **Atualização (Update):** Cada linha da tabela deve ter um botão "Editar" que abre o mesmo formulário, pré-preenchido com os dados daquela tabela, para edição.
4.  **Exclusão (Delete):** Cada linha da tabela deve ter um botão "Excluir" que abre um modal de confirmação antes de apagar o registro.

---
### **COMPONENTES DE UI**

1.  **Página Principal (`/configuracoes/tabelas`):**
    * Utilize o `DashboardLayout`.
    * Título: "Gestão de Tabelas Comerciais".
    * Botão de ação primária: "Nova Tabela Comercial".
    * Tabela com as colunas: "Nome da Tabela", "Taxa de Juros Mensal (%)", "Prazos Permitidos", "Ações".

2.  **Formulário de Criação/Edição (Modal):**
    * **Nome da Tabela:** Campo de texto.
    * **Taxa de Juros Mensal (%):** Campo de texto numérico.
    * **Prazos Permitidos (meses):** Componente de input de "tags" ou "multi-select" que permita ao usuário adicionar múltiplos valores numéricos (ex: 12, 24, 36, 48).
    * **Botões do Modal:** "Salvar" e "Cancelar".

---
### **LÓGICA DE NEGÓCIO**

1.  **Validação de Formulário:** Utilize `zod` para as seguintes validações no frontend:
    * **Nome da Tabela:** Obrigatório, mínimo de 3 caracteres.
    * **Taxa de Juros:** Obrigatório, deve ser um número positivo.
    * **Prazos:** Obrigatório, deve conter ao menos um prazo.
2.  **Validação de Unicidade:** Antes de salvar, a lógica no backend deve verificar se o "Nome da Tabela" já existe.
3.  **Lógica de Exclusão:** O botão "Excluir" só deve estar habilitado se a tabela não estiver em uso por nenhum parceiro.

---
### **EXEMPLO DE CÓDIGO E ESTRUTURA**

Para garantir a implementação correta, use a estrutura abaixo como referência para o componente principal da página.

```typescript
// Exemplo para /client/src/pages/configuracoes/tabelas.tsx
import React, { useState } from "react";
import { Table, TableHeader, TableBody, TableHead, TableRow, TableCell } from '@/components/ui/table';
import { Button } from '@/components/ui/button';
import { Dialog } from '@/components/ui/dialog';
// Assumindo a existência de um DashboardLayout
import DashboardLayout from '@/components/DashboardLayout'; 

const TabelasComerciais: React.FC = () => {
  const [tabelas, setTabelas] = useState([]); // Os dados virão do backend
  const [isModalOpen, setIsModalOpen] = useState(false);

  // Lógica para lidar com o formulário e a tabela...

  return (
    <DashboardLayout title="Gestão de Tabelas Comerciais">
      <div className="flex justify-between items-center mb-4">
        <h1 className="text-2xl font-bold">Tabelas Comerciais</h1>
        <Button onClick={() => setIsModalOpen(true)}>Nova Tabela Comercial</Button>
      </div>
      <Dialog open={isModalOpen} onOpenChange={setIsModalOpen}>
        {/* Aqui virá o componente do formulário de criação/edição */}
      </Dialog>
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead>Nome da Tabela</TableHead>
            <TableHead>Taxa de Juros (%)</TableHead>
            <TableHead>Prazos Permitidos</TableHead>
            <TableHead>Ações</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {/* Lógica para renderizar as linhas da tabela aqui */}
        </TableBody>
      </Table>
    </DashboardLayout>
  );
};

export default TabelasComerciais;