# MISSÃO: DEBATE MÁXIMO (5 INTERAÇÕES) - Auditoria Completa do Fluxo de Vida da Proposta

**CONTEXTO ESTRATÉGICO:**
Estamos a enfrentar falhas persistentes no nosso fluxo de negócio principal. Em vez de corrigir bugs isolados, vamos realizar uma auditoria completa de ponta a ponta para garantir a integridade de todo o processo, desde a criação da proposta até ao seu pagamento.

**SUA TAREFA (ASSISTENTE):**
A sua tarefa não é escrever código. A sua tarefa é atuar como um Arquiteto de Sistemas e realizar um "Raio-X" do nosso fluxo de dados. Nesta **Interação 1**, o seu objetivo é mapear a jornada de uma proposta através das nossas APIs e do nosso banco de dados.

---
### **Interação 1: Mapeamento da Jornada da Proposta**

Por favor, analise a nossa base de código (backend) e responda com a sua análise para cada etapa do fluxo:

**1. A Originação (Tela T-01):**
* **Análise:** Inspecione o nosso endpoint `POST /api/propostas`. Quando uma nova proposta é criada, quais campos exatos são salvos na tabela `propostas`? A estrutura de dados que estamos a salvar (seja normalizada ou em `JSONB`) está completa e alinhada com todos os campos do nosso formulário da T-01?

**2. A Fila de Análise (Tela T-02):**
* **Análise:** Inspecione o endpoint `GET /api/propostas` (ou similar) que alimenta esta fila. Como ele está a filtrar as propostas? Ele está a buscar corretamente as propostas com o status inicial (ex: `aguardando_analise`)?

**3. A Esteira de Análise (O Elo Perdido):**
* **Análise:** Inspecione o endpoint `PUT /api/propostas/:id/status`. Qual é a lógica atual dele? Ele está preparado para receber um novo `status` (como `aprovado` ou `negado`) e uma `observacao`, e registar esta mudança na tabela `proposta_logs`?

**4. A Fila de Formalização (Tela T-04):**
* **Análise:** Inspecione o endpoint `GET /api/propostas/formalizacao`. Quais `status` de propostas ele está a filtrar para exibir nesta tela? A lista de `status` está completa e correta?

**5. A Fila de Pagamento (Tela T-05):**
* **Análise:** Inspecione o endpoint `GET /api/propostas/pagamento`. Qual `status` exato ele está a usar para filtrar as propostas que estão prontas para o pagamento?

**Conclusão Holística:**
* Com base na sua análise de ponta a ponta, a nossa "esteira" de propostas está logicamente conectada no backend? Você identifica alguma lacuna ou inconsistência na forma como uma proposta transita de um `status` para o outro?

---