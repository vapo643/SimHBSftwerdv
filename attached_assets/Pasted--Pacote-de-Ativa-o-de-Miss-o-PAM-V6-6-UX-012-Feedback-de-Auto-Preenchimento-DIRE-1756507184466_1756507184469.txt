### **Pacote de Ativação de Missão (PAM) V6.6 - UX-012 (Feedback de Auto-Preenchimento)**

**[DIRETRIZ MESTRA DE DIVULGAÇÃO - PDT V2.0 ATIVADA]**
*Sua resposta deve ser exaustiva. Reporte a realidade técnica sem omissões. A transparência radical é mandatória.*

* **Sumário da Missão (O Quê):** Implementar um feedback visual de "flash" ou "destaque" nos campos de endereço (Logradouro, Bairro, Cidade, Estado) imediatamente após eles serem preenchidos automaticamente pela consulta da API de CEP.
* **Intenção Estratégica (O Porquê):** Melhorar a "Visibilidade do estado do sistema". O auto-preenchimento é uma ótima feature, mas se acontecer silenciosamente, o usuário pode não perceber que a ação foi concluída. Um breve destaque visual nos campos afetados chama a atenção do usuário para a mudança, confirma que a automação funcionou e melhora a percepção de uma interface "inteligente" e responsiva.
* **Histórico Relevante (Consulta Obrigatória):** A análise heurística (`GL-002`) identificou o auto-preenchimento "silencioso" como uma melhoria de usabilidade de severidade **MÉDIA**. A missão `UX-006` implementou a lógica de busca de CEP com debounce, que será o gatilho para este novo efeito visual.

---

**IMPLEMENTAR:**
User Story UX-012: Adicionar Feedback Visual ao Auto-Preenchimento de Endereço

**CONTEXT:**
Nossa auditoria de UX observou que, após o usuário digitar um CEP válido no formulário de nova proposta, os campos de endereço são preenchidos automaticamente, mas a mudança é tão sutil que pode passar despercebida. Precisamos adicionar um efeito visual para destacar os campos que foram preenchidos pela automação.

**CURRENT STATE:**
No componente `client/src/components/propostas/ClientDataStep.tsx`, a função de busca de CEP atualiza o estado do formulário com os dados de endereço, fazendo com que os campos sejam preenchidos. Não há nenhum efeito visual adicional para indicar esta mudança.

**EXPECTED (Estado Final de Sucesso):**
1.  **Efeito de Destaque:** Imediatamente após os campos de endereço serem preenchidos pela consulta do CEP, eles devem exibir um breve efeito visual de destaque. Uma boa opção é um "flash" de cor de fundo (ex: um amarelo suave que desaparece em 1-2 segundos) ou um brilho na borda.
2.  **Animação Suave:** O efeito deve ser suave, utilizando transições de CSS para criar uma experiência agradável e não-disruptiva.
3.  **Lógica Reutilizável:** A lógica do destaque deve ser, idealmente, reutilizável para outros campos que possam ser auto-preenchidos no futuro.
4.  **Prova de Sucesso:** Você deve fornecer um GIF demonstrando o fluxo completo: o usuário digita o CEP, um spinner aparece, os campos são preenchidos e, em seguida, os campos de endereço exibem o efeito de "flash" ou destaque.

**CONSTRAINTS (Roadmap de Implementação):**
1.  **Localizar Componente Alvo:** O foco da implementação será no arquivo `client/src/components/propostas/ClientDataStep.tsx`.
2.  **Definir Animação CSS:** No arquivo CSS correspondente (`client/src/index.css`) ou usando as capacidades do Tailwind CSS, defina uma animação de `keyframes` para o efeito de "flash" (ex: `flash-background`). Esta animação deve alterar a cor de fundo e depois retornar ao normal.
3.  **Implementar Gatilho do Efeito:**
    * Crie um novo estado no componente (ex: `addressFieldsJustFilled`).
    * Na função de sucesso da busca de CEP (dentro do `useEffect` que observa o CEP debounceado), após preencher os campos, defina `setAddressFieldsJustFilled(true)`.
    * Use um `setTimeout` para reverter o estado para `false` após a duração da animação (ex: 2000ms).
4.  **Aplicar Classe CSS Condicional:** Nos componentes `Input` dos campos de endereço, adicione uma lógica de `className` condicional. Se `addressFieldsJustFilled` for `true`, aplique a classe CSS que aciona a animação de flash.
5.  **Validar e Apresentar Evidência:** Teste o fluxo digitando um CEP válido. Garanta que o efeito de destaque apareça nos campos corretos e desapareça após alguns segundos. Capture e apresente o GIF do resultado final.
6.  **Verificação Final:** Execute o protocolo `7-CHECK FULL`.