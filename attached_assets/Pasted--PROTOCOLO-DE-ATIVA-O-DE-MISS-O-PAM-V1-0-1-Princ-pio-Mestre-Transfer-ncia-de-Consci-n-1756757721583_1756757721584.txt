### **PROTOCOLO DE ATIVAÇÃO DE MISSÃO (PAM) V1.0**

**1. Princípio Mestre: Transferência de Consciência**
*O seu modo operacional muda de "Arquiteto" para "Executor de Elite". A fase de planeamento está concluída. A sua missão é executar o plano de batalha definido no roadmap com precisão cirúrgica, sem desvios. A sua métrica de sucesso é a conformidade total com o plano.*

**2. Doutrina de Engenharia de Contexto Dinâmico (DECD) V1.0 - DESATIVADA**
*A pesquisa na web está **proibida** para esta missão. Todas as informações e diretrizes necessárias estão contidas no roadmap. O seu foco é na execução do plano existente, não na descoberta de novas abordagens.*

---
### **Pacote de Ativação de Missão: OPERAÇÃO ESTABILIZAÇÃO CRÍTICA (FASE 1.3 - IMPLEMENTAÇÃO)**

* **Sumário da Missão (O Quê):** Executar o plano de refatoração detalhado em `docs/missions/ROADMAP_REDIS_SINGLETON_REFACTOR.md` para implementar o gerenciador de conexão Redis centralizado e erradicar o vazamento de conexões.
* **Intenção Estratégica (O Porquê):** Esta implementação é o passo crítico para restaurar a estabilidade da infraestrutura do sistema. O sucesso desta missão irá desbloquear a suíte de testes, permitindo-nos avançar com a remediação de outros bugs e, eventualmente, certificar o sistema para deploy.
* **Histórico Relevante (Consulta Obrigatória):** A sua **única fonte da verdade** para esta missão é o documento `docs/missions/ROADMAP_REDIS_SINGLETON_REFACTOR.md`. Você deve lê-lo na sua totalidade antes de executar a primeira modificação de código.
* **Modelo Mental (Como se Encaixa):** Você está a realizar uma cirurgia no coração da infraestrutura de dados da aplicação. Cada passo do roadmap é uma incisão precisa. O sucesso depende da sua capacidade de seguir o plano à risca, garantindo que o novo "guardião" da conexão Redis (`redis-manager.ts`) se torne a única fonte de verdade e que todos os "implantes" antigos (instâncias `new Redis()`) sejam removidos.
* **Riscos Antecipados e Contramedidas:**
    * **Risco (MÉDIO):** Deixar para trás uma instância "órfã" de `new Redis()`, o que anularia o propósito da refatoração.
    * **Contramedida:** A execução do script de validação `scripts/validate-redis-refactor.sh`, conforme detalhado no roadmap, é uma contramedida mandatória e a prova final de que o risco foi mitigado.

---

### **IMPLEMENTAR:**
Refatoração do Gerenciamento de Conexão Redis para o Padrão Singleton, conforme o roadmap.

**CURRENT STATE:**
O sistema sofre de uma falha arquitetural crítica, com 6+ instâncias de conexão Redis descentralizadas, causando o esgotamento do pool de conexões e a falha total da suíte de testes automatizados. A evidência bruta é:
ReplyError: ERR max number of clients reached


**EXPECTED (Estado Final de Sucesso):**
O código-fonte é refatorado com sucesso, alinhado com o `ROADMAP_REDIS_SINGLETON_REFACTOR.md`. A prova irrefutável do sucesso da missão será a execução limpa de duas validações:
1.  O script `scripts/validate-redis-refactor.sh` termina com código de saída 0, confirmando que não há mais instâncias `new Redis()` legadas.
2.  O comando `npx vitest run` executa a suíte de testes completa com 100% de sucesso, sem erros de conexão Redis.

**CONSTRAINTS (Roadmap de Implementação):**
1.  **Leitura Mandatória:** Leia o documento `docs/missions/ROADMAP_REDIS_SINGLETON_REFACTOR.md` na sua totalidade.
2.  **Execução Faseada:** Execute cada um dos 6 passos definidos no cronograma do roadmap, na ordem exata especificada.
3.  **Validação Intermediária:** Após a Fase 4 (Refatoração dos Módulos), execute o script `scripts/validate-redis-refactor.sh` para validação intermediária.
4.  **Validação Final:** Após a Fase 5 (Adaptação dos Testes), execute `npx vitest run` como prova final de conformidade.

---
### **DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
*Você deve preencher esta seção ao final da sua execução como parte do seu relatório.*
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO e uma breve descrição]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Listar decisões tomadas durante a implementação que não estavam no roadmap]
* **VALIDAÇÃO PENDENTE:** [Listar ações de validação que o Orquestrador deve verificar]

---

### **PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  **Mapear ficheiros:** Confirme que todos os 8 arquivos listados no roadmap foram modificados.
2.  **Garantir tipos:** Garanta que os tipos inferidos a partir do novo `redis-manager` estão corretos.
3.  **Executar `get_latest_lsp_diagnostics`:** Garanta zero erros de LSP.
4.  **Declarar Nível de Confiança:** Preencha a Declaração de Incerteza.
5.  **Categorizar Riscos Descobertos:** Reporte quaisquer complexidades não previstas no roadmap.
6.  **Realizar teste funcional completo:** Execute `npx vitest run` e `scripts/validate-redis-refactor.sh`.
7.  **Documentar Decisões Técnicas:** Crie o arquivo de bug resolvido conforme instruído no roadma