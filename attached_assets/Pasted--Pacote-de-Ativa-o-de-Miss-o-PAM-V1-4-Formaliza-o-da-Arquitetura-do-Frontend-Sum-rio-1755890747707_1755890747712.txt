### Pacote de Ativação de Missão (PAM) V1.4 (Formalização da Arquitetura do Frontend)

* **Sumário da Missão (O Quê):** Gerar o documento `frontend-architecture-strategy.md`, detalhando a nossa arquitetura de frontend alvo, com base nos "Subtópicos Obrigatórios" do Ponto 56 da nossa Doutrina Arquitetural.
* **Intenção Estratégica (O Porquê):** Criar uma "fonte da verdade" para a nossa camada de apresentação, garantindo que o desenvolvimento do frontend seja consistente, performático e escalável. Este documento irá definir as nossas decisões sobre renderização, performance, dependências e a potencial adoção de Microfrontends.
* **Histórico Relevante (Consulta Obrigatória):** A auditoria de conformidade identificou a ausência de uma arquitetura de frontend formal como uma lacuna de prioridade P1 (Alta). Já sabemos que a stack atual é React (Vite) com renderização no lado do cliente (CSR).
* **Modelo Mental (Como se Encaixa):** Aja como um Arquiteto de Frontend. Sua tarefa é documentar a estratégia atual e futura para a nossa UI, com foco especial em performance (Core Web Vitals) e escalabilidade.

---

**IMPLEMENTAR:**
Documento de Estratégia de Arquitetura do Frontend

**CURRENT STATE:**
Temos um frontend funcional, mas não temos uma estratégia arquitetural documentada que guie a sua evolução, especialmente no que diz respeito a performance e à gestão de complexidade em escala.

**EXPECTED (Estado Final de Sucesso):**
Um novo arquivo Markdown, `architecture/02-technical/frontend-architecture-strategy.md`, é criado. O arquivo deve conter as seguintes seções, conforme o Ponto 56:

1.  **Seleção do Framework e Estratégia de Renderização:** Confirmar a nossa stack (React 18 + Vite) e a estratégia de renderização (Client-Side Rendering - CSR), com uma breve justificativa.
2.  **Estratégia Mobile:** Definir a nossa abordagem para dispositivos móveis (ex: "Adotaremos uma estratégia de Design Responsivo primeiro, com a possibilidade de evoluir para um Progressive Web App (PWA) no futuro").
3.  **Decisão sobre Microfrontends:** Uma análise de trade-offs e a decisão formal sobre a adoção (ou não) de Microfrontends no futuro.
4.  **Definição do Orçamento de Performance (Performance Budgeting):** Definir metas iniciais para os Core Web Vitals e o tamanho do bundle (ex: `LCP < 2.5s`, `FID < 100ms`, `CLS < 0.1`, `Bundle Size < 500KB`).
5.  **Estratégia de Gerenciamento de Dependências:** A nossa política para a adição de novas dependências (ex: "Toda nova dependência deve ser aprovada pelo Arquiteto Chefe e analisada quanto ao seu impacto no tamanho do bundle").
6.  **Estratégia de Monitoramento de Performance (RUM):** A nossa decisão de usar o Sentry Real User Monitoring (RUM) para monitorar a performance do frontend em produção.
7.  **Otimização do Caminho Crítico de Renderização:** Uma breve descrição das nossas estratégias de otimização (ex: "Code Splitting por rota, lazy loading de componentes pesados").

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que a estratégia de adiar Microfrontends é a correta para o nosso estágio atual, priorizando a simplicidade."]
* **VALIDAÇÃO PENDENTE:** [O documento gerado deve ser revisado e ratificado pelo Arquiteto Chefe.]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear o ficheiro exato a ser criado.
2.  Garantir que todas as 7 seções obrigatórias são criadas no documento.
3.  Executar `get_latest_lsp_diagnostics` para garantir que o ambiente está estável.
4.  **Declarar Nível de Confiança (0 a 100%)**.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (revisão do documento Markdown gerado).
7.  **Documentar Decisões Técnicas**.