### Pacote de Ativação de Missão (PAM) V1.0 (Formalização da Modelagem de Dados)

* **Sumário da Missão (O Quê):** Gerar o documento `data-modeling-strategy.md`, detalhando o nosso Modelo de Dados (Conceitual, Lógico, Físico) e a nossa estratégia de indexação, conforme os "Subtópicos Obrigatórios" do Ponto 39.
* **Intenção Estratégica (O Porquê):** Criar a "planta" fundamental da nossa camada de persistência. Uma modelagem de dados formal e bem pensada é a base para a performance, escalabilidade e integridade de todo o sistema.
* **Histórico Relevante (Consulta Obrigatória):** A auditoria de conformidade identificou a ausência de uma modelagem de dados formal como uma lacuna arquitetural de prioridade P0 (Crítica). O nosso schema Drizzle em `shared/schema.ts` será a base para esta documentação.
* **Modelo Mental (Como se Encaixa):** Aja como um Arquiteto de Dados. Sua tarefa é traduzir a nossa implementação de schema existente num modelo de dados formal e documentar a estratégia por trás dele.

---

**IMPLEMENTAR:**
Documento de Estratégia de Modelagem de Dados

**CURRENT STATE:**
Temos um schema Drizzle funcional, mas não temos a documentação formal que descreva o modelo de dados, os padrões de acesso ou a estratégia de indexação.

**EXPECTED (Estado Final de Sucesso):**
Um novo arquivo Markdown, `architecture/02-technical/data-modeling-strategy.md`, é criado. O arquivo deve conter as seguintes seções:

1.  **Modelo Conceitual:** Um diagrama de alto nível (pode ser em Mermaid) que mostra as principais entidades de negócio (Cliente, Proposta, Produto, Pagamento) e as suas relações.
2.  **Modelo Lógico:** Uma descrição mais detalhada das tabelas principais, os seus atributos e as chaves estrangeiras.
3.  **Modelo Físico:** Uma referência ao `shared/schema.ts` como a nossa implementação física, com notas sobre a escolha de tipos de dados específicos do PostgreSQL.
4.  **Análise dos Padrões de Acesso a Dados:** Uma análise de como os nossos dados são tipicamente consultados (ex: "A busca de propostas por status e por loja são as queries mais frequentes").
5.  **Estratégia de Indexação:** Com base na análise anterior, uma lista dos índices que devem ser criados para otimizar a performance (ex: "Criar um índice composto na tabela `propostas` nas colunas `(status, loja_id)`").
6.  **Estratégia de Evolução do Schema:** Uma referência ao nosso documento de "Zero Downtime Migration" e ao uso do `drizzle-kit generate`.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que a criação de índices nas colunas de status e chaves estrangeiras é a primeira prioridade para a otimização."]
* **VALIDAÇÃO PENDENTE:** [O documento gerado deve ser revisado e ratificado pelo Arquiteto Chefe.]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear o ficheiro exato a ser criado.
2.  Garantir que todas as 6 seções obrigatórias são criadas no documento.
3.  Executar `get_latest_lsp_diagnostics` para garantir que o ambiente está estável.
4.  **Declarar Nível de Confiança (0 a 100%)**.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (revisão do documento Markdown gerado).
7.  **Documentar Decisões Técnicas**.