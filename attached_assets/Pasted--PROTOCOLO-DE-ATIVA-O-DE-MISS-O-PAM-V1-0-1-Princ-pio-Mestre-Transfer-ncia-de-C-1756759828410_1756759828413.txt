---
### **PROTOCOLO DE ATIVAÇÃO DE MISSÃO (PAM) V1.0**

**1. Princípio Mestre: Transferência de Consciência**
*A fase de implementação terminou. A fase de **PROVA** começa agora. A sua única missão é executar os scripts de validação definidos no plano de batalha e reportar os resultados brutos e inalterados. O sucesso não é medido pela sua opinião, mas sim pelos dados de saída dos testes.*

**2. Doutrina de Engenharia de Contexto Dinâmico (DECD) V1.0 - DESATIVADA**
*A pesquisa está **proibida**. A execução de comandos de validação é a única ação permitida.*

---
### **Pacote de Ativação de Missão: OPERAÇÃO ESTABILIZAÇÃO CRÍTICA (FASE 1.4 - VALIDAÇÃO)**

* **Sumário da Missão (O Quê):** Executar a suíte completa de validação para provar irrefutavelmente que a refatoração do Redis Singleton erradicou o vazamento de conexões e não introduziu regressões.
* **Intenção Estratégica (O Porquê):** Este passo é o "gatekeeper" da qualidade. Ele transforma a "hipótese de correção" numa "certeza de estabilidade". Sem a prova de uma suíte de testes 100% funcional, toda a refatoração é considerada uma falha.
* **Histórico Relevante (Consulta Obrigatória):** Consulte o documento `docs/missions/ROADMAP_REDIS_SINGLETON_REFACTOR.md` para relembrar os dois critérios de sucesso mandatórios para esta missão.
* **Modelo Mental (Como se Encaixa):** Você agora é o Engenheiro de Qualidade (QA). O seu trabalho não é codificar, mas sim tentar quebrar o trabalho anterior. Execute os testes com ceticismo e reporte a verdade, seja ela qual for.
* **Riscos Antecipados e Contramedidas:**
    * **Risco (ALTO):** A suíte de testes pode revelar novas falhas ou regressões introduzidas pela refatoração complexa.
    * **Contramedida:** A execução destes testes é a própria contramedida. Reportar as falhas de forma transparente permitirá a criação de um PAM de hotfix preciso.

---

### **EXECUTAR E VALIDAR:**
Prova de Conformidade da Refatoração Redis.

**CURRENT STATE:**
O código foi refatorado para usar um padrão Singleton de conexão Redis. A aplicação inicia e o endpoint de health check responde positivamente. No entanto, a correção não foi validada contra o comportamento esperado do sistema sob carga de testes.

**EXPECTED (Estado Final de Sucesso):**
O output **completo e bruto** dos dois comandos de validação, provando que a refatoração foi 100% bem-sucedida.

**CONSTRAINTS (Roadmap de Execução da Validação):**
1.  **Executar Validação de Refatoração:** Execute o script de validação de arquitetura. Forneça o output completo.
    ```bash
    sh scripts/validate-redis-refactor.sh
    ```
2.  **Executar Suíte de Testes Completa:** Execute todos os testes de integração e unitários. Forneça o output completo do `vitest`.
    ```bash
    npx vitest run
    ```

---
### **DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
*Você deve preencher esta seção ao final da sua execução como parte do seu relatório.*
* **CONFIANÇA NA VALIDAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Reportar se a execução dos testes revelou novas falhas]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [N/A para esta missão de validação]
* **VALIDAÇÃO PENDENTE:** [O seu output será a validação final para esta fase]