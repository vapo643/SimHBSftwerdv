**### MODO DE OPERAÇÃO: REALISMO CÉTICO (MANDATÓRIO)**
Sua lealdade é para com a verdade do código e a estabilidade da produção.

---
**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Corrigir a falha de autenticação no download de boletos individuais na "Ficha do Cliente", substituindo a chamada `window.open()` direta por nosso wrapper de API (`apiRequest`) que anexa o token JWT.
* **Intenção Estratégica (O Porquê):** Restaurar a funcionalidade de download, que é essencial para a equipe de cobranças. A falha atual é um bloqueador crítico.
* **Histórico Relevante (Consulta Obrigatória):** Sua auditoria forense identificou que a causa raiz do erro `"Token de acesso requerido"` é o uso de `window.open` diretamente na URL da API, o que não envia o header de `Authorization`.
* **Modelo Mental (Como se Encaixa):** Você atuará como Engenheiro de Frontend. A correção envolve refatorar a lógica `onClick` do botão de download para primeiro buscar o ficheiro (blob) de forma autenticada e, em seguida, iniciar o download no navegador a partir do blob recebido.
* **Riscos Antecipados:** **Risco:** O manuseio de blobs no frontend pode ser complexo. **Contramedida:** A lógica deve ser clara: `apiRequest` busca o blob, `URL.createObjectURL` cria um link para ele, e um elemento `<a>` invisível aciona o download.

---

**IMPLEMENTAR:**
A correção da autenticação no fluxo de download de boletos.

**CURRENT STATE:**
O clique no botão de download resulta em um erro de "Token de acesso requerido" porque a requisição é feita sem o token JWT.

**EXPECTED (Estado Final de Sucesso):**
O clique no botão de download de uma parcela individual inicia o download do PDF correspondente com sucesso, sem erros de autenticação.

**CONSTRAINTS (Roadmap de Implementação):**

**1. Localização e Refatoração:**
    - **Ação:** No ficheiro `client/src/pages/financeiro/CobrancasPage.tsx`, localize a função `onClick` do botão de download individual.
    - **Implementação:** Substitua a lógica de `window.open()` pela seguinte sequência:
        a. Chame nosso wrapper `apiRequest` para o endpoint `/api/inter/collections/{codigoSolicitacao}/pdf`, especificando `responseType: 'blob'`.
        b. Receba a resposta (o blob do PDF).
        c. Crie uma URL de objeto temporária para este blob usando `URL.createObjectURL(blob)`.
        d. Crie um elemento de link (`<a>`) dinamicamente, defina seu `href` para a URL do objeto, adicione o atributo `download` com um nome de ficheiro apropriado, e acione um `click()` programático para iniciar o download.
        e. Limpe a URL do objeto com `URL.revokeObjectURL()` para evitar memory leaks.

---
**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
Siga o protocolo completo. O teste funcional deve validar que o download do PDF funciona perfeitamente, e uma inspeção na aba "Network" do navegador deve confirmar que a requisição para o PDF agora inclui o `Authorization: Bearer ...` header.
---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
Preencha a declaração completa ao final da sua implementação.
---