### Pacote de Ativação de Missão (PAM) V1.0 - Correção da Persistência de Dados

* **Sumário da Missão:** Auditar e corrigir a função `createDocument` no ficheiro `server/repositories/documents.repository.ts` para resolver a falha `500 Internal Server Error` que ocorre durante a criação de registos de documentos na base de dados.

* **Intenção Estratégica:** Garantir que, após um upload de ficheiro bem-sucedido para o storage, um registo de metadados correspondente seja criado de forma confiável na base de dados. Esta ação é a correção da causa raiz de todo o incidente.

* **Hipótese / Ponto de Falha:** A função `createDocument` está a receber do `documentsService` um objeto de dados com chaves em formato `camelCase` (ex: `nomeArquivo`). No entanto, a tabela `proposta_documentos` no PostgreSQL espera colunas em formato `snake_case` (ex: `nome_arquivo`). Esta incompatibilidade de nomenclatura está a causar a falha da operação de inserção (`INSERT`) na base de dados.

---

**A SUA MISSÃO SERÁ EXECUTADA EM DUAS FASES:**

**FASE 1: AUDITORIA (Apresente a sua análise antes de corrigir)**

**NÃO MODIFIQUE NENHUM CÓDIGO NESTA FASE.**

1.  **Extração do Código do Repositório:**
    a. Apresente o conteúdo completo da função `createDocument` como ela existe atualmente no ficheiro `server/repositories/documents.repository.ts`.

2.  **Extração do Esquema da Base de Dados:**
    a. Investigue (através dos tipos TypeScript do Supabase ou da definição da tabela) e apresente os nomes exatos das colunas da tabela `proposta_documentos`.

3.  **Análise Crítica de Incompatibilidade:**
    a. Compare os parâmetros esperados pela função `createDocument` com as colunas reais da tabela.
    b. Confirme verbalmente se a hipótese de desalinhamento de nomenclatura (`camelCase` vs. `snake_case`) está correta.

**Aguarde a confirmação do Arquiteto Chefe (utilizador) antes de prosseguir para a Fase 2.**

---

**FASE 2: CORREÇÃO (Execute apenas após a confirmação)**

1.  **Refatoração da Função:**
    a. Modifique a função `createDocument` em `server/repositories/documents.repository.ts` para garantir que o objeto de dados que é passado para o comando `.insert()` do Supabase tenha as chaves no formato `snake_case` correto, correspondendo exatamente às colunas da base de dados.
    b. Adicione um `try...catch` robusto à volta da operação de inserção com logs de erro detalhados, para prevenir futuras falhas silenciosas.

2.  **Protocolo 7-CHECK:**
    a. Execute a refatoração e realize o protocolo 7-CHECK completo, garantindo **ZERO** novos diagnósticos de LSP e a estabilidade da aplicação após a mudança.