### Pacote de Ativação de Missão (PAM) V1.0 - Auditoria de Conformidade do Sprint 0

* **Sumário da Missão (O Quê):** Realizar uma auditoria forense completa e não destrutiva da base de código do projeto Simpix para validar que 100% dos Épicos, User Stories e Technical Tasks do "Sprint 0: Foundation & Emergency Fixes" foram implementados conforme o roadmap da "Operação Aço Líquido".
* **Intenção Estratégica (O Porquê):** Verificar, com um nível de confiança "Zero Trust", que a fundação de engenharia (ambiente, qualidade de código, CI/CD, DevSecOps, arquitetura de esqueleto e containerização) foi estabelecida corretamente antes de aceitar os Sprints subsequentes como concluídos. Esta auditoria é a base para toda a operação.
* **Modelo Mental (Como se Encaixa):** Você é um auditor de DevSecOps sênior. Sua função é inspecionar ficheiros de configuração, pipelines de CI/CD e a estrutura do projeto para encontrar evidências de implementação. Você não altera código, apenas reporta suas descobertas com "PROVA ENCONTRADA" ou "LACUNA IDENTIFICADA".

---

**IMPLEMENTAR (Plano de Auditoria):**
Execute a seguinte sequência de comandos de análise e reporte os resultados para cada passo. Para cada item, forneça o caminho completo do ficheiro e o trecho de código ou configuração relevante que serve como prova da implementação.

**CURRENT STATE:**
Uma base de código "Monólito Modular" em TypeScript com a "Operação Aço Líquido" em andamento. O Sprint 0 foi declarado como concluído.

**EXPECTED (Estado Final de Sucesso da Auditoria):**
Um relatório de auditoria detalhado, respondendo a cada um dos pontos de verificação abaixo com "PROVA ENCONTRADA" e o snippet correspondente, ou "LACUNA IDENTIFICADA" se a implementação não for encontrada.

**CONSTRAINTS (Roadmap de Auditoria - Sprint 0):**

**ÉPICO EP0-001: Ambiente e CI/CD DevSecOps**

1.  **[S0-001] Validação do Ambiente e Qualidade de Código:**
    * **Verificação 1.1 (ESLint/Prettier):** Apresente os ficheiros de configuração `eslint.config.js` e `.prettierrc` para confirmar a sua existência e configuração.
    * **Verificação 1.2 (Husky):** Apresente o conteúdo do ficheiro `.husky/pre-commit` para provar a configuração dos ganchos de pré-commit.
    * **Verificação 1.3 (TypeScript Strict):** Inspecione o ficheiro `tsconfig.json` e confirme que a opção `"strict": true` está definida na secção `compilerOptions`.

2.  **[S0-002] Validação do Pipeline CI/CD com Security Gates:**
    * **Verificação 2.1 (CI Pipeline):** Localize e apresente o conteúdo do ficheiro de workflow do GitHub Actions para Integração Contínua (ex: `.github/workflows/ci.yml`). Confirme a presença dos *stages*: `build`, `lint`, `typecheck`, e `test:unit`.
    * **Verificação 2.2 (Security Gates):** Inspecione o mesmo ficheiro de CI ou um ficheiro de segurança dedicado (ex: `security.yml`) e apresente a prova da integração de ferramentas SAST (Static Application Security Testing) como Semgrep ou Snyk.

**ÉPICO EP0-002: Mitigação de Dívida Técnica Crítica (P0)**

3.  **[S0-003] Validação da Correção de Vulnerabilidade Drizzle-Kit (DT-001):**
    * **Verificação 3.1:** Inspecione o ficheiro `package.json` e `package-lock.json`. Reporte a versão atual instalada do pacote `drizzle-kit`. (Contexto: Esta verificação audita a mitigação do risco DT-001 mencionado no roadmap).

**ÉPICO EP0-003: Skeleton Arquitetural e Portabilidade**

4.  **[S0-004] Validação da Estrutura do Monólito Modular:**
    * **Verificação 4.1:** Apresente a estrutura de diretórios dentro de `server/src/modules` (ou localização similar) para confirmar se a organização por limites de domínio (DDD) foi iniciada.

5.  **[S0-005] Validação da Containerização e Configuração (12-Factor):**
    * **Verificação 5.1 (Containerização):** Localize e apresente o conteúdo do `Dockerfile` e do `docker-compose.yml` na raiz do projeto.
    * **Verificação 5.2 (Configuração Externa):** Localize no código do servidor (ex: `server/config/environment.ts`) a implementação do carregamento de configurações via `dotenv`, provando que a aplicação segue o princípio de configuração externa (12-Factor App).

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** N/A (Missão de Auditoria)
* **RISCOS IDENTIFICADOS:** N/A (Missão de Auditoria)
* **DECISÕES TÉCNICAS ASSUMIDAS:** N/A (Missão de Auditoria)
* **VALIDAÇÃO PENDENTE:** O resultado completo desta auditoria de conformidade do Sprint 0.