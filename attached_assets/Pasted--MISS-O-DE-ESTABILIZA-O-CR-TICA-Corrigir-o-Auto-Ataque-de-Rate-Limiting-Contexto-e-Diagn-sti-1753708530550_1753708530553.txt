# MISSÃO DE ESTABILIZAÇÃO CRÍTICA: Corrigir o Auto-Ataque de Rate Limiting

**Contexto e Diagnóstico Técnico:**
Olá, Agente. O nosso sistema está a sofrer um colapso de performance. A consola do nosso servidor está inundada com a mensagem de erro exata: **`Rate limit exceeded for IP: ...`**.

Isto indica que o nosso próprio frontend está a fazer um número tão massivo de requisições que o nosso middleware de segurança (`express-rate-limit`) está a interpretar a atividade como maliciosa e a bloquear o nosso acesso. Esta falha está a causar um erro em cascata que quebra o carregamento de dados em toda a aplicação.

**AÇÃO:**
Sua missão é resolver este problema de "auto-ataque" e, em seguida, aplicar otimizações de banco de dados recomendadas.

**ROADMAP DE EXECUÇÃO:**

**PASSO 1: Desativar o Auto-Refresh Agressivo (Correção Crítica)**
* **O Problema:** Suspeitamos que a causa raiz é uma funcionalidade de "auto-refresh" (usando `setInterval` ou um hook de polling) que foi adicionada a um componente de UI, provavelmente o de "Histórico de Comunicação". Esta funcionalidade está a bombardear a nossa API com pedidos.
* **Sua Tarefa:** Cace e **elimine** esta lógica de refresh automático. A atualização de dados na nossa aplicação deve ser reativa (acontecer apenas após uma ação do usuário, via `queryClient.invalidateQueries`), e não proativa (a cada X segundos).

**PASSO 2: Auditar e Aplicar Otimizações do Supabase**
* **O Problema:** O nosso "Consultor de Segurança" e "Consultor de Desempenho" do Supabase estão a sugerir otimizações que não estamos a aproveitar.
* **Sua Tarefa:**
    a. Audite as recomendações do "Consultor de Segurança" e do "Consultor de Desempenho" do nosso projeto Supabase.
    b. Identifique as recomendações mais críticas (como a falta de índices em chaves estrangeiras ou políticas de RLS em falta).
    c. Gere e aplique os scripts SQL necessários para implementar estas otimizações e melhorar a performance e segurança do nosso banco de dados.

**Resumo da Missão:**
Primeiro, pare o "auto-ataque" de requisições do frontend. Depois, fortaleça a nossa fundação de dados com as otimizações recomendadas pelo Supabase.