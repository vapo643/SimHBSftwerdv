Roadmap Proposto - Missão: Isenção de TAC e Gestão de Produtos V1
Este plano de batalha é projetado para corrigir o GAP arquitetural fundamental e construir a nova funcionalidade sobre uma fundação lógica e sólida.

FASE 1: Refatoração da Lógica de Negócio de TAC (A Fundação)
Objetivo: Corrigir o GAP arquitetural, fazendo com que o sistema calcule a TAC com base na configuração do produto associado.

Passos de Execução:

[PENDENTE] Passo 1.1 (Refatoração do Cálculo de TAC): Modificar o ccbGenerationService.ts. A lógica deve agora, em vez de ler o valor da TAC da proposta, buscar o produto associado, ler os seus campos tacValor e tacTipo e calcular a TAC dinamicamente com base nessa configuração.

[PENDENTE] Passo 1.2 (Implementação da Lógica de Isenção):

Ação 1: Criar uma nova função isClienteCadastrado(clienteId). Esta função deve consultar a tabela propostas para verificar se o cliente possui alguma proposta com os status "aprovado", "ASSINATURA_CONCLUIDA" ou "QUITADO".

Ação 2: Na lógica de cálculo de TAC (Passo 1.1), chamar a função isClienteCadastrado. Se ela retornar true, o valor da TAC a ser aplicado na proposta deve ser zero.

FASE 2: Evolução da Interface do Usuário (Frontend)
Objetivo: Expor a nova capacidade de configuração de TAC na interface de administração de produtos.

Passos de Execução:

[PENDENTE] Passo 2.1 (Atualização do Formulário de Produto): Modificar o componente ProdutoForm.tsx. Adicionar dois novos campos ao formulário:

Um Input numérico para "Valor da TAC".

Um Select (ou RadioGroup) para "Tipo de TAC", com as opções "Fixo" e "Percentual".

[PENDENTE] Passo 2.2 (Integração com a API): Garantir que, ao salvar o formulário de produto, os novos valores de tacValor e tacTipo sejam corretamente enviados para a API de criação/atualização de produtos e persistidos no banco de dados.

FASE 3: Testes e Validação
Objetivo: Garantir que a nova lógica de negócio complexa é robusta e à prova de regressões.

Passos de Execução:

[PENDENTE] Passo 3.1 (Teste de Isenção): Criar um novo teste de integração que simule a criação de uma proposta para um "cliente cadastrado" e valide que o valor_tac resultante na proposta seja zero.

[PENDENTE] Passo 3.2 (Teste de Cobrança): Criar um teste de integração para um novo cliente, associado a um produto com uma TAC configurada, e validar que o valor_tac na proposta é calculado corretamente.

Arquiteto Chefe, esta é a fase de DEBATE. O plano de batalha exaustivo, baseado na inteligência coletada, foi apresentado.

Solicito sua revisão e autorização para iniciarmos a EXECUÇÃO, começando pela FASE 1.