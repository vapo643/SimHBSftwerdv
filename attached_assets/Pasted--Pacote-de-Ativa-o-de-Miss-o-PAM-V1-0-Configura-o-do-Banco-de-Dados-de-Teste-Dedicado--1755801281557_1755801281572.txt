### Pacote de Ativação de Missão (PAM) V1.0 (Configuração do Banco de Dados de Teste Dedicado)

* **Sumário da Missão (O Quê):** Provisionar um novo banco de dados de teste no Supabase e configurar a sua string de conexão na variável de ambiente `TEST_DATABASE_URL` do nosso projeto.
* **Intenção Estratégica (O Porquê):** Ativar a nossa suíte de testes de integração, completando a implementação do nosso ambiente de teste fisicamente isolado. Esta é a etapa final para garantir que possamos validar a nossa nova arquitetura de forma segura e repetível.
* **Histórico Relevante (Consulta Obrigatória):** A missão anterior criou os testes, mas a sua execução está bloqueada porque a `TEST_DATABASE_URL` não está definida. A nossa arquitetura de segurança de 4 camadas impede a execução até que esta configuração seja concluída.
* **Modelo Mental (Como se Encaixa):** Esta é uma missão de infraestrutura. A primeira parte é manual (executada pelo Arquiteto Chefe), e a segunda é uma verificação final (executada pelo Agente).

---

**IMPLEMENTAR:**
Configuração e Validação do Banco de Dados de Teste

**CURRENT STATE:**
A suíte de testes de integração para a API de Propostas está escrita, mas inoperante, pois a variável de ambiente `TEST_DATABASE_URL` está vazia.

**EXPECTED (Estado Final de Sucesso):**

**Parte 1: Ação Manual do Arquiteto Chefe**
1.  Acesse a sua conta do Supabase.
2.  Crie um **novo projeto** dedicado exclusivamente aos testes automatizados (ex: "Simpix Tests").
3.  Navegue até as configurações do banco de dados deste novo projeto (`Project Settings -> Database`).
4.  Copie a **string de conexão** (Connection String) do tipo `URI`.
5.  No nosso projeto Replit, vá para a secção de "Secrets".
6.  Crie um novo segredo com a chave `TEST_DATABASE_URL` e cole a string de conexão que você copiou.

**Parte 2: Validação pelo Agente Executor**
7.  Após a configuração do segredo, o Agente deve executar a suíte de testes de integração que falhou anteriormente (`npx vitest run tests/integration/proposal-api.test.ts`).
8.  **O critério de sucesso final e não negociável:** A execução da suíte de testes agora resulta na passagem de **TODOS** os testes, provando que a conexão com o novo banco de dados de teste está a funcionar e que a nossa nova API está correta.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO. Risco de que as migrações de schema não tenham sido aplicadas ao novo banco de teste.]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que um novo projeto Supabase virá com um schema limpo que precisa de ser migrado."]
* **VALIDAÇÃO PENDENTE:** [Nenhuma. O sucesso é definido pela passagem de 100% dos testes de integração.]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear a variável de ambiente a ser configurada e o script de teste a ser executado.
2.  Garantir que, se necessário, as migrações do Drizzle (`npm run db:push`) sejam aplicadas ao novo banco de teste antes de executar os testes.
3.  Executar `get_latest_lsp_diagnostics` para garantir 0 erros.
4.  **Declarar Nível de Confiança (0 a 100%)**.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (executar a suíte de testes e garantir que todos passem).
7.  **Documentar Decisões Técnicas**.