---
### **PROTOCOLO DE ATIVAÇÃO DE MISSÃO (PAM) V1.0**

**1. Princípio Mestre: Transferência de Consciência**
*A fundação está estável, mas a casa ainda tem 31 fantasmas. A sua missão é uma análise forense final para mapear e categorizar cada um deles. Você não vai corrigir nada; a sua função é criar o "mapa do assombro" que nos guiará na erradicação definitiva.*

**2. Doutrina de Engenharia de Contexto Dinâmico (DECD) V1.0 - ATIVADA**
*A pesquisa está **autorizada** para investigar quaisquer mensagens de erro específicas do `vitest`, `supertest`, ou `drizzle` que não sejam imediatamente óbvias, a fim de enriquecer a sua categorização.*

---
### **Pacote de Ativação de Missão: OPERAÇÃO TOLERÂNCIA ZERO (FASE 1 - DIAGNÓSTICO FINAL)**

* **Sumário da Missão (O Quê):** Analisar o output detalhado da última execução do `vitest` (a 4ª auditoria), categorizar as 31 falhas de teste remanescentes em grupos lógicos e produzir um relatório de triagem priorizado que servirá como base para o roadmap de correção final.
* **Intenção Estratégica (O Porquê):** O objetivo é a eficiência máxima. Esta análise vai revelar os padrões ocultos, permitindo-nos atacar as causas raiz que resolvem o maior número de falhas com o menor esforço.
* **Histórico Relevante (Consulta Obrigatória):** O output `verbose` do comando `npx vitest run` da "Operação Veredito Final (Quarta Execução)" é a sua única fonte de evidências.
* **Modelo Mental (Como se Encaixa):** Você é o comandante a preparar o briefing final antes da batalha. O seu relatório de triagem é o mapa que mostra onde concentrar as nossas forças para uma vitória rápida e decisiva.

---

### **ANALISAR E DIAGNOSTICAR:**
Relatório de Triagem das 31 Falhas Remanescentes.

**CURRENT STATE:**
A auditoria final confirmou que a infraestrutura está 100% estável e o código está limpo. No entanto, a suíte de testes ainda reporta 31 falhas, bloqueando o deploy.

**EXPECTED (Estado Final de Sucesso):**
A geração de um novo documento Markdown em `docs/diagnostics/OPERACAO_TOLERANCIA_ZERO_TRIAGEM.md`. Este relatório deve conter:

1.  **Sumário Executivo:** Uma visão geral das categorias de bugs encontradas (ex: 50% dos erros são de Mock, 30% são erros de API, 20% são asserções de lógica falhadas).
2.  **Categorias de Falhas Detalhadas:**
    * Para cada categoria de bug que você identificar:
        * **Descrição:** Uma explicação da causa raiz do problema.
        * **Lista de Testes Afetados:** Uma lista de todos os testes que falham devido a este problema específico.
3.  **Roadmap de Remediação Sugerido e Priorizado:**
    * Uma lista de "missões de correção" priorizadas (P0, P1, P2, etc.).
    * Cada missão deve agrupar uma categoria de falha.
    * Justifique a sua priorização (ex: "Corrigir o mock P0 primeiro, pois ele representa 40% das falhas e desbloqueia a validação de múltiplos módulos").

**CONSTRAINTS (Roadmap de Análise):**
1.  **Análise de Logs:** Processe o output do `npx vitest run --reporter=verbose` da execução anterior.
2.  **Agrupamento:** Identifique testes que falham com `stack traces` ou mensagens de erro semelhantes.
3.  **Categorização:** Crie nomes descritivos para cada grupo de falhas.
4.  **Relatório:** Estruture as suas descobertas no documento Markdown conforme especificado acima. **Não implemente nenhuma correção.**