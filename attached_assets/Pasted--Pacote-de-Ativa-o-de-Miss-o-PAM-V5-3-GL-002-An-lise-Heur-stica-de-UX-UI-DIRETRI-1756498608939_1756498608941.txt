### **Pacote de Ativação de Missão (PAM) V5.3 - GL-002 (Análise Heurística de UX/UI)**

**[DIRETRIZ MESTRA DE DIVULGAÇÃO - PDT V2.0 ATIVADA]**
*Sua resposta deve ser exaustiva. Reporte a realidade técnica sem omissões. A transparência radical é mandatória.*

* **Sumário da Missão (O Quê):** Realizar uma análise heurística completa da interface do usuário (UI) e da experiência do usuário (UX) do Simpix, focando nos fluxos principais, para identificar e catalogar inconsistências, pontos de atrito e oportunidades de "polimento".
* **Intenção Estratégica (O Porquê):** Elevar a qualidade percebida da aplicação. Uma interface polida, consistente e intuitiva aumenta a confiança do usuário, reduz a taxa de erros e melhora a eficiência operacional. Antes de endurecer a produção, precisamos garantir que a "fachada" do nosso sistema seja tão robusta quanto a sua "fundação".
* **Histórico Relevante (Consulta Obrigatória):** O desenvolvimento até agora foi focado na funcionalidade de backend. Esta é a primeira missão dedicada exclusivamente à qualidade da experiência do frontend.

---

**AUDITAR E ANALISAR:**
Qualidade da Experiência do Usuário (UX/UI) nos Fluxos Críticos

**CONTEXT:**
O sistema Simpix é funcionalmente robusto, mas a interface foi construída de forma incremental. Agora, precisamos de uma revisão dedicada para garantir que a experiência do usuário seja coesa, profissional e livre de atritos. Esta auditoria criará o backlog de tarefas de refinamento para a fase de implementação.

**CURRENT STATE:**
O frontend é funcional, mas não passou por uma revisão de UX/UI dedicada. Existem potenciais inconsistências em componentes, fluxos e feedback ao usuário.

**EXPECTED (Estado Final de Sucesso):**
Você deve produzir um **Relatório de Análise Heurística de UX/UI** detalhado, dividido em seções que correspondam aos fluxos de usuário. Para cada fluxo, você deve listar os problemas encontrados, classificá-los por severidade (Crítico, Alto, Médio, Baixo) e sugerir uma ação de correção.

**Fluxos a serem auditados:**
1.  **Fluxo de Login e Autenticação.**
2.  **Fluxo de Navegação Principal (Dashboard e Sidebar).**
3.  **Fluxo de Criação de Nova Proposta (Formulário Multi-etapas).**
4.  **Fluxo de Listagem e Filtragem de Propostas.**
5.  **Fluxo de Visualização de Detalhes de uma Proposta.**

**Exemplo de item no relatório:**
* **Fluxo:** Criação de Nova Proposta
* **Problema:** O botão "Avançar" não fica desabilitado quando campos obrigatórios estão vazios, permitindo que o usuário avance com um formulário inválido e só receba o erro depois.
* **Severidade:** ALTO
* **Ação Sugerida:** Implementar validação em tempo real. O botão "Avançar" deve ter seu estado `disabled` atrelado à validação do formulário (Zod/React Hook Form).

**CONSTRAINTS (Roadmap de Implementação):**
1.  **Analisar Código dos Fluxos:** Audite os arquivos de código-fonte relevantes para cada um dos 5 fluxos listados (ex: `client/src/pages/login.tsx`, `client/src/components/ui/sidebar.tsx`, `client/src/pages/propostas/nova.tsx`, etc.).
2.  **Aplicar Heurísticas de Usabilidade:** Durante a análise do código e da funcionalidade implícita, avalie a interface contra princípios de usabilidade conhecidos (ex: "Visibilidade do estado do sistema", "Consistência e padrões", "Prevenção de erros", "Design minimalista").
3.  **Catalogar Descobertas:** Para cada fluxo, documente os problemas encontrados, seguindo o formato (Problema, Severidade, Ação Sugerida).
4.  **Compilar Relatório Final:** Organize todas as suas descobertas no relatório final estruturado.