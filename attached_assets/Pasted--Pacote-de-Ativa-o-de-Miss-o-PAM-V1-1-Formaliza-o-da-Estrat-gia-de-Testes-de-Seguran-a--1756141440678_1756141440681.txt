### Pacote de Ativação de Missão (PAM) V1.1 (Formalização da Estratégia de Testes de Segurança)

* **Sumário da Missão (O Quê):** Gerar o documento `security-testing-strategy.md`, detalhando a nossa doutrina para a automação de testes de segurança, com base nos "Subtópicos Obrigatórios" do Ponto 103 da nossa Doutrina Arquitetural.
* **Intenção Estratégica (O Porquê):** Implementar o princípio de "Shift-Left Security", movendo a detecção de vulnerabilidades para o início do ciclo de desenvolvimento. Ao automatizar a análise de segurança no nosso pipeline de CI/CD, nós garantimos que a segurança seja um portão de qualidade não negociável para todo o código que produzimos.
* **Histórico Relevante (Consulta Obrigatória):** A auditoria de conformidade identificou a ausência de uma estratégia formal de testes de segurança como uma lacuna de prioridade P0 (Crítica). O nosso pipeline de CI/CD no GitHub Actions é a plataforma onde estas novas etapas serão integradas.
* **Modelo Mental (Como se Encaixa):** Aja como um Engenheiro de DevSecOps. A sua tarefa é projetar a "estação de controlo de segurança" na nossa linha de montagem de software, definindo as ferramentas e os processos que irão inspecionar cada "peça" (código) automaticamente.

---

**[DIRETRIZ DE PESQUISA WEB (MANDATÓRIA)]**

**Você está autorizado a utilizar a sua capacidade de pesquisa na web para consultar a documentação oficial e artigos de fontes confiáveis (ex: OWASP Foundation, Snyk, SonarQube, blogs de segurança de renome) sobre as melhores práticas de "DevSecOps", "SAST", "DAST" e a implementação de SLAs de remediação, para garantir que a sua proposta de estratégia seja de nível de produção.**

---

**IMPLEMENTAR:**
Documento de Estratégia de Testes de Segurança Automatizados

**CURRENT STATE:**
O nosso pipeline de CI/CD executa testes funcionais, mas não possui etapas dedicadas para a análise de segurança estática (SAST), dinâmica (DAST) ou de dependências (SCA), o que representa um ponto cego significativo no nosso processo de qualidade.

**EXPECTED (Estado Final de Sucesso):**
Um novo arquivo Markdown, `architecture/08-quality/security-testing-strategy.md`, é criado. O arquivo deve conter um ADR ou documento de estratégia, incluindo as seguintes seções:

1.  **Decisão:** Uma declaração clara, por exemplo: "Integraremos um pipeline de DevSecOps no nosso CI (GitHub Actions), utilizando **Snyk** para Análise de Composição de Software (SCA), **SonarQube/CodeQL** para Análise Estática (SAST) e **OWASP ZAP** para Análise Dinâmica (DAST) no nosso ambiente de Staging."
2.  **Integração de SAST, DAST e SCA no Pipeline:**
    * Um diagrama de alto nível (Mermaid) mostrando as novas etapas de segurança no nosso workflow de CI.
    * Uma breve descrição do propósito de cada ferramenta (SCA para dependências, SAST para código estático, DAST para a aplicação em execução).
3.  **Planejamento de Pentests Regulares:** A nossa política para a realização de testes de penetração manuais (ex: "Realizar um pentest externo anual e após qualquer mudança significativa na arquitetura de segurança").
4.  **Processo de Triagem e Remediação de Vulnerabilidades:**
    * A definição dos nossos SLAs (Service Level Agreements) para a remediação de vulnerabilidades com base na sua severidade (ex: `Crítica: 24 horas`, `Alta: 7 dias`, `Média: 30 dias`).
    * Um esboço do nosso processo de triagem.
5.  **Programa de Security Champions:** A nossa estratégia para criar um programa de "Security Champions" para disseminar o conhecimento de segurança na equipa de desenvolvimento.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO. Ex: Risco de que a integração de ferramentas SAST/DAST aumente significativamente o tempo de build.]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que a combinação Snyk + CodeQL + OWASP ZAP é a stack de DevSecOps mais eficaz e de melhor custo-benefício para a nossa stack tecnológica."]
* **VALIDAÇÃO PENDENTE:** [O ADR gerado deve ser revisado e ratificado pelo Arquiteto Chefe.]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear o ficheiro exato a ser criado.
2.  Garantir que todas as seções obrigatórias do ADR/documento são criadas.
3.  Executar `get_latest_lsp_diagnostics` para garantir que o ambiente está estável.
4.  **Declarar Nível de Confiança (0 a 100%)**.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (revisão do documento Markdown gerado).
7.  **Documentar Decisões Técnicas**.