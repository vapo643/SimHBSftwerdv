**IMPLEMENTAR:**
Auditoria arquitetural completa de todo o fluxo de "Formalização", avaliando sua sustentabilidade, escalabilidade e, crucialmente, sua tolerância a falhas.

**CONTEXT (PAM V1.0):**
* **Sumário da Missão:** Analisar a arquitetura atual do fluxo de formalização (CCB, ClickSign, Banco Inter) e produzir um relatório que avalie sua robustez e identifique gargalos ou pontos únicos de falha.
* **Intenção Estratégica:** O sistema precisa ser confiável para o crescimento do negócio. Precisamos garantir que a arquitetura atual não irá falhar sob carga e que um erro em uma integração externa (ex: Banco Inter fora do ar) não comprometa a estabilidade do resto da aplicação. Este é um princípio inegociável.
* **Histórico Relevante (Consulta Obrigatória):** Ative sua base de conhecimento. Consulte a pasta `/docs/erros_e_solucoes/`. Revise os relatórios sobre as crises anteriores com o Banco Inter e a ClickSign. Sua análise deve considerar como as soluções que implementamos impactam a escalabilidade geral.
* **Modelo Mental:** O fluxo de formalização é uma cadeia de processos, alguns síncronos (geração de CCB) e outros assíncronos (webhooks, sincronização de boletos). Sua análise deve focar nos pontos de transição entre estes processos.
* **Riscos Antecipados:** **Risco:** Uma falha em uma chamada de API para o Banco Inter pode bloquear o loop de sincronização de boletos. **Risco:** Um pico de propostas pode sobrecarregar nosso servidor com tarefas de fusão de PDF.

---

**PROCESSO SISTEMÁTICO (Roadmap de Auditoria - NÃO FAÇA CORREÇÕES):**

Sua missão é atuar como um Arquiteto de Soluções e responder às seguintes questões:

**1. Análise de Tolerância a Falhas (O Princípio Inegociável):**
    * **Cenário de Falha 1 (ClickSign):** Se a API da ClickSign estiver fora do ar no momento em que tentarmos enviar uma CCB para assinatura, o que acontece com a nossa API? Ela retorna um erro imediato? Ela fica bloqueada? A falha é isolada ou poderia impactar outras requisições?
    * **Cenário de Falha 2 (Banco Inter):** Se a API do Banco Inter retornar um erro `500` durante o processo de sincronização de boletos em background (`sincronizarBoletosDaProposta`), o que acontece? O processo para? Ele tenta novamente? Como a falha é registrada para que possamos diagnosticá-la?
    * **Relatório:** Analise o código e descreva a robustez do nosso tratamento de erros para estes cenários.

**2. Análise de Escalabilidade e Gargalos:**
    * **Geração de CCB e Carnês:** A geração e fusão de PDFs são operações que consomem CPU. Como o nosso sistema se comportaria se **10 atendentes** tentassem gerar carnês de **24 parcelas** ao mesmo tempo? O processo é executado no mesmo `thread` do nosso servidor de API principal? Isso poderia tornar a API lenta ou indisponível para outras requisições?
    * **Sincronização de Boletos:** A nossa solução de baixar os boletos em um loop sequencial resolveu o problema de "Rate Limiting", mas qual é o impacto no tempo? Calcule e reporte o tempo estimado para sincronizar os boletos de uma proposta de 24 parcelas, considerando o `delay` de 500ms que implementamos entre as requisições.
    * **Relatório:** Identifique os principais gargalos de performance e estime, de forma qualitativa, a capacidade do sistema (quantas propostas poderiam ser processadas em um pico de 10 minutos).

**3. Propostas de Melhoria Arquitetural:**
    * Com base na sua análise, proponha melhorias concretas para aumentar a sustentabilidade e a tolerância a falhas. Considere arquiteturas como:
        * **Job Queues (Filas de Trabalho):** Seria mais robusto mover as operações pesadas (sincronização de boletos, fusão de PDFs) para uma fila de trabalho separada (como BullMQ ou RabbitMQ) para isolá-las completamente do nosso servidor de API?
        * **Circuit Breaker:** Para as chamadas às APIs externas, seria vantajoso implementar um padrão de "Circuit Breaker" para detectar quando um serviço está indisponível e parar de sobrecarregá-lo?

**Relatório Final:**
O critério de sucesso é um relatório de arquitetura completo que responda a estas três seções, fornecendo uma visão clara dos pontos fortes, fracos e um plano de ação para a evolução da nossa plataforma.