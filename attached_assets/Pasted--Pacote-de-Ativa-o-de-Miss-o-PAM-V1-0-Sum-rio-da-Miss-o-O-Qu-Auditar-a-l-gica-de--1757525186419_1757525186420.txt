### Pacote de Ativação de Missão (PAM) V1.0

* **Sumário da Missão (O Quê):** Auditar a lógica de negócio responsável por guardar os documentos no Supabase Storage para identificar como o *path* (caminho) do ficheiro está a ser construído.
* **Intenção Estratégica (O Porquê):** Para garantir a organização, segurança e recuperabilidade dos documentos, é imperativo que eles sejam armazenados numa estrutura de pastas padronizada. Atualmente, os ficheiros estão a ser guardados de forma desorganizada. Precisamos de encontrar o ponto exato no código que define o *path* de destino para o podermos corrigir.
* **Histórico Relevante (Consulta Obrigatória):** Uma auditoria anterior identificou que o `documentsService.ts` e o `SupabaseStorageAdapter.ts` são os principais responsáveis pela interação com o Supabase Storage. A sua investigação deve focar-se nestes ficheiros.

---

**IMPLEMENTAR:**
Auditoria Forense da Lógica de Construção do Path de Armazenamento de Documentos.

**EXPECTED (Estado Final de Sucesso):**
Um relatório de auditoria claro que responda às seguintes questões:
1.  Qual o ficheiro e a função que contêm a chamada `supabase.storage.from('...').upload(...)`?
2.  Como o segundo parâmetro desta função (o `path` do ficheiro) é construído? Apresente a linha de código exata.
3.  **Veredito Explícito:** A lógica atual implementa a estrutura de pastas `docs-prop/<proposal_id>/<filename>`? Se não, qual a estrutura que está a ser utilizada?

**CONSTRAINTS (Roadmap de Auditoria):**
1.  Inicie a análise no arquivo `server/services/documentsService.ts`.
2.  Siga as chamadas até ao `server/modules/shared/infrastructure/SupabaseStorageAdapter.ts`.
3.  Dentro do `SupabaseStorageAdapter`, localize o método `upload` (ou similar).
4.  Analise a construção da variável `path` ou `filePath` que é passada para a função de upload do Supabase.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** 100% (A confiança é na minha capacidade de auditar).
* **RISCOS IDENTIFICADOS:** **BAIXO**. Missão de reconhecimento sem alteração de código.
* **DECISÕES TÉCNICAS ASSUMIDAS:** Assumo que a lógica de construção do *path* está centralizada no `Storage Adapter`, conforme as boas práticas de DDD.
* **VALIDAÇÃO PENDENTE:** O Orquestrador usará o seu diagnóstico para arquitetar a missão de correção da estrutura de pastas.
---