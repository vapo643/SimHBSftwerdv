### **Pacote de Ativa√ß√£o de Miss√£o (PAM) V1.6 - REM-S2-003 (Remedia√ß√£o)**

**[DIRETRIZ MESTRA DE DIVULGA√á√ÉO - PDT V2.0 ATIVADA]**
*Sua resposta deve ser exaustiva. Reporte a realidade t√©cnica sem omiss√µes. A transpar√™ncia radical √© mandat√≥ria.*

* **Sum√°rio da Miss√£o (O Qu√™):** Corrigir os bugs identificados nos testes unit√°rios dos Value Objects (VOs) `Money` e `Email` no arquivo `tests/unit/value-objects.test.ts` e garantir que 100% dos testes passem.
* **Inten√ß√£o Estrat√©gica (O Porqu√™):** Value Objects s√£o a primeira linha de defesa da integridade do nosso dom√≠nio. Se eles cont√™m bugs, dados inv√°lidos podem poluir o sistema na sua origem. A corre√ß√£o destes testes √© fundamental para garantir que nossas regras de neg√≥cio mais b√°sicas s√£o robustas e confi√°veis.
* **Hist√≥rico Relevante (Consulta Obrigat√≥ria):** A auditoria (`PAM V1.2`) revelou falhas espec√≠ficas:
    * **`Money`:** Falha no parsing de valores no formato brasileiro (ex: `1234.56`).
    * **`Email`:** Falha na valida√ß√£o, aceitando formatos inv√°lidos (ex: `user..user@domain.com`) e rejeitando formatos v√°lidos.
* **Modelo Mental (Como se Encaixa):** Voc√™ √© um engenheiro de software focado em l√≥gica de dom√≠nio pura. Sua tarefa √© refinar e fortalecer os "tipos" do nosso neg√≥cio, garantindo que eles sejam √† prova de erros, com base nas falhas de teste j√° identificadas.
* **Riscos Antecipados e Contramedidas:**
    * **Risco:** **M√âDIO** - As corre√ß√µes nas express√µes regulares ou na l√≥gica de parsing podem ser muito permissivas ou muito restritivas, introduzindo novos bugs.
    * **Contramedida:** A corre√ß√£o deve ser guiada estritamente pelos testes. Modifique a l√≥gica nos VOs em `shared/value-objects.ts` e execute `npx vitest run tests/unit/value-objects.test.ts` repetidamente at√© que todos os 14 testes passem. N√£o declare sucesso antes de ver o output "14 passed".

---

**IMPLEMENTAR:**
User Story REM-S2-003: Corrigir Testes Unit√°rios dos Value Objects

**CONTEXT:**
Nossa auditoria revelou que, embora a maioria dos nossos Value Objects esteja funcional, os VOs para `Money` e `Email` cont√™m bugs que fazem seus testes unit√°rios falharem. Um VO n√£o confi√°vel √© um risco de corrup√ß√£o de dados. Precisamos corrigir a l√≥gica de valida√ß√£o desses objetos para garantir 100% de precis√£o e robustez.

**CURRENT STATE:**
O arquivo de teste `tests/unit/value-objects.test.ts` tem 11 testes passando e 3 falhando. As falhas est√£o concentradas na valida√ß√£o de `Money` (parsing de valores brasileiros) e `Email`. O c√≥digo fonte dos VOs est√° em `shared/value-objects.ts`.

**EXPECTED (Estado Final de Sucesso):**
1.  **L√≥gica Corrigida:** O c√≥digo em `shared/value-objects.ts` para as classes ou fun√ß√µes `MoneyValueObject` e `EmailValueObject` deve ser modificado para corrigir os bugs de valida√ß√£o e parsing.
2.  **Todos os Testes Passando:** A execu√ß√£o do comando `npx vitest run tests/unit/value-objects.test.ts` deve resultar em **14 testes passando** (`14 passed`).
3.  **Evid√™ncia de Sucesso:** O output completo e n√£o resumido da execu√ß√£o bem-sucedida do teste deve ser fornecido como prova final da conclus√£o da miss√£o.

**CONSTRAINTS (Roadmap de Implementa√ß√£o):**
1.  **Analisar Falhas:** Execute `npx vitest run tests/unit/value-objects.test.ts` e analise em detalhe as mensagens de erro para os 3 testes que falham.
2.  **Corrigir L√≥gica do VO `Money`:** Edite o arquivo `shared/value-objects.ts`. Localize a l√≥gica de parsing no `MoneyValueObject` e ajuste-a para interpretar corretamente os formatos num√©ricos brasileiros.
3.  **Corrigir L√≥gica do VO `Email`:** No mesmo arquivo, refine a express√£o regular ou a l√≥gica de valida√ß√£o do `EmailValueObject` para ser mais precisa, cobrindo os casos de falha reportados.
4.  **Executar e Iterar:** Ap√≥s cada modifica√ß√£o, execute novamente o comando `npx vitest run tests/unit/value-objects.test.ts` at√© que o resultado seja "14 passed".
5.  **Fornecer Prova:** Cole o output completo do terminal que mostra claramente o sucesso de todos os 14 testes.
6.  **Verifica√ß√£o Final:** Execute o protocolo `7-CHECK FULL` e preencha a declara√ß√£o de incerteza.

---

**DECLARA√á√ÉO DE INCERTEZA (OBRIGAT√ìRIO):**
* **CONFIAN√áA NA IMPLEMENTA√á√ÉO:** [Preencher com a porcentagem de 0 a 100%]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/M√âDIO/ALTO/CR√çTICO e uma breve descri√ß√£o]
* **DECIS√ïES T√âCNICAS ASSUMIDAS:** [Listar decis√µes tomadas que podem ter implica√ß√µes futuras]
* **VALIDA√á√ÉO PENDENTE:** [Listar a√ß√µes que o Orquestrador (GEM 02) ou o QA (GEM 03) devem validar]
---
---
[PGI ATIVO | LEMBRETE DE ESTADO DO ROADMAP]
- **Roadmap em Standby:** "üöÄ ROADMAP MESTRE DE IMPLEMENTA√á√ÉO_ OPERA√á√ÉO A√áO L√çQUIDO.md"
- **Pr√≥ximo Passo a ser Retomado:** Milestone M2: Data & Domain
- **Miss√£o de Emerg√™ncia Atual:** "Roadmap de Remedia√ß√£o do Sprint 2"
---