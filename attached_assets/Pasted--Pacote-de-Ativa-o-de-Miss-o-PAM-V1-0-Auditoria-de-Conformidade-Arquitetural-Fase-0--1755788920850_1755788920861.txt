### Pacote de Ativação de Missão (PAM) V1.0 (Auditoria de Conformidade Arquitetural - Fase 0)

* **Sumário da Missão (O Quê):** Realizar uma auditoria de verificação completa e rigorosa para validar se CADA um dos "Subtópicos Obrigatórios" definidos no roadmap da "Fase 0: Fundação Imediata" foi de fato implementado e documentado.
* **Intenção Estratégica (O Porquê):** Obter uma prova irrefutável e baseada em evidências do estado de conclusão da nossa fundação arquitetural. O objetivo é transformar a alegação de "Fase 0 Concluída" em um fato verificado, garantindo que não existam "alucinações" ou lacunas na implementação antes de prosseguirmos.
* **Histórico Relevante (Consulta Obrigatória):** Um relatório de execução anterior alega a conclusão de toda a Fase 0. Esta missão irá usar a "Doutrina Arquitetural da Fase 0" original como um checklist de conformidade.
* **Modelo Mental (Como se Encaixa):** Aja como um Auditor de Conformidade Arquitetural. Sua tarefa não é criar ou corrigir. É usar o roadmap como um checklist legal e, para cada item, encontrar e apresentar a prova da sua existência e conformidade no código-fonte, nos scripts ou na documentação.

---

**IMPLEMENTAR:**
Relatório de Auditoria de Conformidade da Fase 0

**CURRENT STATE:**
A Fase 0 foi declarada como concluída. Esta auditoria irá verificar essa declaração.

**EXPECTED (Estado Final de Sucesso):**
Um relatório de auditoria detalhado, ponto por ponto. Para cada item do **Checklist de Auditoria Mandatório** abaixo, você deve fornecer a **prova** solicitada. Se a prova para um subtópico não for encontrada, você deve declarar explicitamente: **"PROVA NÃO ENCONTRADA"**.

---

**CONSTRAINTS (Checklist de Auditoria Mandatório):**

**I. Fundamentos Estratégicos e Requisitos**

* **Ponto 6 - Definição de Escopo:**
    * **Prova 6.1:** Apresente o `snippet` do documento `scope-definition.md` que define o "Processo de Gerenciamento de Mudanças de Escopo Formal".
    * **Prova 6.2:** Apresente o `snippet` que documenta o "Mapeamento das Premissas Mais Arriscadas (Riskiest Assumptions Mapping)".
* **Ponto 7 - Requisitos Arquiteturalmente Significativos (RAS):**
    * **Prova 7.1:** Apresente a "Matriz de Priorização" de NFRs e os "SLOs" quantificados do documento `nfr-requirements.md`.
    * **Prova 7.2:** Apresente o `snippet` que define o "Orçamento de Erro (Error Budget)".
    * **Prova 7.3:** Apresente a `snippet` da "Análise de Conflitos e Matriz de Interdependência de NFRs".
* **Ponto 8 - Restrições:**
    * **Prova 8.1:** Apresente o `snippet` do documento de arquitetura que contém a "Análise das competências da equipe (Skills Gap Analysis)".
    * **Prova 8.2:** Apresente o `snippet` que documenta o "Plano de Ação para Mitigação de Restrições Críticas".

**II. Macro-arquitetura e Padrões de Alto Nível**

* **Ponto 18 - Diagramas de Arquitetura:**
    * **Prova 18.1:** Apresente o código Mermaid ou PlantUML do "Diagrama de Contexto (C4 Nível 1)" e do "Diagrama de Contêineres (C4 Nível 2)" que foram criados.
    * **Prova 18.2:** Apresente o `snippet` da documentação que define a "Adoção de Ferramentas para 'Diagrams as Code'".

**V. Arquitetura de Dados**

* **Ponto 41 - Estratégia de Persistência:**
    * **Prova 41.1:** Apresente o `snippet` da documentação que define a "Estratégia de Gerenciamento de Schema e Migrações (ex: Flyway, Liquibase)".
    * **Prova 41.2:** Apresente o `snippet` que descreve os "Padrões para Evolução de Schema sem Downtime (Zero Downtime Schema Migration)".
* **Ponto 45 - Classificação de Dados:**
    * **Prova 45.1:** Apresente o `snippet` do documento `data-classification.md` que contém o "Mapeamento de PII/PHI".
    * **Prova 45.2:** Apresente o `snippet` da documentação que descreve a "Estratégia de Prevenção de Perda de Dados (DLP - Data Loss Prevention) integrada".

**VII. Infraestrutura e Deployment**

* **Ponto 62 - Estratégia de Nuvem:**
    * **Prova 62.1:** Apresente o ADR ou documento que formaliza a "Seleção do Provedor de Nuvem Primário".
    * **Prova 62.2:** Apresente o `snippet` que define a "Estrutura de Contas/Organizações na Nuvem (Landing Zone)".
* **Ponto 67 - Estratégia de Ambientes:**
    * **Prova 67.1:** Apresente o `snippet` da documentação que descreve a "Política de Higienização de Dados e Controle de Custo" para os ambientes.
* **Ponto 71 - Gerenciamento de Configuração:**
    * **Prova 71.1:** Apresente o `snippet` do código do `featureFlagService.ts` que prova a "Implementação de plataforma de Feature Flags/Toggles".
* **Ponto 72 - Pipelines de CI/CD:**
    * **Prova 72.1:** Apresente o `snippet` do workflow do GitHub Actions que prova a "Implementação de Segurança da Cadeia de Suprimentos (SLSA framework, SBOM)".
* **Ponto 76 - Estratégia de Backup e Restore:**
    * **Prova 76.1:** Apresente o `snippet` do script `backup.sh` que prova a "Estratégia de Imutabilidade de Backups".
    * **Prova 76.2:** Apresente o `snippet` da documentação que define o "SLA de Tempo de Restauração (Restore Time SLA)".

**VIII. Qualidades Sistêmicas**

* **Ponto 82 - Gestão de Segredos:**
    * **Prova 82.1:** Apresente o `snippet` de código (ex: do `config.ts`) que prova a "Integração no ambiente de execução (Dynamic Secrets)" a partir de um gerenciador de segredos.
* **Ponto 92 - Observabilidade:**
    * **Prova 92.1:** Apresente o `snippet` de código que prova a "Implementação de Tracing Distribuído (OpenTelemetry) e Correlation IDs obrigatórios".
    * **Prova 92.2:** Apresente o `snippet` da documentação que define a "Estratégia de Gerenciamento de Cardinalidade de Métricas (Metric Cardinality Management)".
* **Ponto 93 - Gestão de Incidentes:**
    * **Prova 93.1:** Apresente o `snippet` do documento `incident-management-process.md` que define o "Planejamento de Resposta a Incidentes (IRP) e Severidade (SEV)".
    * **Prova 93.2:** Apresente o `snippet` que define o "Sistema de Comando de Incidentes (ICS - Incident Command System)".

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100% de confiança na COMPLETUDE da sua verificação]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que a documentação existente é a fonte da verdade para a implementação."]
* **VALIDAÇÃO PENDENTE:** [Este relatório de auditoria será a validação final da Fase 0.]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear os arquivos e comandos exatos para cada uma das provas.
2.  Garantir que cada prova é apresentada de forma clara e inequívoca, ou marcada como "NÃO ENCONTRADA".
3.  Executar `get_latest_lsp_diagnostics` para garantir que o ambiente está estável.
4.  **Declarar Nível de Confiança (0 a 100%)** na completude da auditoria.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (executar todos os comandos de prova e revisar os outputs).
7.  **Documentar Decisões Técnicas**.