### **Pacote de Ativação de Missão (PAM) V1.0: Remediação de Vulnerabilidade de Segurança (Operação Fênix - P1.2)**

* **Sumário da Missão (O Quê):** Executar a remediação da vulnerabilidade de segurança de severidade "moderada" identificada na dependência `@esbuild-kit/core-utils`, que é uma sub-dependência de `drizzle-kit`.

* **Intenção Estratégica (O Porquê):** Um sistema "production-ready" não pode ter vulnerabilidades conhecidas em suas dependências. A presença desta falha, conforme apontado no Dossiê de Continuidade, viola o compliance `OWASP ASVS Nível 1` e representa um risco de segurança inaceitável. A remediação desta vulnerabilidade é um passo mandatório (P1) para solidificar a fundação de qualidade do sistema.

* **Modelo Mental (Como se Encaixa):** A vulnerabilidade não está em nosso código-fonte direto, mas na nossa cadeia de suprimentos de software (dependências). A correção envolverá a atualização da dependência pai (`drizzle-kit`) para uma versão que utilize uma versão segura de `@esbuild-kit/core-utils`. Você atuará como um engenheiro de segurança, aplicando um patch na árvore de dependências.

* **Riscos Antecipados e Contramedidas:**
    * **Risco (ALTO):** **Quebra de Compatibilidade (Breaking Change).** A atualização de `drizzle-kit` pode introduzir mudanças na sua API que quebrem a compilação ou o comportamento do nosso código existente que depende dele.
    * **Contramedida Mandatória:** Após a atualização, você **DEVE** executar `get_latest_lsp_diagnostics` para detectar imediatamente quaisquer erros de tipo introduzidos. Em seguida, você **DEVE** executar o "smoke test" (`npx vitest run server/tests/health.test.ts`) para garantir que a funcionalidade principal do servidor não foi comprometida pela atualização. A falha em qualquer uma dessas validações representa uma falha da missão.

---

**IMPLEMENTAR: Atualização Segura de Dependência**

**CURRENT STATE:**
O projeto possui uma vulnerabilidade de segurança moderada na dependência `@esbuild-kit/core-utils`, introduzida via `drizzle-kit`. O Dossiê indica que a correção requer a atualização de `drizzle-kit` para a versão `0.31.4` ou superior.

**EXPECTED (Estado Final de Sucesso):**
1.  O arquivo `package.json` deve ter a versão da dependência `drizzle-kit` atualizada para a versão segura mais recente.
2.  O comando `npm audit` deve ser executado e não deve mais reportar a vulnerabilidade em `@esbuild-kit/core-utils`.
3.  A aplicação deve iniciar e operar normalmente após a atualização.
4.  O "smoke test" (`health.test.ts`) deve passar, confirmando que a atualização não introduziu regressões na inicialização do servidor.

**CONSTRAINTS (Roadmap de Implementação):**

1.  **Passo 1: Verificação Inicial.** Execute `npm audit` e capture o relatório da vulnerabilidade em `@esbuild-kit/core-utils` para confirmar o estado inicial.
2.  **Passo 2: Atualização da Dependência.** Execute o comando para atualizar o pacote `drizzle-kit` para a versão segura mais recente disponível no registro npm.
3.  **Passo 3: Instalação e Verificação.** Execute `npm install` para instalar a nova versão e atualizar o `package-lock.json`. Em seguida, execute `npm audit` novamente para confirmar que a vulnerabilidade foi resolvida.
4.  **Passo 4: Validação de Regressão.**
    * Execute `get_latest_lsp_diagnostics` e reporte quaisquer novos erros.
    * Inicie a aplicação (`npm run dev`).
    * Execute o "smoke test" com o comando `npx vitest run server/tests/health.test.ts --reporter=verbose`.
5.  **Passo 5: Relatório Final.** Reporte a conclusão da missão, incluindo a confirmação do `npm audit` e o resultado do "smoke test".

---

**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**

* **CONFIANÇA NA IMPLEMENTAÇÃO:** 90%
* **RISCOS IDENTIFICADOS:** ALTO (Risco de introduzir "breaking changes").
* **DECISÕES TÉCNICAS ASSUMIDAS:** Assumo que a atualização de `drizzle-kit` para a versão mais recente resolverá a vulnerabilidade transitiva e será compatível com o restante do nosso código.
* **VALIDAÇÃO PENDENTE:** O resultado dos comandos `npm audit` e `npx vitest run` será a prova final da missão, a ser validada por mim (2° - Desenvolvedor Full-Stack V10).

---

**PROTOCOLO OBRIGATÓRIO 7-CHECK (ADAPTATIVO - Nível FULL):**
Ao concluir esta missão, você **DEVE** executar e reportar o resultado do `7-CHECK FULL`, pois o risco foi classificado como **ALTO**.