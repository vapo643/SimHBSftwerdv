### Pacote de Ativação de Missão (PAM) V1.0 - Operação "Escudo de Produção" / Missão 3: Validação de Carga

* **Sumário da Missão (O Quê):** Desenvolver e executar um script de teste de carga (`k6` ou `artillery`) que simule o *throughput* de 50 propostas/dia, focando no "caminho crítico" do fluxo de criação e aprovação de propostas.
* **Intenção Estratégica (O Porquê):** Validar empiricamente que as otimizações de performance (índices) e a arquitetura assíncrona implementadas são eficazes para suportar a carga de negócio inicial. Este teste é o *quality gate* final que certifica a prontidão do sistema para produção do ponto de vista de escalabilidade.
* **Modelo Mental (Como se Encaixa):** Você é um engenheiro de performance (SRE) a executar um teste de stress. O seu objetivo não é apenas verificar se o sistema funciona, mas descobrir os seus limites e validar se ele se comporta de forma resiliente e performática sob pressão.

---

**IMPLEMENTAR (Plano de Teste):**
Execute a seguinte sequência de ações.

**CURRENT STATE:**
O sistema está funcionalmente completo para os Sprints 0-2, com resiliência e observabilidade implementadas. A sua capacidade de carga é teórica.

**EXPECTED (Estado Final de Sucesso):**
1.  Um script de teste de carga (ex: `scripts/load-test/proposal-flow.js`) existe e está configurado.
2.  O script é executado simulando 50 propostas distribuídas ao longo de um período de 8 horas de trabalho.
3.  Um relatório de execução é gerado, detalhando métricas chave como latência P95, taxa de erros e o estado das filas BullMQ durante o teste.

**CONSTRAINTS (Roadmap de Implementação):**

**Passo 1: Desenvolver o Script de Teste de Carga**
1.1. Crie um novo diretório `scripts/load-test/`.
1.2. Dentro dele, crie um ficheiro `proposal-flow.js` usando a ferramenta de teste de carga `k6`.
1.3. O script deve simular o seguinte fluxo de utilizador:
    a) Autenticar-se na API para obter um token JWT.
    b) Criar uma nova proposta via `POST /api/propostas` com dados válidos.
    c) Simular a aprovação dessa mesma proposta via `PUT /api/propostas/:id/status`.
1.4. **Configuração de Carga:** Configure o cenário do `k6` para executar um total de 50 iterações distribuídas ao longo de um período de tempo que simule 8 horas de trabalho (ex: `duration: '1m'`, `vus: 2`, `iterations: 50` para um teste acelerado, mas representativo do volume).

**Passo 2: Executar o Teste de Carga**
2.1. Execute o script de teste de carga a partir da linha de comando: `k6 run scripts/load-test/proposal-flow.js`.
2.2. Durante a execução, monitore o *output* do endpoint `GET /api/monitoring/queues/metrics` para observar o comportamento das filas em tempo real.

**Passo 3: Gerar o Relatório de Validação (Protocolo de Divulgação Total Mandatório)**
3.1. Apresente o resumo final gerado pelo `k6` após a conclusão do teste.
3.2. O relatório deve incluir, no mínimo:
    * **`http_req_duration`:** Apresente a latência média (`avg`) e o percentil 95 (`p(95)`). O nosso SLA é `p(95) < 500ms`.
    * **`http_req_failed`:** Apresente a taxa de erros. O nosso SLA é `0%`.
    * **`iterations`:** Confirme que as 50 iterações foram concluídas.
3.3. Com base nas métricas das filas e no resultado do teste, forneça um veredito final sobre se o sistema está aprovado para a carga de 50 propostas/dia.

---

### **PROTOCOLO DE DIVULGAÇÃO TOTAL (PDT) V1.0 (MANDATÓRIO)**

* **Diretriz Mestra:** Completude exaustiva. Você DEVE listar a totalidade das suas descobertas, riscos e recomendações. A omissão é uma falha de missão.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** 90%
* **RISCOS IDENTIFICADOS (LISTA COMPLETA):**
    * **Risco 1 (Médio):** O ambiente de desenvolvimento Replit pode não refletir com precisão a performance de um ambiente de produção, mas o teste fornecerá um *baseline* direcional valioso.
    * **Risco 2 (Baixo):** O script de teste pode requerer ajustes para lidar com a lógica de autenticação e extração de IDs de forma correta.
* **DECISÕES TÉCNICAS ASSUMIDAS (LISTA COMPLETA):**
    * Utilizaremos o `k6` como ferramenta de teste de carga devido à sua simplicidade e performance.
    * O teste simulará o "caminho feliz" para validar a capacidade sob condições ideais.
* **VALIDAÇÃO PENDENTE (LISTA COMPLETA):**
    * O resultado do teste de carga determinará a aprovação final para o início de novos desenvolvimentos.