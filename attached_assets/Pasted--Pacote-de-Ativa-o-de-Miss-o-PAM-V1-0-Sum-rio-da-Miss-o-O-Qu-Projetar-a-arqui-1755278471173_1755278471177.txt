**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Projetar a arquitetura completa para um novo "Sistema de Alertas Proativos" na "Tela de Cobranças".
* **Intenção Estratégica (O Porquê):** Para elevar a eficiência da nossa equipe de cobranças, o sistema não deve apenas exibir dados, mas também deve identificar proativamente as situações de maior risco ou urgência (ex: propostas de alto valor prestes a vencer) e notificar os operadores, permitindo que eles ajam antes que um problema se agrave.
* **Histórico Relevante (Consulta Obrigatória):** Nossa auditoria final da "Operação Antifrágil" e da "Central de Inteligência de Cobranças" confirmou que a fundação de dados e a arquitetura assíncrona estão robustas. Esta nova funcionalidade será construída sobre esta base sólida.
* **Modelo Mental (Como se Encaixa):** Você atuará como Arquiteto de Soluções. Sua missão é planejar, não implementar. Você irá projetar um novo "Motor de Regras" no backend que rodará periodicamente (ex: uma vez por dia), analisará a carteira de cobranças e gerará "eventos de notificação". O frontend terá um novo componente de UI para exibir estas notificações.
* **Riscos Antecipados:** **Risco:** Um sistema de alertas muito "barulhento" pode ser ignorado. **Contramedida:** A arquitetura deve permitir que as regras de alerta sejam facilmente configuráveis e que os usuários possam marcar as notificações como "lidas".

---

**IMPLEMENTAR:**
Um documento de arquitetura detalhado. **NÃO IMPLEMENTE O CÓDIGO AINDA.**

**CURRENT STATE:**
O sistema não possui nenhuma funcionalidade de alerta ou notificação proativa.

**EXPECTED (Estado Final de Sucesso):**
Um relatório de planejamento completo que descreva a arquitetura proposta para o novo sistema de alertas.

**CONSTRAINTS (Roadmap de Planejamento Arquitetural):**

**1. Arquitetura do Backend (O Motor de Regras):**
    - **Ação:** Projete a lógica do motor de regras.
    - **Proposta:** Sugira a melhor abordagem. Deve ser um **Job Agendado (Cron Job)** que roda diariamente? Ou deve ser acionado por eventos?
    - **Regras Iniciais:** Descreva como você implementaria a lógica para as seguintes regras de alerta iniciais:
        a. "Propostas de alto valor (> R$ 10.000) com vencimento nos próximos 3 dias."
        b. "Propostas com mais de 30 dias de atraso."
        c. "Propostas onde o cliente visualizou o boleto (via webhook da ClickSign) mas não pagou em 24h."

**2. Arquitetura do Banco de Dados:**
    - **Ação:** Projete o schema da(s) nova(s) tabela(s) necessária(s).
    - **Proposta:** Desenhe o schema Drizzle para uma nova tabela `notificacoes`, que deve conter campos como `id`, `user_id` (para quem é a notificação), `mensagem`, `link_relacionado` (ex: `/financeiro/cobrancas?propostaId=...`), `status` ('nao_lida', 'lida'), `created_at`.

**3. Arquitetura do Frontend (A Central de Notificações):**
    - **Ação:** Projete a interface do usuário para as notificações.
    - **Proposta:** Descreva como a UI funcionaria. Seria um ícone de "sino" no cabeçalho da aplicação? Um painel de notificações na própria "Tela de Cobranças"? Como o usuário marcaria uma notificação como lida?

**Relatório Final:**
O critério de sucesso é a entrega deste documento de planejamento completo. Ele será a base para a nossa fase de implementação.