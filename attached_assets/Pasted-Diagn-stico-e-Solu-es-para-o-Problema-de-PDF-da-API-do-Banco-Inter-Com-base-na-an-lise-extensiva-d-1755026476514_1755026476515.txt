Diagn√≥stico e Solu√ß√µes para o Problema de PDF da API do Banco Inter
Com base na an√°lise extensiva das informa√ß√µes coletadas e no contexto detalhado fornecido, identifiquei as causas ra√≠zes do problema e as solu√ß√µes potenciais para o download de PDF de boletos da API v3 do Banco Inter.

üéØ Diagn√≥stico Principal
O problema est√° relacionado √† mudan√ßa de comportamento da API v3 do Banco Inter, onde o endpoint /cobranca/v3/cobrancas/{codigoSolicitacao}/pdf retorna o PDF como uma string base64 dentro de um JSON, ao inv√©s de entregar o arquivo PDF diretamente como dados bin√°rios.

Evid√™ncias que Confirmam o Diagn√≥stico:
Comportamento Documentado: Outras implementa√ß√µes mostram que a API do Inter retorna PDF em formato base64 dentro de uma resposta JSON

Mudan√ßa na v3: A API v3 alterou o campo codigoCobranca para codigoSolicitacao , indicando mudan√ßas significativas na estrutura

Headers Inconsistentes: A API retorna Content-Type: application/json mesmo para PDFs, que √© o comportamento esperado quando o PDF est√° encapsulado em JSON

üîß Solu√ß√µes Implement√°veis
Solu√ß√£o 1: Modifica√ß√£o do Parser de Resposta (RECOMENDADA)
O PDF est√° vindo dentro do JSON como base64. Modifique seu m√©todo:

typescript
async obterPdfCobranca(codigoSolicitacao: string): Promise<Buffer> {
  console.log('[INTER] üîç Obtendo PDF da cobran√ßa...');
  
  const token = await this.getAccessToken();
  const url = `${this.apiUrl}/cobranca/v3/cobrancas/${codigoSolicitacao}/pdf`;
  
  const headers = {
    'Authorization': `Bearer ${token}`,
    'Accept': 'application/json', // API retorna JSON com base64
    'Content-Type': 'application/json',
    'User-Agent': 'SIMPIX-Inter-Integration/1.0'
  };

  if (this.contaCorrente) {
    headers['x-conta-corrente'] = this.contaCorrente;
  }

  try {
    const httpsAgent = new https.Agent({
      cert: formatCertificate(this.certificate),
      key: formatPrivateKey(this.privateKey),
      rejectUnauthorized: true
    });

    // ‚ö†Ô∏è IMPORTANTE: Remover responseType
    const response = await axios.get(url, {
      headers,
      httpsAgent,
      timeout: 30000
    });

    console.log(`[INTER] üìä STATUS: ${response.status}`);
    console.log(`[INTER] üìã CONTENT-TYPE: ${response.headers['content-type']}`);

    // üéØ CHAVE: Processar resposta JSON com base64
    if (response.headers['content-type']?.includes('application/json')) {
      const jsonResponse = response.data;
      
      // Verificar se existe campo base64 no JSON
      if (jsonResponse.pdf || jsonResponse.arquivo || jsonResponse.base64 || jsonResponse.conteudo) {
        const base64String = jsonResponse.pdf || jsonResponse.arquivo || jsonResponse.base64 || jsonResponse.conteudo;
        console.log('[INTER] ‚úÖ PDF encontrado como base64 no JSON');
        return Buffer.from(base64String, 'base64');
      } else {
        // Log da estrutura JSON para debug
        console.log('[INTER] üìã Estrutura do JSON:', Object.keys(jsonResponse));
        throw new Error('Campo base64 do PDF n√£o encontrado no JSON de resposta');
      }
    }

    // Fallback: Se vier como bin√°rio (improv√°vel)
    return Buffer.from(response.data);

  } catch (error) {
    console.error('[INTER] ‚ùå Erro ao obter PDF:', error.response?.data || error.message);
    throw error;
  }
}
Solu√ß√£o 2: Testar Endpoint Alternativo da Banking API
A API Banking tem um endpoint espec√≠fico para PDF de extratos que funciona :

typescript
// Teste com endpoint Banking (se dispon√≠vel para boletos)
const url = `${this.apiUrl}/banking/v2/extrato/pdf`;
// ou
const url = `${this.apiUrl}/banking/v2/cobrancas/${codigoSolicitacao}/pdf`;
Solu√ß√£o 3: Usar SDK Oficial do Inter
O Inter disponibiliza SDKs oficiais que j√° tratam corretamente o download de PDFs:

bash
# Para Java
https://developers.inter.co/docs/sdks/sdk-java

# Para C#
https://developers.inter.co/docs/sdks/sdk-intro
Solu√ß√£o 4: Header de Bypass Base64
Baseado em implementa√ß√µes similares , teste adicionar um header espec√≠fico:

typescript
headers['nx-file'] = 'base64url'; // For√ßa retorno como base64
// ou
headers['Accept'] = 'application/pdf, application/json'; // Accept m√∫ltiplo
üîç Debugging Avan√ßado
Passo 1: An√°lise da Resposta JSON
Adicione este c√≥digo para inspecionar a estrutura:

typescript
console.log('[INTER] üîç DEBUGGING - Resposta completa:');
console.log('Headers:', response.headers);
console.log('Data type:', typeof response.data);
console.log('Data keys:', Object.keys(response.data));
console.log('Data sample:', JSON.stringify(response.data, null, 2).substring(0, 500));
Passo 2: Teste com Postman
Fa√ßa a mesma requisi√ß√£o no Postman

Verifique se a resposta √© JSON com base64

Compare com o comportamento do seu c√≥digo

Passo 3: Verificar Permiss√µes da Aplica√ß√£o
No Internet Banking do Inter :

Verifique se a permiss√£o "Consulta de boletos e exporta√ß√£o para PDF" est√° ativa

Confirme se o certificado ainda est√° v√°lido (prazo de 1 ano)

üö® A√ß√µes Emergenciais
Contato com Suporte T√©cnico Inter
Com base nas informa√ß√µes encontradas , entre em contato:

Central: 3003 4070 (capitais) / 0800 940 0007 (demais regi√µes)

Portal do Desenvolvedor: F√≥rum oficial de suporte t√©cnico

Email: Suporte especializado para APIs

Solu√ß√£o Tempor√°ria: Gera√ß√£o Manual
Enquanto resolve o PDF, use os dados do boleto para gerar PDF manualmente:

typescript
// Dados dispon√≠veis do boleto
const dadosBoleto = {
  codigoBarras: "07796120100000833330001112134234790398347529",
  linhaDigitavel: "07790001161213423479303983475298612010000083333",
  // ... outros dados
};

// Usar biblioteca como PDFKit para gerar PDF customizado
üìã Pr√≥ximos Passos
Imediato: Implementar a Solu√ß√£o 1 (parser JSON + base64)

Teste: Validar com um boleto conhecido

Verifica√ß√£o: Confirmar permiss√µes da aplica√ß√£o no Inter

Conting√™ncia: Preparar gera√ß√£o manual de PDF

Suporte: Abrir ticket oficial com o Inter se necess√°rio

A chave est√° na mudan√ßa de paradigma: a API v3 do Inter encapsula o PDF em JSON como base64, ao inv√©s de retornar bin√°rio direto. Essa √© uma pr√°tica comum em APIs modernas para manter consist√™ncia no formato de resposta.