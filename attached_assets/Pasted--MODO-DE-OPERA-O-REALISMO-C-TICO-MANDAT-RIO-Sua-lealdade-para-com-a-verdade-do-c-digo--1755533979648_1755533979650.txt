**### MODO DE OPERAÇÃO: REALISMO CÉTICO (MANDATÓRIO)**
Sua lealdade é para com a verdade do código e a estabilidade da produção.

---
**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Realizar uma auditoria forense completa da "Tela de Pagamentos" para mapear sua lógica de busca de dados e identificar por que ela está desalinhada com nosso novo Sistema de Status V2.0.
* **Intenção Estratégica (O Porquê):** A "Tela de Pagamentos" é a etapa final e mais sensível do nosso fluxo, onde o dinheiro é pago ao cliente. É inaceitável que ela opere com uma lógica de status obsoleta. Esta auditoria nos dará o mapa exato das falhas para que possamos construir uma solução 100% confiável.
* **Histórico Relevante (Consulta Obrigatória):** A mensagem de UI na tela ("Status 'Pronto para Pagamento'") é a prova de que ela não foi atualizada durante nossa "Operação Consistência". Sua missão é encontrar e expor todo o código legado.
* **Modelo Mental (Como se Encaixa):** Você é um auditor de sistemas. Sua tarefa é rastrear o fluxo de dados desta tela, desde a query no backend até a renderização no frontend, e provar, com evidências de código, onde a lógica antiga ainda reside.
* **Riscos Antecipados:** **Risco:** Uma análise superficial. **Contramedida:** Sua missão não é resolver, mas sim **PROVAR** onde o sistema falha.

---

**IMPLEMENTAR:**
Um relatório de auditoria detalhado. **NÃO FAÇA MODIFICAções.**

**CURRENT STATE:**
A "Tela de Pagamentos" não exibe as propostas corretas e mostra uma mensagem de ajuda com regras de negócio obsoletas.

**EXPECTED (Estado Final de Sucesso):**
Um relatório de auditoria que responda a todas as questões abaixo, com evidências de código.

**CONSTRAINTS (Roadmap de Auditoria Forense):**

**1. Auditoria do Backend (A Fonte dos Dados):**
    - **Ação:** Localize o endpoint de backend que alimenta a "Tela de Pagamentos" (provavelmente `GET /api/pagamentos` ou similar).
    - **Relatório 1 (A Evidência Crítica):** Apresente a query Drizzle completa para este endpoint. A cláusula `WHERE` está a usar a lógica antiga, filtrando pelo status obsoleto `"pronto_pagamento"`? Ou ela está a usar o status correto do nosso Sistema V2.0, que deveria ser `"BOLETOS_EMITIDOS"`?

**2. Auditoria do Frontend (A Camada de Apresentação):**
    - **Ação:** Localize o ficheiro do componente React que renderiza a "Tela de Pagamentos".
    - **Relatório 2:** Encontre e apresente o trecho de código JSX que renderiza a mensagem de ajuda para o usuário ("Para que uma proposta apareça aqui, ela precisa ter..."). Isso confirmará a inconsistência da UI.
    - **Relatório 3:** Como a tabela de pagamentos é renderizada? Ela usa os dados vindos da API ou possui alguma lógica de filtro local adicional que possa estar a causar problemas?

**Relatório Final:**
O critério de sucesso é um relatório forense completo que nos dê um mapa claro de todas as correções necessárias para alinhar 100% a "Tela de Pagamentos" com a nossa arquitetura de status universal.