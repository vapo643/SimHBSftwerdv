### Pacote de Ativação de Missão (PAM) V1.0 - Auditoria de Conformidade do Sprint 1

* **Sumário da Missão (O Quê):** Realizar uma auditoria forense completa e não destrutiva da base de código do projeto Simpix para validar que 100% das User Stories e Technical Tasks do "Sprint 1: Security & Authentication Core" foram implementadas conforme o roadmap da "Operação Aço Líquido".
* **Intenção Estratégica (O Porquê):** Garantir, com um nível de confiança "Zero Trust", que a fundação de segurança (Autenticação, Autorização RBAC, e Auditoria) foi implementada corretamente antes de construir novas funcionalidades sobre esta camada crítica. O resultado desta auditoria determinará a ratificação formal da conclusão do Sprint 1.
* **Modelo Mental (Como se Encaixa):** Você é um auditor de código sênior. Sua função é ler, analisar, e apresentar "provas" (evidence) do código-fonte que confirmem ou neguem a implementação de cada requisito. Você não deve alterar ou corrigir o código. Apenas reporte suas descobertas com precisão cirúrgica.

---

**IMPLEMENTAR (Plano de Auditoria):**
Execute a seguinte sequência de comandos de análise e reporte os resultados para cada passo. Para cada item, forneça o caminho completo do ficheiro e o trecho de código relevante que serve como prova da implementação.

**CURRENT STATE:**
Uma base de código "Monólito Modular" em TypeScript (React/Express), com a "Operação Aço Líquido" em andamento. O Sprint 1 foi declarado como concluído.

**EXPECTED (Estado Final de Sucesso da Auditoria):**
Um relatório de auditoria detalhado, respondendo a cada um dos pontos de verificação abaixo com "PROVA ENCONTRADA" e o snippet de código correspondente, ou "LACUNA IDENTIFICADA" se a implementação não for encontrada.

**CONSTRAINTS (Roadmap de Auditoria - Sprint 1):**

**ÉPICO EP1-001: Autenticação e Gestão de Sessão (18 Pontos)**

1.  **[S1-001] Validação da Integração Supabase Auth (Backend):**
    * **Verificação 1.1:** Localize e apresente o middleware Express responsável pela validação dos JSON Web Tokens (JWT) provenientes do Supabase. O ficheiro deve estar em `server/lib/` ou `server/middleware/`.
    * **Verificação 1.2:** Mostre os endpoints RESTful implementados para login, refresh de token e logout, localizados em `server/routes/auth/`.

2.  **[S1-002] Validação do Fluxo de Autenticação (Frontend):**
    * **Verificação 2.1:** Inspecione o `client/contexts/AuthContext.tsx` e apresente o trecho que gerencia o estado de autenticação e os tokens.
    * **Verificação 2.2:** Apresente um exemplo de como uma rota protegida é implementada no frontend (provavelmente em `client/src/App.tsx` ou usando um componente `ProtectedRoute`).

3.  **[S1-003] Validação da Segurança da API:**
    * **Verificação 3.1:** Confirme a implementação do `helmet.js` no ficheiro principal do servidor (`server/app.ts` ou `server/index.ts`) e mostre a sua configuração.
    * **Verificação 3.2:** Localize e apresente a configuração do middleware `express-rate-limit`.

**ÉPICO EP1-002: Autorização Granular (RBAC) (13 Pontos)**

4.  **[S1-004] Validação da Implementação do RBAC:**
    * **Verificação 4.1:** Encontre o ficheiro onde os `Roles` (Admin, Analyst, etc.) e as permissões (possivelmente usando bitwise flags / "Magic Numbers") estão definidos. Apresente esta estrutura de dados.
    * **Verificação 4.2:** Localize o middleware ou decorator de autorização (ex: `requirePermission()` ou `requireAdmin`) e mostre como ele é aplicado a um endpoint da API em um dos ficheiros de rotas.

**ÉPICO EP1-003: Framework de Auditoria e Criptografia (13 Pontos)**

5.  **[S1-005] Validação do Audit Trail Framework:**
    * **Verificação 5.1:** Localize o schema da tabela de logs de auditoria no ficheiro `shared/schema.ts` e confirme que ele contém os campos (Who, What, When, Context).
    * **Verificação 5.2:** Encontre no `server/services/` um exemplo de chamada ao serviço de auditoria (ex: `auditService.logEvent(...)`) após uma operação crítica, como a aprovação de uma proposta.

6.  **[S1-006] Validação do Serviço de Criptografia:**
    * **Verificação 6.1:** Localize o serviço de criptografia centralizado. Apresente as funções de criptografar e descriptografar, confirmando o uso do algoritmo AES-256-GCM.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** N/A (Missão de Auditoria)
* **RISCOS IDENTIFICADOS:** N/A (Missão de Auditoria)
* **DECISÕES TÉCNICAS ASSUMIDAS:** N/A (Missão de Auditoria)
* **VALIDAÇÃO PENDENTE:** O resultado completo desta auditoria de conformidade.