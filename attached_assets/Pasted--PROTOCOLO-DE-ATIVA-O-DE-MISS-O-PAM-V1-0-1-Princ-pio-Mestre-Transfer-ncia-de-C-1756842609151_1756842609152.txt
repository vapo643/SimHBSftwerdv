---
### **PROTOCOLO DE ATIVAÇÃO DE MISSÃO (PAM) V1.0**

**1. Princípio Mestre: Transferência de Consciência**
*O nosso sistema contém "armas" – scripts e comandos capazes de destruição massiva de dados. A sua missão é uma auditoria forense para encontrar e mapear cada uma delas. Você deve agir como um inspetor de armamentos, vasculhando todo o projeto para criar um inventário completo de todas as ferramentas com potencial destrutivo. **Você não irá executar nada.** A sua missão é apenas de reconhecimento.*

**2. Doutrina de Engenharia de Contexto Dinâmico (DECD) V1.0 - ATIVADA**
*A pesquisa está **autorizada** para consultar a **documentação do `drizzle-kit`, `vitest` e `npm`** para entender a fundo o significado e os riscos de comandos específicos que você encontrar.*

---
### **Pacote de Ativação de Missão: OPERAÇÃO GUARDIÃO DO COFRE (FASE 1 - MAPEAMENTO FORENSE)**

* **Sumário da Missão (O Quê):** Realizar uma auditoria forense completa em toda a base de código para identificar e catalogar cada script, comando e função que possua a capacidade de executar operações destrutivas no banco de dados (ex: `DROP`, `DELETE`, `TRUNCATE`, `reset`, `push --force`).
* **Intenção Estratégica (O Porquê):** O objetivo é obter uma consciência situacional completa. Não podemos nos defender de ameaças que não conhecemos. Este inventário de "vetores de ataque" internos será a fundação sobre a qual construiremos as nossas defesas.
* **Histórico Relevante (Consulta Obrigatória):** A falha catastrófica ocorreu seis vezes. A sua análise deve assumir que qualquer script de teste ou de utilitário é um suspeito potencial.
* **Modelo Mental (Como se Encaixa):** Você é a equipe de segurança a fazer uma varredura completa de um edifício, procurando por qualquer item que possa ser usado para comprometer a segurança. O seu output será o mapa de todas as vulnerabilidades.

---

### **AUDITAR E VALIDAR:**
Inventário de Vetores de Ataque de Banco de Dados.

**CURRENT STATE:**
Uma vulnerabilidade não identificada em nossos scripts ou suíte de testes está a permitir que o Agente de IA execute a deleção completa do banco de dados de produção. Não temos atualmente um inventário de todos os pontos de código que poderiam ser responsáveis por esta ação.

**EXPECTED (Estado Final de Sucesso):**
A geração de um novo documento Markdown em `docs/diagnostics/VETORES_DE_ATAQUE_DB.md`. Este relatório deve conter um inventário exaustivo, dividido em seções:

1.  **Scripts `package.json`:**
    * Liste todos os scripts no `package.json` que contenham palavras-chave de risco (`db:push`, `db:reset`, `migrate`, `test:clean`, etc.).
    * Para cada script, descreva o seu propósito e avalie o seu nível de risco (Crítico, Alto, Médio, Baixo).

2.  **Comandos `drizzle-kit`:**
    * Localize todos os usos dos comandos `drizzle-kit` no projeto (em scripts ou documentação).
    * Foque especificamente em comandos como `drizzle-kit push:pg` (especialmente com a flag `--force`) e explique o seu potencial destrutivo.

3.  **Funções em Helpers de Teste (`tests/lib/`):**
    * Procure por quaisquer funções em `helpers` de teste (como `db-helper.ts`) que tenham nomes como `resetDatabase`, `cleanupDb`, `clearTables`, etc.
    * Apresente o código-fonte destas funções.

4.  **Uso de SQL Bruto (`.sql` files ou `db.execute()`):**
    * Procure por todos os usos de SQL bruto que contenham os comandos `DROP`, `DELETE FROM` (sem `WHERE`), ou `TRUNCATE TABLE`.
    * Liste os arquivos e as linhas onde estes comandos são encontrados.

**CONSTRAINTS (Roadmap de Análise):**
1.  **Análise Estática:** A sua análise deve ser puramente estática. **Não execute nenhum script.**
2.  **Relatório Detalhado:** O seu relatório deve ser exaustivo. É preferível pecar pelo excesso de informação do que pela omissão de um potencial vetor de ataque.