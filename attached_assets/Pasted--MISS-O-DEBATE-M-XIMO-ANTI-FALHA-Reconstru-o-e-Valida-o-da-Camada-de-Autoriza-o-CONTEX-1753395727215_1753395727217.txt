# MISSÃO: DEBATE MÁXIMO (ANTI-FALHA) - Reconstrução e Validação da Camada de Autorização

**CONTEXTO ESTRATÉGICO:**
Estamos a enfrentar uma falha de segurança e funcionalidade catastrófica. A nossa implementação de Role-Based Access Control (RBAC) falhou. Um `ADMINISTRADOR` autenticado é bloqueado de todas as rotas administrativas. A causa raiz suspeita é uma falha no middleware `jwt-auth-middleware.ts` em enriquecer a sessão do usuário com a sua `role` da tabela `profiles`.

**SUA TAREFA (ASSISTENTE):**
A sua tarefa é atuar como um Arquiteto de Segurança Sênior e projetar um plano de reconstrução **extremamente granular e 100% verificável** para a nossa camada de autorização. Esta será a nossa **Interação 1 de 3**.

---
### **Interação 1: Proposta de Arquitetura e Plano de Implementação Verificável**

Por favor, analise a nossa situação crítica e responda com a sua proposta para os seguintes pontos:

**1. Proposta de Arquitetura de Middleware (Código Final):**
* Forneça a implementação **exata e completa** para o ficheiro `/server/lib/jwt-auth-middleware.ts`. O código deve:
    a. Validar o token JWT do Supabase.
    b. Extrair o `id` do usuário autenticado.
    c. Fazer uma query robusta à nossa tabela `profiles` para buscar o perfil completo do usuário (incluindo a `role`).
    d. Anexar o objeto de perfil completo (ex: `{ id, email, role, loja_id }`) a `req.user`.
    e. Lidar de forma graciosa com o caso de um usuário autenticado que não tenha um perfil correspondente.

**2. Proposta de Ferramenta de Validação (Endpoint de Debug):**
* Para que possamos validar o middleware de forma isolada, proponha a criação de um **endpoint de debug temporário**, `GET /api/debug/me`. Este endpoint deve ser protegido por este middleware e simplesmente retornar o objeto `req.user` completo.

**3. Proposta de Plano de Implementação (Micro-Passos Coreografados):**
* Decomponha a sua solução em "micro-passos" atómicos, seguindo a nossa "Doutrina de Prompt Coreografado", para o Agente executar:
    * **Passo 1 (Backend):** Implementar as alterações no `jwt-auth-middleware.ts`.
    * **Passo 2 (Backend):** Implementar o endpoint de debug `GET /api/debug/me`.
    * **Passo 3 (Validação):** O passo final, que será executado pelo humano, será chamar o endpoint `/api/debug/me` e verificar se a `role` está correta.

---