### **Pacote de Ativação de Missão (PAM) V16.1: Erradicação em Massa de Débito Técnico (Estratégia de Padrões)**

* **Sumário da Missão (O Quê):** Executar uma operação de erradicação em massa de todos os **2.144 problemas de ESLint** (erros e warnings) restantes, utilizando uma estratégia de correção baseada em padrões para maximizar a velocidade e a eficiência.

* **Intenção Estratégica (O Porquê):** As tentativas de correção individual falharam em produzir resultados em tempo hábil. Para cumprir os prazos críticos de deploy, é mandatório adotar uma estratégia que alavanque a capacidade de processamento em larga escala da IA. Esta missão visa limpar 100% da dívida técnica de linting, de uma vez por todas, através de uma abordagem sistêmica.

* **Modelo Mental (Como se Encaixa):** Você atuará como um **Motor de Refatoração de Elite**. Sua abordagem será a seguinte:
    1.  **Diagnóstico em Massa:** Primeiro, você irá analisar a totalidade dos 2.144 problemas.
    2.  **Identificação de Padrões:** Em seguida, você irá identificar os 3 a 5 **padrões de erro** mais recorrentes que constituem a maioria dos problemas.
    3.  **Execução em Lote:** Finalmente, você irá projetar e executar soluções em lote para cada padrão, erradicando centenas de erros de cada vez.

* **Riscos Antecipados e Contramedidas:**
    * **Risco (CRÍTICO):** **Regressão por Correção em Lote.** Uma correção em massa mal executada (ex: um `find-and-replace` excessivamente amplo) pode quebrar a lógica da aplicação.
    * **Contramedida Mandatória:** Após a correção de **cada padrão de erro**, você **DEVE** executar `npx tsc --noEmit` para garantir que a segurança de tipos foi mantida e a suíte de testes (`npm run test`, se disponível) para validar que nenhuma regressão funcional foi introduzida.

---
**[DIRETRIZ DE APRENDIZADO OBRIGATÓRIO]**

Antes de iniciar a erradicação, você **DEVE** criar o artefato `docs/diagnostics/ESLINT_COMMON_ERROR_PATTERNS.md`. Este documento DEVE conter sua análise dos seus próprios erros de linting, categorizados por padrão, com exemplos e a estratégia de correção padrão. Esta é uma missão de aprendizado, não apenas de correção.

---

**DIRETRIZ DE MISSÃO: Estratégia de Erradicação por Padrões (Tolerância Zero)**

**CURRENT STATE:**
O sistema compila com zero erros de TypeScript, mas a auditoria revelou **2.144 problemas de ESLint (922 erros, 1222 warnings)**. O script `npm run lint` está ausente. A qualidade do código está inaceitável.

**EXPECTED (Estado Final de Sucesso):**
A missão será considerada um sucesso quando você produzir um `RELATORIO_DE_CONFORMIDADE_LINTING_S0.md` que prove, através da saída literal dos comandos, que o Sprint 0 está em conformidade total:
1.  **Qualidade de Código:** Um script `lint` existe no `package.json`, e a saída de `npm run lint` reporta **ZERO erros e ZERO warnings**.
2.  **Segurança de Tipos:** A saída de `npx tsc --noEmit` reporta **"Found 0 errors."**.

**CONSTRAINTS (Roadmap de Erradicação em Massa):**

**Fase 1: Análise de Padrões e Correção Automática (A "Barragem")**
1.  **Passo 1.1: Diagnóstico e Análise de Padrões.** Execute `npx eslint . --ext .ts,.tsx` e anexe a saída completa a um arquivo de análise. Identifique e reporte os 5 padrões de erro mais comuns e sua contagem. Documente-os no `ESLINT_COMMON_ERROR_PATTERNS.md`.
2.  **Passo 1.2: Formalização do Script.** Forneça o trecho de JSON para adicionar o script `"lint": "eslint . --ext .ts,.tsx --max-warnings 0"` ao `package.json`.
3.  **Passo 1.3: Correção Automática.** Execute `npx eslint . --ext .ts,.tsx --fix`. Reporte a nova contagem de erros e warnings.

**Fase 2: Erradicação Manual por Padrões (As "Incursões Cirúrgicas")**
1.  **Passo 2.1: Ataque ao Padrão #1.** Com base na sua análise, execute a correção em massa para o padrão de erro mais frequente. Valide com `tsc` e testes.
2.  **Passo 2.2: Ataque ao Padrão #2.** Prossiga para o segundo padrão mais frequente. Valide.
3.  **(Continue até que todos os padrões principais sejam erradicados)**

**Fase 3: Limpeza Final e Geração de Prova Irrefutável**
1.  **Passo 3.1: Erradicação dos Erros Remanescentes.** Corrija quaisquer erros únicos que não se encaixaram nos padrões.
2.  **Passo 3.2: Prova de Conformidade.** Execute `npm run lint` e `npx tsc --noEmit`. As saídas devem ser 100% limpas.
3.  **Passo 3.3: Compilar Relatório Final.** Crie o `RELATORIO_DE_CONFORMIDADE_LINTING_S0.md` contendo as saídas limpas como prova irrefutável da conclusão.

---

**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**

* **CONFIANÇA NA IMPLEMENTAÇÃO:** 80%
* **RISCOS IDENTIFICADOS:** ALTO (A correção em massa, mesmo que baseada em padrões, carrega um risco de regressão).
* **DECISÕES TÉCNICAS ASSUMIDAS:** Assumo que a maioria dos 2.144 problemas se enquadra em um pequeno número de padrões corrigíveis em lote.
* **VALIDAÇÃO PENDENTE:** Um relatório com saídas 100% limpas para `tsc` e `lint` é a única porta de entrada para o Sprint 1. Não haverá mais desculpas.