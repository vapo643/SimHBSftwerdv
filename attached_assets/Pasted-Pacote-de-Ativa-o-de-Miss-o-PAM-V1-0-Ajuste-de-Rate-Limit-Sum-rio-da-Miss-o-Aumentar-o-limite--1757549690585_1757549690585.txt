Pacote de Ativação de Missão (PAM) V1.0 - Ajuste de Rate Limit
Sumário da Missão: Aumentar o limite máximo de requisições (max) no rate limiter de produção para um valor mais apropriado, garantindo a estabilidade da aplicação sob tráfego normal.

Intenção Estratégica: Prevenir futuros bloqueios 429 (Too Many Requests) causados por picos de tráfego legítimos e fornecer uma margem de segurança operacional para as próximas fases de depuração e validação do sistema.

Histórico Relevante (Consulta Obrigatória): A auditoria forense identificou que o rate limit de produção em server/lib/security-config.ts está configurado para um valor excessivamente baixo (100 requisições / 15 minutos), o que foi um fator chave na falha em cascata anterior, pois não deu margem para o loop de retentativas do frontend.

Modelo Mental: Estamos a ajustar a "válvula de segurança" da nossa API. O limite atual está demasiado apertado para o funcionamento normal. Vamos ajustá-lo para um nível que proteja contra abuso real, mas que não penalize a utilização normal da aplicação.

Riscos Antecipados e Contramedidas: BAIXO. A alteração de um valor numérico é de baixo risco técnico. O risco operacional é que um limite demasiado alto poderia permitir abuso; no entanto, o valor proposto (2000) é um padrão razoável para estabilização. A contramedida é a revisão do código implementado.

IMPLEMENTAR:
Ajustar o rate limit de produção no ficheiro de configuração de segurança.

CURRENT STATE:

Ficheiro: server/lib/security-config.ts

Lógica com Falha:

TypeScript

export const generalApiLimiter = rateLimit({
  windowMs: isDevelopment ? 1 * 60 * 1000 : 15 * 60 * 1000, // 15min prod
  max: isDevelopment ? 10000 : 100, // APENAS 100 REQUESTS EM 15 MIN (PRODUÇÃO)
});
Evidência Bruta: O valor 100 para max em produção é insuficiente e resultou no bloqueio total do serviço.

EXPECTED (Estado Final de Sucesso):

Ficheiro: server/lib/security-config.ts

Código Corrigido:

TypeScript

export const generalApiLimiter = rateLimit({
  windowMs: isDevelopment ? 1 * 60 * 1000 : 15 * 60 * 1000,
  max: isDevelopment ? 10000 : 2000, // Aumentado de 100 para 2000
});
Comportamento: A API em produção permitirá até 2000 requisições por janela de 15 minutos, um limite mais robusto para a operação normal.

DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):

CONFIANÇA NA IMPLEMENTAÇÃO: 100%

RISCOS IDENTIFICADOS: BAIXO.

DECISÕES TÉCNICAS ASSUMIDAS: "O valor de 2000 foi escolhido como um padrão industrial razoável para uma API de pequena a média escala. Este valor pode ser ajustado no futuro com base na monitorização do tráfego real."

VALIDAÇÃO PENDENTE: "Validação funcional completa pelo Arquiteto Chefe no Passo 5 do roadmap."

PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:

Mapeie e modifique o ficheiro server/lib/security-config.ts.

Garanta que a única alteração é o valor numérico da propriedade max na condição ternária de produção.

Execute get_latest_lsp_diagnostics e corrija TODOS os erros ou avisos introduzidos.

Declare o seu Nível de Confiança.

Categorize o Risco como BAIXO.

Realize um teste funcional mínimo: confirme que a aplicação reinicia sem erros.

Documente a decisão de aumentar o limite para 2000.