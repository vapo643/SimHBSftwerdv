### Pacote de Ativação de Missão (PAM) V1.0 - Auditoria Consolidada - Fase 3: Análise de Risco de Performance

* **Sumário da Missão (O Quê):** Realizar uma análise de risco de performance estática, mapeando o "caminho crítico" do fluxo de uma proposta e inspecionando o código em busca de potenciais estrangulamentos que possam impactar a capacidade do sistema de processar 50 propostas por dia.
* **Intenção Estratégica (O Porquê):** Antecipar e identificar proativamente os riscos de performance antes do deploy em produção. O objetivo é validar se a arquitetura atual suporta o volume de negócio inicial e fornecer uma lista exaustiva de recomendações de otimização.
* **Modelo Mental (Como se Encaixa):** Você é um engenheiro de performance sênior (SRE). Sua tarefa é analisar o código não pela sua funcionalidade, mas pela sua eficiência computacional. Você está a procurar por queries ineficientes, transações longas e operações síncronas bloqueantes no fluxo de negócio mais importante.

---

**IMPLEMENTAR (Plano de Análise):**
Execute a seguinte sequência de verificações e reporte suas descobertas com evidências de código.

**CONSTRAINTS (Roadmap de Análise - Fase 3):**

**1. Mapeamento do Caminho Crítico:**
* **Verificação 1.1:** Identifique e liste a sequência completa de chamadas a *Use Cases* e *Domain Events* que ocorrem desde a criação de uma proposta (`CreateProposalUseCase`) até à sua aprovação (`ApproveProposalUseCase`).

**2. Análise de Eficiência de Queries:**
* **Verificação 2.1:** Inspecione o `TransactionalProposalRepository.ts`. Encontre a query para a listagem principal de propostas (ex: `findPendingForAnalysis`). Valide se a query SQL gerada pelo Drizzle utiliza eficazmente os índices da base de dados. Apresente a construção da query no Drizzle.

**3. Análise de Transações e Bloqueios:**
* **Verificação 3.1:** Analise o `ApproveProposalUseCase.ts`. Determine quais operações de escrita na base de dados (`save`, `update`) ocorrem dentro da sua transação `UnitOfWork`.
* **Verificação 3.2:** Avalie o risco de bloqueio. A transação de aprovação inclui alguma operação potencialmente lenta (ex: chamadas a APIs externas, processamento de ficheiros)? Reporte quaisquer riscos de bloqueio de longa duração.

**4. Análise de Processamento Assíncrono:**
* **Verificação 4.1:** Investigue o fluxo de negócio após a emissão do `ProposalApprovedEvent`. Confirme que as operações pesadas (geração de PDF da CCB, envio para ClickSign) são delegadas a um worker assíncrono (BullMQ), em vez de serem executadas de forma síncrona. Apresente o código do *worker* que consome este evento.

**5. Relatório de Risco de Escalabilidade (Protocolo de Divulgação Total Mandatório):**
* **Verificação 5.1:** Com base nas suas descobertas, forneça um relatório exaustivo:
    * **Pontuação de Confiança (0-100%):** Qual a sua confiança de que a arquitetura atual suporta 50 propostas/dia?
    * **Lista Completa de Riscos:** Apresente **TODOS** os riscos de performance identificados, do mais ao menos crítico. Não omita ou resuma.
    * **Lista Completa de Recomendações:** Para cada risco, forneça uma recomendação de otimização detalhada.

---

### **PROTOCOLO DE DIVULGAÇÃO TOTAL (PDT) V1.0 (MANDATÓRIO)**

* **Diretriz Mestra:** Completude exaustiva. Você DEVE listar a totalidade dos seus achados, riscos e recomendações. A omissão é uma falha de missão.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** N/A (Missão de Análise)
* **RISCOS IDENTIFICADOS:** N/A (Missão de Análise)
* **DECISÕES TÉCNICAS ASSUMIDAS:** N/A (Missão de Análise)
* **VALIDAÇÃO PENDENTE:** O resultado completo desta análise de risco de performance.