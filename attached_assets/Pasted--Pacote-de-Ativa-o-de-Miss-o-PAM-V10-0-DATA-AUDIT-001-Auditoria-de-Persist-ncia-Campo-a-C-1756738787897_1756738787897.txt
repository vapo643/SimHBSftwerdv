### **Pacote de Ativação de Missão (PAM) V10.0 - DATA-AUDIT-001 (Auditoria de Persistência Campo a Campo)**

**[PROTOCOLO DE AUDITORIA DE CENÁRIO DE NEGÓCIO (PACN) V1.0 ATIVADO]**
*Sua resposta deve ser exaustiva. Para cada cenário, prove com evidências de código e SQL como a regra de negócio é garantida.*

* **Sumário da Missão:** Validar a integridade da persistência de dados de ponta-a-ponta para o fluxo de criação de propostas. A missão consiste em simular a criação de uma proposta com todos os campos preenchidos na UI e, em seguida, auditar o banco de dados para verificar se cada campo foi salvo com 100% de precisão.
* **Intenção Estratégica:** Garantir, com confiança absoluta, que não há "vazamentos" ou "corrupção silenciosa" de dados entre a interface do usuário e a camada de persistência. Este é o nosso "lacre de ouro" de qualidade de dados antes do deploy.

---

**AUDITAR E VALIDAR:**
Persistência de Dados Campo a Campo no Fluxo de "Nova Proposta"

**Cenário de Negócio (O "Caso de Teste"):**
Um operador de crédito utiliza o formulário "Nova Proposta" para criar um novo registro. Ele preenche meticulosamente todos os campos disponíveis, incluindo dados pessoais do cliente, informações de endereço, dados do empregador, detalhes financeiros, condições do empréstimo, dados de pagamento e anexa múltiplos documentos e referências. A regra de negócio é simples e absoluta: cada dado inserido na UI deve ser refletido com exatidão perfeita no banco de dados.

**Vetor de Ataque / Ponto de Falha (O "Risco"):**
O risco é a "corrupção silenciosa de dados". Uma falha no mapeamento de dados entre o formulário do frontend, a carga útil da API, o serviço de backend ou o schema do Drizzle ORM pode fazer com que um campo seja ignorado, salvo incorretamente (ex: truncado) ou mapeado para a coluna errada no banco de dados, sem gerar um erro visível para o usuário.

**Evidência de Conformidade Requerida (A "Prova Irrefutável"):**
Você deve produzir um **Relatório de Auditoria de Persistência de Dados** que execute e documente os seguintes passos:

1.  **Definição da "Proposta de Ouro":** Apresente um objeto JSON detalhado que represente uma proposta de teste complexa, com valores para o maior número possível de campos da tabela `propostas` e suas tabelas relacionadas (`referencia_pessoal`, `proposta_documentos`).
2.  **Criação do Script de Auditoria:** Crie um arquivo `scripts/audit/verify-golden-proposal.sql`. Este script deve conter:
    * Uma query `SELECT * FROM propostas WHERE id = $1;` para buscar a proposta principal.
    * Queries `SELECT` para buscar os registros correspondentes em `referencia_pessoal` e `proposta_documentos`.
    * Uma query `SELECT` na tabela `proposta_logs` para validar que o evento de criação foi registrado.
3.  **Execução da Auditoria (Simulada):**
    * Simule a criação da "proposta de ouro" e obtenha um ID de proposta (pode ser um UUID de teste).
    * Para cada campo crítico (no mínimo 15 campos da tabela `propostas`), crie uma tabela comparativa no seu relatório:

| Campo (UI/JSON) | Valor Esperado | Campo (DB) | Valor Verificado no DB | Status |
| :--- | :--- | :--- | :--- | :--- |
| `clienteNome` | "João da Silva Santos" | `cliente_nome` | "João da Silva Santos" | ✅ IDÊNTICO |
| `valorSolicitado`| 25000.00 | `valor` | 25000.00 | ✅ IDÊNTICO |
| ... | ... | ... | ... | ... |

4.  **Validação das Tabelas Relacionadas:** Apresente os resultados esperados das queries nas tabelas `referencia_pessoal` e `proposta_documentos`, confirmando que o número de registros e os dados estão corretos.
5.  **Veredito Final de Integridade:** Com base na comparação campo a campo, declare um veredito final: "✅ INTEGRIDADE TOTAL CONFIRMADA" ou "❌ FALHA DE INTEGRIDADE DETECTADA", listando todas as discrepâncias encontradas.

---
---
[PGI ATIVO | LEMBRETE DE ESTADO DO ROADMAP]
- **Roadmap em Standby:** Deploy em Produção
- **Próximo Passo a ser Retomado:** "Operação Lacre de Ouro" - Fase 2 (`DATA-AUDIT-002`)
- **Missão de Emergência Atual:** "Operação Lacre de Ouro" (`DATA-AUDIT-001` em execução pelo Agente)
---