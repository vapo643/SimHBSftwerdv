### Pacote de Ativação de Missão (PAM) V1.0 - Implementação da Funcionalidade de Exclusão

* **Sumário da Missão:** Implementar a funcionalidade completa de ponta a ponta para a exclusão de documentos numa proposta existente. A missão envolve a criação da lógica de backend (rota, controlador, serviço) e a ativação do controlo de UI no frontend.

* **Intenção Estratégica:** Completar o ciclo de vida da gestão de documentos no fluxo de correção, permitindo que os atendentes não só adicionem, mas também removam documentos de uma proposta pendente, garantindo flexibilidade e controlo total sobre a documentação.

* **Histórico Relevante (Consulta Obrigatória):** A auditoria forense revelou que a funcionalidade de exclusão é atualmente inexistente. O botão na UI está permanentemente desativado e não há endpoint de backend ou lógica de serviço para suportar a operação.

---

**IMPLEMENTAR:**
Construir e conectar a funcionalidade de exclusão de documentos.

**LÓGICA DE EXECUÇÃO (FULL-STACK):**

**1. Backend - Criar a Lógica de Serviço e Rota:**
    a. **Repositório (`documents.repository.ts`):** Crie um novo método para remover um registo da tabela `proposta_documentos` pelo seu ID e outro método para remover um ficheiro do Supabase Storage pelo seu caminho (`filePath`).
    b. **Serviço (`documentsService.ts`):** Crie um novo método `deleteDocument(documentoId: string)` que orquestre a operação: primeiro busca o registo do documento na base de dados para obter o seu `filePath`, depois remove o ficheiro do storage, e por fim remove o registo da base de dados.
    c. **Controlador (`documents.ts`):** Crie um novo controlador `deletePropostaDocument` que receba o `:documentoId` dos parâmetros da rota.
    d. **Rota (`routes.ts`):** Crie um novo endpoint `DELETE /api/propostas/:propostaId/documents/:documentoId` e conecte-o ao novo controlador.

**2. Frontend - Ativar a Interface de Utilizador:**
    a. **Componente (`editar.tsx`):** No ficheiro `client/src/pages/propostas/editar.tsx`, localize o botão "Remover" que está atualmente desativado (`disabled`).
    b. **Ativar o Botão:** Remova a propriedade `disabled`.
    c. **Conectar a Ação:** Crie uma nova `mutation` (usando `useMutation`) que, ao ser acionada pelo clique no botão, chame o novo endpoint `DELETE /api/propostas/:propostaId/documents/:documentoId`.
    d. **Atualizar a UI:** No `onSuccess` da `mutation`, invalide a query que busca a lista de documentos (`queryClient.invalidateQueries(...)`) para que a lista na interface seja atualizada automaticamente, removendo o documento excluído.

---
**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
Execute a implementação de ponta a ponta e realize o protocolo 7-CHECK completo, garantindo **ZERO** novos diagnósticos de LSP e que a aplicação permaneça estável.