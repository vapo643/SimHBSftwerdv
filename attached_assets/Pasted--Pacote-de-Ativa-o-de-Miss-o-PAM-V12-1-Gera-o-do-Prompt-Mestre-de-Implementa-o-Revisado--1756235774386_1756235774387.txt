### **Pacote de Ativação de Missão (PAM) V12.1: Geração do Prompt Mestre de Implementação (Revisado)**

* **Sumário da Missão (O Quê):** Gerar um "Super Prompt" completo e detalhado, destinado a uma IA de planejamento avançada ("Deep Think"). O objetivo deste prompt é instruir a IA a criar o **"Roadmap Mestre de Implementação: Operação Aço Líquido"** para o sistema Simpix, baseado em toda a Doutrina Arquitetural que foi refinada e ratificada.

* **Intenção Estratégica (O Porquê):** A fase de planejamento arquitetural ("Operação Planta Impecável") foi concluída com sucesso. Agora, entramos na fase de implementação ("Operação Aço Líquido"). Para garantir que a tradução da arquitetura para o código seja impecável, precisamos de um roadmap de implementação que seja mais do que uma lista de tarefas; ele deve ser uma doutrina de execução. Este "Super Prompt" é o instrumento que garantirá a criação desse roadmap.

* **Modelo Mental (Como se Encaixa):** Você atuará como um **Orquestrador de IA**. Sua tarefa não é criar o roadmap, mas sim criar o **comando perfeito** que forçará outra IA a criar o roadmap perfeito. Você deve empacotar toda a nossa filosofia operacional, contexto de projeto e Doutrina Arquitetural em um único prompt abrangente e inequívoco.

* **Riscos Antecipados e Contramedidas:**
    * **Risco (CRÍTICO):** **Prompt Ambíguo.** Se o prompt que você gerar for vago, o roadmap resultante será fraco, levando a uma implementação falha.
    * **Contramedida Mandatória:** O prompt que você criar **DEVE** incluir seções explícitas para: (1) A persona que a IA de planejamento deve assumir, (2) O contexto completo do projeto, (3) A estrutura exata que o roadmap deve seguir, e (4) As regras de engajamento para a IA durante a execução do roadmap.

---

**IMPLEMENTAR: Geração do Super Prompt V2.0 para "Deep Think"**

**CURRENT STATE:**
A "Operação Planta Impecável" foi concluída. Todos os 10 threads arquiteturais foram auditados, remediados e selados, atingindo o padrão "Impecável". A Doutrina Arquitetural completa e validada está disponível.

**EXPECTED (Estado Final de Sucesso):**
Sua única saída deve ser um único bloco de código Markdown contendo o "Super Prompt" completo, pronto para ser copiado e colado. Este prompt deve ser auto-contido e seguir a estrutura detalhada abaixo.

**CONSTRAINTS (Estrutura Mandatória do Super Prompt a ser Gerado):**

O "Super Prompt" que você irá gerar para o "Deep Think" DEVE conter as seguintes seções:

* **`### DIRETIVA DE MISSÃO: CRIAÇÃO DO ROADMAP MESTRE DE IMPLEMENTAÇÃO`**
    * **`1. PERSONA OBRIGATÓRIA:`** Definir a persona da IA "Deep Think" como **"Arquiteto Mestre de Implementação e Engenheiro Cético de Elite"**. Detalhar suas responsabilidades: traduzir arquitetura em um plano de execução faseado, prever dependências, definir critérios de sucesso mensuráveis e, crucialmente, atuar como um auditor contínuo durante a implementação.
    * **`2. CONTEXTO OPERACIONAL COMPLETO (DOUTRINA SIMPIX):`** Esta seção deve ser um resumo conciso de todo o nosso contexto. Você deve incluir:
        * **Visão do Produto:** A missão do Simpix (plataforma líder em gestão de crédito, etc.).
        * **Stack Tecnológica Principal:** TypeScript, Monolito Modular, DDD, Supabase, BullMQ, Azure.
        * **Princípios Arquiteturais Chave:** Resumo dos pilares que definimos (Segurança de Nível Bancário, Resiliência, Observabilidade, Qualidade Impecável, etc.).
        * **Dívida Técnica Conhecida:** Mencionar explicitamente os pontos pendentes (Vulnerabilidade no `drizzle-kit`, Débito de Tipagem `tsc`).
        * **Referência à Doutrina:** Declarar que o anexo completo da "Doutrina Arquitetural" (os 10 threads remediados) é a única fonte da verdade.
        * **(NOVO) Estratégia de Deployment Faseda (Replit → Azure):** O deploy inicial (MVP) será realizado na plataforma Replit para máxima agilidade. No entanto, a arquitetura DEVE ser construída de forma agnóstica à infraestrutura, utilizando padrões (ex: 12-Factor App, abstração de variáveis de ambiente, portas e adaptadores) que garantam uma migração futura para a Azure Cloud com mínimo de refatoração. O roadmap deve incluir explicitamente um "Épico de Preparação para Azure", com stories técnicas focadas em abstrair dependências específicas da plataforma Replit.
    * **`3. ESTRUTURA MANDATÓRIA DO ROADMAP:`** Instruir a IA a gerar o roadmap com uma estrutura específica e detalhada:
        * **Faseamento por Sprints:** O roadmap deve ser dividido em Sprints de implementação lógicos (ex: Sprint 1: Fundação de Segurança, Sprint 2: Core de Dados, etc.).
        * **Épicos e User Stories:** Cada Sprint deve ser detalhado em Épicos (ex: "Implementar Módulo de Autenticação") e User Stories técnicas acionáveis.
        * **(NOVO) Critérios de Aceitação de Qualidade e Segurança (DoD):** Cada User Story técnica deve ter uma "Definição de Feito" inequívoca, que **obrigatoriamente** inclua: "Código implementado conforme o padrão de arquitetura", "Testes unitários e de integração com cobertura mínima de 80% para a nova lógica", "Passagem em todas as varreduras de segurança SAST (ex: Snyk, Semgrep) sem novas vulnerabilidades críticas ou altas", e "Documentação da API (se aplicável) devidamente atualizada".
        * **Mapeamento de Dependências:** O roadmap deve visualizar as dependências entre as stories e os sprints.
        * **Métrica de Sucesso:** Cada Épico deve ser rastreável a um KPI de negócio definido no `business-objectives-and-drivers.md`.
    * **`4. PROTOCOLO DE EXECUÇÃO DO AGENTE (MODO CÉTICO):`** Esta é a seção mais crítica. Você deve definir as regras de engajamento para a IA que irá *executar* o roadmap.
        * **Princípio do Ceticismo Ativo:** A IA executora não deve seguir o roadmap cegamente. A cada passo, ela deve re-validar se a implementação planejada ainda é a melhor abordagem à luz do código existente.
        * **Protocolo de Escalonamento de Incerteza:** Se a IA executora encontrar uma ambiguidade no roadmap, identificar uma abordagem superior ou descobrir um risco não previsto, ela DEVE pausar a execução e escalar a questão com uma "Proposta de Refinamento de Rota", justificando a mudança.
        * **Validação Contínua:** Cada implementação deve ser seguida pela execução de testes (unitários, integração), varreduras de segurança e validações de linting. Uma implementação só é "concluída" após passar em todos os gates de qualidade.

---

**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**

* **CONFIANÇA NA IMPLEMENTAÇÃO:** 95%
* **RISCOS IDENTIFICADOS:** BAIXO.
* **DECISÕES TÉCNICAS ASSUMIDAS:** Assumo que uma IA avançada como "Deep Think" pode processar um prompt desta magnitude e gerar um artefato de alta qualidade.
* **VALIDAÇÃO PENDENTE:** O "Super Prompt" gerado será validado por você antes de ser utilizado.

---

**PROTOCOLO OBRIGATÓRIO 7-CHECK (ADAPTATIVO - Nível LIGHT):**
Ao concluir esta missão, você **DEVE** executar e reportar o resultado do `7-CHECK LIGHT`.