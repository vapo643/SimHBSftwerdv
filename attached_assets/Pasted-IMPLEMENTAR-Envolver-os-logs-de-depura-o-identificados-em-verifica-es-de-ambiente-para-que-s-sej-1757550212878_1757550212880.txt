IMPLEMENTAR:
Envolver os logs de depura√ß√£o identificados em verifica√ß√µes de ambiente para que s√≥ sejam executados quando process.env.NODE_ENV n√£o for 'production'.

CURRENT STATE:

Ficheiro 1: client/src/lib/apiClient.ts

L√≥gica com Falha: O console.log('[PASSO 3 - ENVIO]', ...) √© executado incondicionalmente em todas as requisi√ß√µes autenticadas.

Ficheiro 2: server/lib/logger.ts

L√≥gica com Falha: O logger.info('üì• Request received', ...) √© executado incondicionalmente em todas as requisi√ß√µes recebidas pelo servidor.

EXPECTED (Estado Final de Sucesso):

Ficheiro 1: client/src/lib/apiClient.ts

C√≥digo Corrigido: O bloco de log deve ser envolvido numa condi√ß√£o.

TypeScript

// Verifique o ambiente (usando o m√©todo apropriado para Vite no frontend)
if (import.meta.env.DEV) {
  console.log('[PASSO 3 - ENVIO]', {
    url: fullUrl,
    authorizationHeader: headers['Authorization'],
    hasToken: !!token,
    isFormData: body instanceof FormData,
  });
}
Ficheiro 2: server/lib/logger.ts

C√≥digo Corrigido: O log de informa√ß√£o deve ser envolvido numa condi√ß√£o similar.

TypeScript

// Dentro do middleware requestLoggingMiddleware
if (process.env.NODE_ENV !== 'production') {
  logger.info('üì• Request received', {
    // ... (detalhes do log)
  });
}
next();
Comportamento: Ao executar a aplica√ß√£o em produ√ß√£o (NODE_ENV='production'), estes logs de depura√ß√£o n√£o devem mais aparecer na consola do navegador ou do servidor. Em desenvolvimento, devem continuar a funcionar como antes.

DECLARA√á√ÉO DE INCERTEZA (OBRIGAT√ìRIO):

CONFIAN√áA NA IMPLEMENTA√á√ÉO: 100%

RISCOS IDENTIFICADOS: BAIXO.

DECIS√ïES T√âCNICAS ASSUMIDAS: "Utilizando as vari√°veis de ambiente padr√£o da ind√∫stria (import.meta.env.DEV para Vite no frontend, process.env.NODE_ENV para Node.js no backend) para a dete√ß√£o de ambiente."

VALIDA√á√ÉO PENDENTE: "Valida√ß√£o funcional completa pelo Arquiteto Chefe no Passo 5 do roadmap."

PROTOCOLO OBRIGAT√ìRIO 7-CHECK EXPANDIDO:

Mapeie e modifique os ficheiros client/src/lib/apiClient.ts e server/lib/logger.ts.

Garanta que as condi√ß√µes de ambiente (if) envolvem corretamente os blocos de log.

Execute get_latest_lsp_diagnostics e corrija TODOS os erros ou avisos introduzidos.

Declare o seu N√≠vel de Confian√ßa.

Categorize o Risco como BAIXO.

Realize um teste funcional m√≠nimo: confirme que a aplica√ß√£o reinicia sem erros.

Documente a decis√£o de condicionar os logs ao ambiente de desenvolvimento.