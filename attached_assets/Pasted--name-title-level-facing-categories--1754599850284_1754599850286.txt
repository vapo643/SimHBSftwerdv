| name                         | title                        | level | facing   | categories      | description                                                                                                                                                                                                                                                 | detail                                                                                                                                                                                                                                                                                                                                                                                                                                                                        | remediation                                                                                      | metadata                                                                                                                                                | cache_key                                                                                                            |
| ---------------------------- | ---------------------------- | ----- | -------- | --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------- |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.produtos\` has a row level security policy \`allow_read_for_authenticated_users\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                            | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | auth_rls_init_plan_public_produtos_allow_read_for_authenticated_users                                                |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tabelas_comerciais\` has a row level security policy \`allow_read_for_authenticated_users\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                  | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | auth_rls_init_plan_public_tabelas_comerciais_allow_read_for_authenticated_users                                      |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.produtos\` has a row level security policy \`produtos_select_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | auth_rls_init_plan_public_produtos_produtos_select_authenticated                                                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tabelas_comerciais\` has a row level security policy \`tabelas_comerciais_select_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | auth_rls_init_plan_public_tabelas_comerciais_tabelas_comerciais_select_authenticated                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.produto_tabela_comercial\` has a row level security policy \`produto_tabela_comercial_select_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info. | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"produto_tabela_comercial","type":"table","schema":"public"}                                                                                    | auth_rls_init_plan_public_produto_tabela_comercial_produto_tabela_comercial_select_authenticated                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.comunicacao_logs\` has a row level security policy \`comunicacao_logs_select_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"comunicacao_logs","type":"table","schema":"public"}                                                                                            | auth_rls_init_plan_public_comunicacao_logs_comunicacao_logs_select_authenticated                                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.parceiros\` has a row level security policy \`parceiros_insert_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                               | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"parceiros","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_parceiros_parceiros_insert_authenticated                                                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.parceiros\` has a row level security policy \`parceiros_update_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                               | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"parceiros","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_parceiros_parceiros_update_authenticated                                                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.parceiros\` has a row level security policy \`parceiros_delete_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                               | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"parceiros","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_parceiros_parceiros_delete_authenticated                                                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.lojas\` has a row level security policy \`lojas_insert_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"lojas","type":"table","schema":"public"}                                                                                                       | auth_rls_init_plan_public_lojas_lojas_insert_authenticated                                                           |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.lojas\` has a row level security policy \`lojas_update_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"lojas","type":"table","schema":"public"}                                                                                                       | auth_rls_init_plan_public_lojas_lojas_update_authenticated                                                           |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.lojas\` has a row level security policy \`lojas_delete_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"lojas","type":"table","schema":"public"}                                                                                                       | auth_rls_init_plan_public_lojas_lojas_delete_authenticated                                                           |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.produtos\` has a row level security policy \`produtos_insert_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | auth_rls_init_plan_public_produtos_produtos_insert_authenticated                                                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.produtos\` has a row level security policy \`produtos_update_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | auth_rls_init_plan_public_produtos_produtos_update_authenticated                                                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.produtos\` has a row level security policy \`produtos_delete_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | auth_rls_init_plan_public_produtos_produtos_delete_authenticated                                                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tabelas_comerciais\` has a row level security policy \`tabelas_comerciais_insert_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | auth_rls_init_plan_public_tabelas_comerciais_tabelas_comerciais_insert_authenticated                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tabelas_comerciais\` has a row level security policy \`tabelas_comerciais_update_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | auth_rls_init_plan_public_tabelas_comerciais_tabelas_comerciais_update_authenticated                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tabelas_comerciais\` has a row level security policy \`tabelas_comerciais_delete_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | auth_rls_init_plan_public_tabelas_comerciais_tabelas_comerciais_delete_authenticated                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.produto_tabela_comercial\` has a row level security policy \`produto_tabela_comercial_insert_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info. | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"produto_tabela_comercial","type":"table","schema":"public"}                                                                                    | auth_rls_init_plan_public_produto_tabela_comercial_produto_tabela_comercial_insert_authenticated                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.produto_tabela_comercial\` has a row level security policy \`produto_tabela_comercial_delete_authenticated\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info. | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"produto_tabela_comercial","type":"table","schema":"public"}                                                                                    | auth_rls_init_plan_public_produto_tabela_comercial_produto_tabela_comercial_delete_authenticated                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.profiles\` has a row level security policy \`profiles_update_own\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                           | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"profiles","type":"table","schema":"public"}                                                                                                    | auth_rls_init_plan_public_profiles_profiles_update_own                                                               |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`atendente_see_own_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                  | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_atendente_see_own_proposals                                                      |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`analista_see_analysis_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                              | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_analista_see_analysis_proposals                                                  |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`admin_see_all_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                      | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_admin_see_all_proposals                                                          |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`gerente_see_store_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                  | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_gerente_see_store_proposals                                                      |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`financeiro_see_payment_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_financeiro_see_payment_proposals                                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`atendente_create_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_atendente_create_proposals                                                       |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`admin_create_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_admin_create_proposals                                                           |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`analista_update_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                    | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_analista_update_proposals                                                        |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`admin_update_proposals\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_admin_update_proposals                                                           |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`atendente_update_own_draft\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_atendente_update_own_draft                                                       |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.parceiros\` has a row level security policy \`parceiros_admin_only_select\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                  | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"parceiros","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_parceiros_parceiros_admin_only_select                                                      |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.lojas\` has a row level security policy \`lojas_select_by_role\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"lojas","type":"table","schema":"public"}                                                                                                       | auth_rls_init_plan_public_lojas_lojas_select_by_role                                                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.propostas\` has a row level security policy \`atendente_see_own_formalization\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                              | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | auth_rls_init_plan_public_propostas_atendente_see_own_formalization                                                  |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.profiles\` has a row level security policy \`profiles_secure_select\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                        | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"profiles","type":"table","schema":"public"}                                                                                                    | auth_rls_init_plan_public_profiles_profiles_secure_select                                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.produtos\` has multiple permissive policies for role \`anon\` for action \`SELECT\`. Policies include \`{allow_read_for_authenticated_users,produtos_select_authenticated}\`                                                                                                                                                                                                                                                                                   | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | multiple_permissive_policies_public_produtos_anon_SELECT                                                             |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.produtos\` has multiple permissive policies for role \`authenticated\` for action \`SELECT\`. Policies include \`{allow_read_for_authenticated_users,produtos_select_authenticated}\`                                                                                                                                                                                                                                                                          | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | multiple_permissive_policies_public_produtos_authenticated_SELECT                                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.produtos\` has multiple permissive policies for role \`authenticator\` for action \`SELECT\`. Policies include \`{allow_read_for_authenticated_users,produtos_select_authenticated}\`                                                                                                                                                                                                                                                                          | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | multiple_permissive_policies_public_produtos_authenticator_SELECT                                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.produtos\` has multiple permissive policies for role \`dashboard_user\` for action \`SELECT\`. Policies include \`{allow_read_for_authenticated_users,produtos_select_authenticated}\`                                                                                                                                                                                                                                                                         | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"produtos","type":"table","schema":"public"}                                                                                                    | multiple_permissive_policies_public_produtos_dashboard_user_SELECT                                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`anon\` for action \`INSERT\`. Policies include \`{admin_create_proposals,atendente_create_proposals}\`                                                                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_anon_INSERT                                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`anon\` for action \`SELECT\`. Policies include \`{admin_see_all_proposals,analista_see_analysis_proposals,atendente_see_own_formalization,atendente_see_own_proposals,financeiro_see_payment_proposals,gerente_see_store_proposals}\`                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_anon_SELECT                                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`anon\` for action \`UPDATE\`. Policies include \`{admin_update_proposals,analista_update_proposals,atendente_update_own_draft}\`                                                                                                                                                                                                                                                                       | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_anon_UPDATE                                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`authenticated\` for action \`INSERT\`. Policies include \`{admin_create_proposals,atendente_create_proposals}\`                                                                                                                                                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_authenticated_INSERT                                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`authenticated\` for action \`SELECT\`. Policies include \`{admin_see_all_proposals,analista_see_analysis_proposals,atendente_see_own_formalization,atendente_see_own_proposals,financeiro_see_payment_proposals,gerente_see_store_proposals}\`                                                                                                                                                         | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_authenticated_SELECT                                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`authenticated\` for action \`UPDATE\`. Policies include \`{admin_update_proposals,analista_update_proposals,atendente_update_own_draft}\`                                                                                                                                                                                                                                                              | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_authenticated_UPDATE                                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`authenticator\` for action \`INSERT\`. Policies include \`{admin_create_proposals,atendente_create_proposals}\`                                                                                                                                                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_authenticator_INSERT                                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`authenticator\` for action \`SELECT\`. Policies include \`{admin_see_all_proposals,analista_see_analysis_proposals,atendente_see_own_formalization,atendente_see_own_proposals,financeiro_see_payment_proposals,gerente_see_store_proposals}\`                                                                                                                                                         | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_authenticator_SELECT                                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`authenticator\` for action \`UPDATE\`. Policies include \`{admin_update_proposals,analista_update_proposals,atendente_update_own_draft}\`                                                                                                                                                                                                                                                              | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_authenticator_UPDATE                                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`dashboard_user\` for action \`INSERT\`. Policies include \`{admin_create_proposals,atendente_create_proposals}\`                                                                                                                                                                                                                                                                                       | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_dashboard_user_INSERT                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`dashboard_user\` for action \`SELECT\`. Policies include \`{admin_see_all_proposals,analista_see_analysis_proposals,atendente_see_own_formalization,atendente_see_own_proposals,financeiro_see_payment_proposals,gerente_see_store_proposals}\`                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_dashboard_user_SELECT                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.propostas\` has multiple permissive policies for role \`dashboard_user\` for action \`UPDATE\`. Policies include \`{admin_update_proposals,analista_update_proposals,atendente_update_own_draft}\`                                                                                                                                                                                                                                                             | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"propostas","type":"table","schema":"public"}                                                                                                   | multiple_permissive_policies_public_propostas_dashboard_user_UPDATE                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tabelas_comerciais\` has multiple permissive policies for role \`anon\` for action \`SELECT\`. Policies include \`{allow_read_for_authenticated_users,tabelas_comerciais_select_authenticated}\`                                                                                                                                                                                                                                                               | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | multiple_permissive_policies_public_tabelas_comerciais_anon_SELECT                                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tabelas_comerciais\` has multiple permissive policies for role \`authenticated\` for action \`SELECT\`. Policies include \`{allow_read_for_authenticated_users,tabelas_comerciais_select_authenticated}\`                                                                                                                                                                                                                                                      | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | multiple_permissive_policies_public_tabelas_comerciais_authenticated_SELECT                                          |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tabelas_comerciais\` has multiple permissive policies for role \`authenticator\` for action \`SELECT\`. Policies include \`{allow_read_for_authenticated_users,tabelas_comerciais_select_authenticated}\`                                                                                                                                                                                                                                                      | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | multiple_permissive_policies_public_tabelas_comerciais_authenticator_SELECT                                          |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tabelas_comerciais\` has multiple permissive policies for role \`dashboard_user\` for action \`SELECT\`. Policies include \`{allow_read_for_authenticated_users,tabelas_comerciais_select_authenticated}\`                                                                                                                                                                                                                                                     | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tabelas_comerciais","type":"table","schema":"public"}                                                                                          | multiple_permissive_policies_public_tabelas_comerciais_dashboard_user_SELECT                                         |
| duplicate_index              | Duplicate Index              | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects cases where two ore more identical indexes exist.                                                                                                                                                                                                   | Table \`public.produto_tabela_comercial\` has identical indexes {idx_produto_tabela_comercial_produto,idx_produto_tabela_produto_id}. Drop all except one of them                                                                                                                                                                                                                                                                                                             | https://supabase.com/docs/guides/database/database-linter?lint=0009_duplicate_index              | {"name":"produto_tabela_comercial","type":"table","schema":"public","indexes":["idx_produto_tabela_comercial_produto","idx_produto_tabela_produto_id"]} | duplicate_index_public_produto_tabela_comercial_{idx_produto_tabela_comercial_produto,idx_produto_tabela_produto_id} |
| duplicate_index              | Duplicate Index              | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects cases where two ore more identical indexes exist.                                                                                                                                                                                                   | Table \`public.produto_tabela_comercial\` has identical indexes {idx_produto_tabela_comercial_tabela,idx_produto_tabela_tabela_id}. Drop all except one of them                                                                                                                                                                                                                                                                                                               | https://supabase.com/docs/guides/database/database-linter?lint=0009_duplicate_index              | {"name":"produto_tabela_comercial","type":"table","schema":"public","indexes":["idx_produto_tabela_comercial_tabela","idx_produto_tabela_tabela_id"]}   | duplicate_index_public_produto_tabela_comercial_{idx_produto_tabela_comercial_tabela,idx_produto_tabela_tabela_id}   |