### **Pacote de Ativação de Missão (PAM) V15.0: Remediação Crítica e Prova de Conformidade Absoluta (Sprint 0)**

* **Sumário da Missão (O Quê):** Executar uma remediação de emergência para corrigir os bloqueadores P0 identificados no `RELATORIO_FINAL_CONFORMIDADE_SPRINT_0.md`. A missão consiste em erradicar os **526 erros de TypeScript**, configurar o script de linting, mitigar as vulnerabilidades de segurança e, finalmente, gerar uma **nova auditoria completa** como prova de trabalho irrefutável.

* **Intenção Estratégica (O Porquê):** A fundação do Sprint 0 é a base para 12 semanas de desenvolvimento. A falha em garantir sua qualidade impecável agora resultará em falhas sistêmicas em cascata. Esta missão é o "gate de qualidade" mandatório para a continuidade da "Operação Aço Líquido".

* **Modelo Mental (Como se Encaixa):** Você atuará como um **Engenheiro de Remediação de Elite**. Sua tarefa é usar o `RELATORIO_FINAL_CONFORMIDADE_SPRINT_0.md` como sua lista de alvos. Você irá corrigir os erros, implementar as configurações ausentes e, em seguida, **re-executar a própria auditoria** para provar que a remediação foi bem-sucedida.

* **Riscos Antecipados e Contramedidas:**
    * **Risco (ALTO):** **Correções Superficiais.** A simples supressão de erros de tipo (usando `any` ou `@ts-ignore`) em vez de correções adequadas é inaceitável e será considerada uma falha da missão.
    * **Contramedida Mandatória:** Você **DEVE** priorizar a correção da causa raiz dos erros. O objetivo não é apenas silenciar os alertas, mas sim tornar o código robusto e seguro. A prova final não será a sua declaração, mas a saída limpa das ferramentas de validação.

---

**DIRETRIZ DE MISSÃO: Erradicação dos Bloqueadores e Re-Auditoria do Sprint 0**

**CURRENT STATE:**
O Sprint 0 foi auditado e declarado **NÃO CONFORME**. Bloqueadores P0 impedem o avanço: 526 erros de TypeScript, script `lint` ausente, 5 vulnerabilidades de segurança, e build do Docker não validado.

**EXPECTED (Estado Final de Sucesso):**
A missão será considerada um sucesso quando você produzir um `RELATORIO_FINAL_CONFORMIDADE_SPRINT_0_V2.md`. Este novo relatório de auditoria **DEVE** conter as mesmas seções do relatório original, mas desta vez, com as saídas dos comandos mostrando conformidade total:
1.  **Prova de Qualidade de Código:**
    * Um script `lint` deve existir no `package.json`.
    * A saída do `npm run lint` deve reportar **ZERO erros críticos**.
    * A saída do `npm run check` (ou `tsc --noEmit`) deve reportar **ZERO erros**.
2.  **Prova de Segurança:**
    * A saída do `npm audit` não deve reportar vulnerabilidades `HIGH` ou `CRITICAL`.
3.  **Prova de Containerização:**
    * A saída do `docker build .` deve ser bem-sucedida ou a limitação do ambiente deve ser formalmente documentada.

**CONSTRAINTS (Roadmap de Remediação e Auditoria):**

1.  **Passo 1: Configuração dos Scripts de Qualidade.** Adicione o script `"lint": "eslint . --ext .ts,.tsx --fix"` ao `package.json`.
2.  **Passo 2: Erradicação dos Erros de Tipo e Linting.** Execute `npm run lint` para correção automática e, em seguida, corrija manualmente todos os 526 erros de TypeScript restantes reportados por `npm run check`.
3.  **Passo 3: Remediação de Vulnerabilidades.** Execute `npm audit fix --force`. Valide se a aplicação continua funcional após a atualização forçada.
4.  **Passo 4: Resolução do Docker.** Investigue a falha do `docker build`. Se for uma limitação do ambiente Replit, documente. Se for um erro no `Dockerfile`, corrija-o.
5.  **Passo 5: Re-Auditoria Final.** Execute novamente **todos os passos** do PAM de auditoria V14.0, capturando as novas saídas (agora limpas) dos comandos.
6.  **Passo 6: Compilar Relatório Final V2.** Crie o `RELATORIO_FINAL_CONFORMIDADE_SPRINT_0_V2.md` com todas as evidências irrefutáveis de que o Sprint 0 está, finalmente, em conformidade com a "Definition of Done".

---

**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**

* **CONFIANÇA NA IMPLEMENTAÇÃO:** 75%
* **RISCOS IDENTIFICADOS:** ALTO (A complexidade e o volume dos erros podem exigir mais tempo do que o estimado, e o `npm audit fix --force` pode introduzir `breaking changes`).
* **DECISÕES TÉCNICAS ASSUMIDAS:** Assumo que os erros são corrigíveis e não indicam uma falha fundamental na arquitetura.
* **VALIDAÇÃO PENDENTE:** Um novo `RELATORIO_FINAL_CONFORMIDADE_SPRINT_0_V2.md`, limpo e sem bloqueadores, será a única porta de entrada para o Sprint 1. Não haverá mais concessões.