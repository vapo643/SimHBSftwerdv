**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Refatorar a "Tela de Cobranças" para alinhar 100% com o "Blueprint de Negócio V1.0", corrigindo a query principal para usar o `status` da proposta como fonte da verdade e implementando as funcionalidades de Ação Primária ("Aplicar Desconto", "Prorrogar Vencimento").
* **Intenção Estratégica (O Porquê):** Para transformar a tela de uma visualização de dados passiva e incorreta para um dashboard operacional ativo, confiável e que de facto capacite a equipe de cobranças a realizar seu trabalho.
* **Histórico Relevante (Consulta Obrigatória):** Use o seu relatório de auditoria `PAM_V1.0_AUDITORIA_COBRANCAS.md` como a única fonte da verdade para esta missão. Sua tarefa é corrigir todas as "NÃO CONFORMIDADES" que você mesmo identificou.
* **Modelo Mental (Como se Encaixa):** Esta é uma missão de duas frentes. Primeiro, você atuará como Engenheiro de Dados, corrigindo a query principal. Em seguida, como Engenheiro de Backend, você construirá os novos endpoints e a lógica de negócio para as ações de modificação de boletos.
* **Riscos Antecipados:** **Risco:** Modificar um boleto via API do Inter é uma operação financeira crítica. **Contramedida:** Os novos endpoints devem ter validação de permissão (role) rigorosa e tratamento de erro detalhado.

---

**IMPLEMENTAR:**
A refatoração completa do backend da "Tela de Cobranças".

**CURRENT STATE:**
A tela usa uma query incorreta (`EXISTS` em vez de `status`) e possui botões de ação na UI que não estão conectados a nenhum endpoint de backend funcional.

**EXPECTED (Estado Final de Sucesso):**
1.  A query principal da tela é corrigida para usar o `status` da proposta como o filtro primário.
2.  Endpoints de backend para "Aplicar Desconto" e "Prorrogar Vencimento" são criados, funcionais e seguros.
3.  A "Tela de Cobranças" está pronta para ter sua UI conectada a uma lógica de backend 100% funcional e alinhada com o negócio.

**CONSTRAINTS (Roadmap de Implementação Faseado):**

**FASE 1: Correção da Fonte da Verdade (Query Principal):**
    - **Ação:** Refatore o endpoint `GET /api/cobrancas`.
    - **Implementação:** Substitua a cláusula `WHERE` atual, baseada em `EXISTS`, pela lógica correta baseada no **`status`** da proposta, conforme definido no nosso Blueprint (ex: `inArray(propostas.status, ["BOLETOS_EMITIDOS", "PAGAMENTO_PENDENTE", ...])`).

**FASE 2: Implementação das Ações de Modificação (Backend):**
    - **Ação:** Crie os novos endpoints de backend necessários para as ações.
    - **Implementação para "Prorrogar Vencimento":**
        - Crie um endpoint `PATCH /api/cobrancas/boletos/:codigoSolicitacao/prorrogar`.
        - Ele deve receber uma `novaDataVencimento`.
        - A lógica deve: validar a permissão do usuário, chamar `interBankService.editarCobranca` com o payload correto e, em caso de sucesso, atualizar nosso banco de dados local.
    - **Implementação para "Aplicar Desconto":**
        - Crie um endpoint `POST /api/cobrancas/boletos/:codigoSolicitacao/aplicar-desconto`.
        - Ele deve receber os dados do desconto (valor, data de validade, etc.).
        - A lógica deve seguir o mesmo padrão: validar permissão, chamar `interBankService.editarCobranca` e atualizar nosso banco de dados.

**PROTOCOLO OBRIGATÓRIO 5-CHECK:**
1.  Mapear todos os arquivos envolvidos.
2.  Garantir que a validação de `role` seja a primeira etapa em todos os novos endpoints.
3.  Executar `get_latest_lsp_diagnostics`.
4.  Realizar testes de API para a nova query e para cada um dos novos endpoints criados.
5.  O critério final de sucesso é um backend 100% funcional, pronto para ser conectado ao frontend, com a query corrigida e os endpoints de ação operacionais.