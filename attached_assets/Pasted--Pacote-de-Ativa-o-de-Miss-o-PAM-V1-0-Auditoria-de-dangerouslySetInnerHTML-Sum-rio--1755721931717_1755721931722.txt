### Pacote de Ativa√ß√£o de Miss√£o (PAM) V1.0 (Auditoria de `dangerouslySetInnerHTML`)

* **Sum√°rio da Miss√£o (O Qu√™):** Realizar uma auditoria de seguran√ßa no componente `client/src/components/ui/chart.tsx`, focando em como os dados s√£o processados antes de serem passados para a propriedade `dangerouslySetInnerHTML`.
* **Inten√ß√£o Estrat√©gica (O Porqu√™):** Determinar se o uso de `dangerouslySetInnerHTML` neste componente constitui uma vulnerabilidade de Cross-Site Scripting (XSS) real. A nossa doutrina de seguran√ßa exige que cada uso desta propriedade seja rigorosamente auditado e justificado.
* **Hist√≥rico Relevante (Consulta Obrigat√≥ria):** A auditoria SAST inicial identificou o uso de `dangerouslySetInnerHTML` no `chart.tsx` como um risco de seguran√ßa de severidade M√âDIA.
* **Modelo Mental (Como se Encaixa):** Aja como um Analista de Seguran√ßa de Aplica√ß√µes. Sua tarefa √© rastrear a origem dos dados (`THEMES`, `colorConfig`, `id`) que s√£o usados para construir a string HTML/CSS, procurando por qualquer caminho pelo qual um dado n√£o sanitizado e controlado por um ator externo possa ser injetado.

---

**IMPLEMENTAR:**
Relat√≥rio de Auditoria de Sanitiza√ß√£o de `dangerouslySetInnerHTML`

**CURRENT STATE:**
O componente `chart.tsx` utiliza `dangerouslySetInnerHTML` para injetar estilos CSS din√¢micos. A seguran√ßa desta opera√ß√£o √© desconhecida.

**EXPECTED (Estado Final de Sucesso):**
Um relat√≥rio de auditoria detalhado em formato Markdown, contendo duas se√ß√µes:

**1. An√°lise do Fluxo de Dados:**
* **Origem dos Dados:** Rastreie a origem de cada vari√°vel usada para construir a string `__html`: `THEMES`, `colorConfig`, e `id`.
* **Conclus√£o de Rastreamento:** Para cada vari√°vel, determine se a sua origem √© est√°tica (hardcoded no c√≥digo-fonte), controlada internamente (ex: um ID gerado por `uuid`), ou se ela se origina de uma fonte externa (ex: API, input do usu√°rio).

**2. Veredito da Auditoria de Seguran√ßa:**
* Com base na sua an√°lise de fluxo de dados, forne√ßa um veredito final e claro:
    * **‚úÖ SEGURO:** Se todos os dados usados para construir a string forem est√°ticos ou controlados internamente, sem nenhuma possibilidade de inje√ß√£o de dados externos n√£o sanitizados.
    * **üö® VULNER√ÅVEL:** Se existir qualquer caminho, por mais te√≥rico que seja, pelo qual um dado externo possa ser injetado na string HTML/CSS sem a devida sanitiza√ß√£o.
* **Justifique o seu veredito** com base nas evid√™ncias de c√≥digo.

---
**DECLARA√á√ÉO DE INCERTEZA (OBRIGAT√ìRIO):**
* **CONFIAN√áA NA IMPLEMENTA√á√ÉO:** [Preencher com a porcentagem de 0 a 100% de confian√ßa na sua an√°lise de seguran√ßa]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/M√âDIO/ALTO/CR√çTICO]
* **DECIS√ïES T√âCNICAS ASSUMIDAS:** [Ex: "Assumi que as vari√°veis importadas de outros arquivos s√£o est√°ticas, a menos que sejam fun√ß√µes que processem input externo."]
* **VALIDA√á√ÉO PENDENTE:** [Se for considerado vulner√°vel, o pr√≥ximo passo ser√° uma miss√£o de remedia√ß√£o.]
---

**PROTOCOLO OBRIGAT√ìRIO 7-CHECK EXPANDIDO:**
1.  Mapear o ficheiro e as vari√°veis exatas a serem analisados (`chart.tsx`).
2.  Garantir que o rastreamento da origem dos dados est√° completo.
3.  Executar `get_latest_lsp_diagnostics` para garantir que o ambiente est√° est√°vel.
4.  **Declarar N√≠vel de Confian√ßa (0 a 100%)** na precis√£o da auditoria.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (revis√£o do relat√≥rio gerado para l√≥gica e precis√£o).
7.  **Documentar Decis√µes T√©cnicas** e o veredito final de seguran√ßa.