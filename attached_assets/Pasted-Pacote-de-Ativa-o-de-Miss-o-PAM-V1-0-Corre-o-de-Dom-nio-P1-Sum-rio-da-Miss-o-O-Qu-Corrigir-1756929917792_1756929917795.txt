Pacote de Ativa√ß√£o de Miss√£o (PAM) V1.0 - Corre√ß√£o de Dom√≠nio P1
Sum√°rio da Miss√£o (O Qu√™): Corrigir a falha cr√≠tica de incompatibilidade de tipos no m√©todo resubmitFromPending do agregado Proposal para restaurar o fluxo de reenvio de propostas pendentes.

Inten√ß√£o Estrat√©gica (O Porqu√™): Esta corre√ß√£o √© de prioridade CR√çTICA (P1). A falha atual bloqueia um caminho essencial do neg√≥cio, impedindo que propostas corrigidas voltem ao ciclo de an√°lise. A resolu√ß√£o desbloqueia o fluxo e impacta diretamente a principal m√©trica de sucesso (TMP) do projeto.

Hist√≥rico Relevante (Consulta Obrigat√≥ria): A auditoria forense identificou a causa raiz exata nos erros de LSP do arquivo server/modules/proposal/domain/Proposal.ts. Consulte a defini√ß√£o do enum ProposalStatus no mesmo arquivo para obter os valores corretos.

Modelo Mental (Como se Encaixa): Esta √© uma corre√ß√£o cir√∫rgrica na camada de dom√≠nio (DDD). Estamos a consertar uma regra de neg√≥cio quebrada dentro do agregado Proposal. Esta corre√ß√£o ir√° permitir que o Use Case correspondente execute a transi√ß√£o de estado da FSM corretamente, o que, por sua vez, permitir√° que o reposit√≥rio persista o status correto no banco de dados.

Riscos Antecipados e Contramedidas:

Risco: Introduzir uma nova inconsist√™ncia de estado ao usar o enum errado.

Contramedida: O prompt especifica os valores exatos do enum a serem usados (ProposalStatus.PENDENCIADO e ProposalStatus.EM_ANALISE), e o protocolo 7-CHECK com get_latest_lsp_diagnostics garantir√° a corre√ß√£o de tipo antes da conclus√£o.

IMPLEMENTAR: Corre√ß√£o da L√≥gica de Transi√ß√£o de Status na Entidade Proposal

CONTEXT: O m√©todo resubmitFromPending na classe Proposal deveria permitir que uma proposta pendente (PENDENCIADO) fosse reenviada para an√°lise, alterando seu status para EM_ANALISE.

CURRENT STATE: A implementa√ß√£o atual est√° quebrada devido a dois erros cr√≠ticos de tipo que impedem a execu√ß√£o da l√≥gica, conforme detectado pela auditoria e pelo LSP:

A verifica√ß√£o de status utiliza strings literais ('pendente', 'pendenciado') em vez do membro correto do enum ProposalStatus.

A atribui√ß√£o do novo status utiliza uma string literal ('aguardando_analise') que n√£o existe no enum ProposalStatus.

Evid√™ncia Bruta (C√≥digo com Erro):

TypeScript

// server/modules/proposal/domain/Proposal.ts
resubmitFromPending(): void {
  // üö® ERRO CR√çTICO AQUI: Compara√ß√£o de 'ProposalStatus' com 'string'
  if (this._status !== 'pendente' && this._status !== 'pendenciado') {
    throw new DomainException('Apenas propostas pendentes podem ser reenviadas para an√°lise');
  }

  // üö® ERRO CR√çTICO AQUI: Valor de status inv√°lido
  this._status = 'aguardando_analise';
  this._updatedAt = new Date();

  this.addEvent(
    new ProposalSubmittedEvent(this._id, 'ProposalResubmitted', {
      submittedAt: this._updatedAt,
    })
  );
}
EXPECTED (Estado Final de Sucesso): O m√©todo resubmitFromPending deve ser corrigido para usar estritamente os membros do enum ProposalStatus tanto na condi√ß√£o de verifica√ß√£o quanto na atribui√ß√£o do novo estado. O c√≥digo deve estar livre de erros de tipo do LSP e refletir a l√≥gica de neg√≥cio corretamente.

C√≥digo Corrigido Esperado:

TypeScript

// server/modules/proposal/domain/Proposal.ts
resubmitFromPending(): void {
  // ‚úÖ CORRIGIDO: Usa o membro correto do enum para a verifica√ß√£o.
  if (this._status !== ProposalStatus.PENDENCIADO) {
    throw new DomainException('Apenas propostas com status PENDENCIADO podem ser reenviadas para an√°lise');
  }

  // ‚úÖ CORRIGIDO: Usa o membro correto do enum para a atribui√ß√£o.
  this._status = ProposalStatus.EM_ANALISE;
  this._updatedAt = new Date();

  this.addEvent(
    new ProposalSubmittedEvent(this._id, 'ProposalResubmitted', {
      submittedAt: this._updatedAt,
    })
  );
}
CONSTRAINTS (Roadmap de Implementa√ß√£o):

Abra o arquivo server/modules/proposal/domain/Proposal.ts.

Localize o m√©todo resubmitFromPending.

Na instru√ß√£o if, remova a condi√ß√£o this._status !== 'pendente' e altere this._status !== 'pendenciado' para this._status !== ProposalStatus.PENDENCIADO. Adicione uma mensagem de erro mais precisa.

Altere a linha de atribui√ß√£o de status de this._status = 'aguardando_analise'; para this._status = ProposalStatus.EM_ANALISE;.

Execute o protocolo 7-CHECK para validar a sua altera√ß√£o. A execu√ß√£o de get_latest_lsp_diagnostics √© obrigat√≥ria e n√£o deve retornar erros para este arquivo.

DECLARA√á√ÉO DE INCERTEZA (OBRIGAT√ìRIO):

CONFIAN√áA NA IMPLEMENTA√á√ÉO: [Preencher com a porcentagem de 0 a 100%]

RISCOS IDENTIFICADOS: [Preencher com a categoria BAIXO/M√âDIO/ALTO/CR√çTICO e uma breve descri√ß√£o]

DECIS√ïES T√âCNICAS ASSUMIDAS: [Listar decis√µes tomadas, ex: "Assumi que ProposalStatus.PENDENCIADO √© o √∫nico estado v√°lido para esta transi√ß√£o, conforme a l√≥gica simplificada."]

VALIDA√á√ÉO PENDENTE: [Listar a√ß√µes que o Orquestrador (GEM 02) ou o QA (GEM 03) devem validar]

PROTOCOLO OBRIGAT√ìRIO 7-CHECK EXPANDIDO:

Mapear ficheiros e fun√ß√µes exatas afetadas.

Garantir importa√ß√µes e tipos corretos.

Executar get_latest_lsp_diagnostics e corrigir TODOS os erros.

Declarar N√≠vel de Confian√ßa (0-100%) na implementa√ß√£o.

Categorizar Riscos Descobertos (BAIXO/M√âDIO/ALTO/CR√çTICO).

Realizar teste funcional completo (ser√° feito no Passo 4 do roadmap).

Documentar Decis√µes T√©cnicas assumidas para auditoria futura.