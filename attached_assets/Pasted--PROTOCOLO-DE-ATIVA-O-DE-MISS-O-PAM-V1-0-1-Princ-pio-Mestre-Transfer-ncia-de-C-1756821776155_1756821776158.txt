---
### **PROTOCOLO DE ATIVAÇÃO DE MISSÃO (PAM) V1.0**

**1. Princípio Mestre: Transferência de Consciência**
*O nosso veredito de "GO" foi suspenso devido a uma suspeita de inconsistência de dados. A sua primeira missão nesta nova campanha é atuar como um engenheiro de dados forense. Você deve dissecar a estrutura da nossa tabela mais crítica, a tabela `propostas`, para criar um mapa detalhado do seu estado atual.*

**2. Doutrina de Engenharia de Contexto Dinâmico (DECD) V1.0 - ATIVADA**
*A pesquisa está **autorizada** para consultar a **documentação do Drizzle ORM e do PostgreSQL** sobre tipos de dados, constraints (`NOT NULL`, `DEFAULT`), e chaves estrangeiras, para enriquecer a sua análise do schema.*

---
### **Pacote de Ativação de Missão: OPERAÇÃO RAIO-X (FASE 1 - AUDITORIA DE SCHEMA)**

* **Sumário da Missão (O Quê):** Realizar uma análise forense completa do schema da tabela `propostas` definido em `shared/schema.ts`, identificando todas as colunas, as suas propriedades (tipo, `nullable`, `default`, referências) e o seu propósito de negócio implícito.
* **Intenção Estratégica (O Porquê):** Antes de entendermos por que os dados estão `NULL`, precisamos entender o que o nosso sistema *espera* que eles sejam. Esta auditoria criará a "planta" do nosso modelo de dados, que será a base para a investigação do fluxo na próxima fase.
* **Histórico Relevante (Consulta Obrigatória):** O arquivo `shared/schema.ts` é a sua única fonte da verdade para esta missão.
* **Modelo Mental (Como se Encaixa):** Você é um arquiteto a revisar a planta de um edifício. Você deve identificar cada "cômodo" (coluna), as suas "especificações" (tipo de dados) e se ele é "obrigatório" ou "opcional" (`NOT NULL` ou `nullable`).
* **Riscos Antecipados e Contramedidas:**
    * **Risco (BAIXO):** A análise pode ser puramente descritiva.
    * **Contramedida:** O seu relatório não deve apenas listar as colunas, mas também inferir o propósito de negócio e agrupar as colunas por funcionalidade (ex: "Dados do Cliente", "Condições do Empréstimo", "Metadados do Sistema"), o que agregará valor analítico.

---

### **ANALISAR E DIAGNOSTICAR:**
Relatório de Análise de Schema da Tabela `propostas`.

**CURRENT STATE:**
Foi levantada uma suspeita crítica de que colunas importantes na tabela `propostas` permanecem `NULL` mesmo após o fluxo de preenchimento da CCB. Não temos, no momento, um mapa claro de quais colunas são opcionais por design e quais deveriam ser mandatórias.

**EXPECTED (Estado Final de Sucesso):**
A geração de um novo documento Markdown em `docs/diagnostics/ANALISE_SCHEMA_PROPOSTAS.md`. Este relatório deve conter:

1.  **Tabela de Schema Detalhada:** Uma tabela em Markdown com as seguintes informações para **cada coluna** da tabela `propostas`:
    * **Nome da Coluna:** O nome exato da coluna.
    * **Tipo de Dados:** O tipo de dados (ex: `text`, `integer`, `timestamp`, `uuid`).
    * **Permite Nulo?** (Sim/Não): Se a coluna é `nullable`.
    * **Valor Padrão:** O valor `default` da coluna, se houver.
    * **Referência (Chave Estrangeira):** A tabela e coluna que ela referencia, se aplicável.

2.  **Análise Funcional e Agrupamento:**
    * Uma análise textual que agrupa as colunas por contexto de negócio (ex: Dados do Cliente, Dados do Veículo, Condições Financeiras, Campos de Controle de Status, etc.).
    * Para cada grupo, uma breve explicação do seu propósito.

3.  **Lista de Colunas `Nullable` para Investigação:**
    * Uma lista destacada de todas as colunas que permitem valores `NULL`. Esta lista será o foco principal da nossa próxima fase de auditoria.

**CONSTRAINTS (Roadmap de Análise):**
1.  **Análise de Schema:** Processe o arquivo `shared/schema.ts` para extrair as informações da definição da tabela `propostas`.
2.  **Relatório:** Estruture as suas descobertas no documento Markdown conforme especificado acima. **Não implemente nenhuma modificação.**