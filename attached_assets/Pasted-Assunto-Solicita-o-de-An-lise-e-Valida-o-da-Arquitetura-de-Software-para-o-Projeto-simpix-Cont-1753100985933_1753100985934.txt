Assunto: Solicitação de Análise e Validação da Arquitetura de Software para o Projeto "simpix"

Contexto do Projeto:
Estamos construindo uma aplicação full-stack chamada "simpix", uma plataforma de gestão de crédito pessoal para uma rede de parceiros (lojistas). O sistema precisa gerenciar todo o ciclo de vida de uma proposta de crédito, desde a criação pelo parceiro, passando pela análise de crédito, formalização do contrato, até o pagamento e a futura cobrança.

Princípio de Segurança Mestre:
A arquitetura deve ser Multi-Tenant, garantindo o isolamento absoluto dos dados entre os diferentes parceiros. A implementação desta segurança será via Row Level Security (RLS) no banco de dados. Um usuário de um parceiro/loja não pode, sob nenhuma circunstância, acessar dados de outro.

Stack Tecnológica Definida:

Hosting/Ambiente: Replit

Linguagem: TypeScript

Frontend: React

Backend: Express.js

Banco de Dados: Banco de Dados do Azure para PostgreSQL

Autenticação: Azure AD B2C

Armazenamento de Arquivos: Azure Blob Storage

Sua Missão como Consultor:
Com base no contexto e na stack acima, solicito sua análise e recomendação sobre a estrutura de arquitetura de software ideal, segura e escalável para este projeto.

Por favor, detalhe os seguintes pontos:

Estrutura de Diretórios Recomendada: Qual a estrutura de pastas ideal para um projeto monorepo no Replit com um backend Express.js e um frontend React separados? (ex: /client, /server).

Padrão de Comunicação (API): Para a comunicação entre o frontend e o backend, qual padrão você recomenda (RESTful, GraphQL, etc.) e por quê?

Gestão de Estado no Frontend: Considerando as múltiplas telas e a complexidade dos dados, qual biblioteca de gerenciamento de estado (ex: Zustand, Jotai, Redux Toolkit) seria a mais adequada?

Implementação de Segurança (RLS & Autenticação): Qual é a melhor prática para integrar o Azure AD B2C com o backend Express.js para que as políticas de RLS no PostgreSQL do Azure sejam aplicadas corretamente com base no usuário logado?

Boas Práticas Gerais: Com base na sua experiência com o ambiente Replit e esta stack tecnológica, quais são as 3 principais boas práticas ou "armadilhas a evitar" durante o desenvolvimento deste projeto?

Aguardando sua análise arquitetural.