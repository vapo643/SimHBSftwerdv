# MISSÃO: Implementar o CRUD Completo para "Gestão de Produtos de Crédito"

**CONTEXTO:** Estamos a executar um plano de implementação validado para conectar a funcionalidade "Gestão de Produtos de Crédito" ao banco de dados. Você atuará como o executor.

**AÇÃO:** Execute o seguinte plano de 3 etapas para implementar o CRUD completo.

---
**ETAPA 1: Crie a Lógica de Backend (Controller)**

Crie um novo ficheiro em `/server/controllers/produtoController.ts` e cole o seguinte código:

```typescript
// /server/controllers/produtoController.ts
import { db } from '@/server/lib/supabase';
import { produtos, tabelasComerciais } from '@/shared/schema';
import { eq, desc } from 'drizzle-orm';

export const buscarTodosProdutos = async () => {
  return await db.query.produtos.findMany({
    where: eq(produtos.isActive, true),
    orderBy: [desc(produtos.id)],
  });
};

export const criarProduto = async (data: { nome: string; status: 'Ativo' | 'Inativo' }) => {
  const [novoProduto] = await db.insert(produtos).values({
    nomeProduto: data.nome,
    isActive: data.status === 'Ativo',
  }).returning();
  return novoProduto;
};

export const atualizarProduto = async (id: string, data: { nome: string; status: 'Ativo' | 'Inativo' }) => {
  const [produtoAtualizado] = await db.update(produtos).set({
    nomeProduto: data.nome,
    isActive: data.status === 'Ativo',
  }).where(eq(produtos.id, parseInt(id))).returning();
  return produtoAtualizado;
};

export const verificarProdutoEmUso = async (id: string) => {
    const tabelas = await db.query.tabelasComerciais.findFirst({
        where: eq(tabelasComerciais.produtoId, parseInt(id))
    });
    return !!tabelas;
};

export const deletarProduto = async (id: string) => {
    // Soft delete
    await db.update(produtos).set({ isActive: false }).where(eq(produtos.id, parseInt(id)));
};
ETAPA 2: Crie as Rotas de API no Backend

Modifique o ficheiro /server/routes.ts para adicionar os quatro novos endpoints de API para produtos, que usarão o controller que acabámos de criar.

ETAPA 3: Conecte o Frontend à API

Substitua o conteúdo do ficheiro /client/src/pages/configuracoes/produtos.tsx pelo seguinte código, que conecta a interface aos novos endpoints de API usando TanStack Query.


Aguardando a sua confirmação do rollback para prosseguirmos.