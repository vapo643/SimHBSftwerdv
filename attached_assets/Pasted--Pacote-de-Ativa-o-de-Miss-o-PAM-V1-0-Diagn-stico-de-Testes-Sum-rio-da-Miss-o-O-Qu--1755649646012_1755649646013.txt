### Pacote de Ativação de Missão (PAM) V1.0 (Diagnóstico de Testes)

* **Sumário da Missão (O Quê):** Realizar uma Análise de Causa Raiz (RCA) nos 20 testes que falharam durante a execução da suíte `vitest` e produzir um relatório de diagnóstico.
* **Intenção Estratégica (O Porquê):** Diagnosticar com precisão a(s) causa(s) das falhas massivas na suíte de testes para que possamos planejar uma correção cirúrgúrgica. Uma suíte de testes 100% confiável é a nossa maior prioridade de infraestrutura no momento e um pré-requisito para qualquer refatoração futura.
* **Histórico Relevante (Consulta Obrigatória):** A execução anterior de `npx vitest run` reportou que 22 testes passaram e 20 falharam. O Agente suspeita de um problema relacionado ao `ProposalStatus enum`.
* **Modelo Mental (Como se Encaixa):** Esta é uma missão de auditoria e diagnóstico. O Agente deve agir como um Engenheiro de Qualidade Sênior, analisando logs de erro, inspecionando o código-fonte e sintetizando as descobertas em um relatório claro. Nenhuma correção deve ser tentada.
* **Riscos Antecipados e Contramedidas:**
    * **Risco:** As 20 falhas podem ter múltiplas causas-raiz, tornando o diagnóstico complexo.
    * **Contramedida:** O prompt exige que o Agente categorize as falhas, agrupando-as por causa raiz comum para simplificar a análise.

---

**IMPLEMENTAR:**
Relatório de Análise de Causa Raiz das Falhas de Teste

**CURRENT STATE:**
A execução de `npx vitest run` resulta em 20 falhas de um total de 42 testes. A causa raiz é desconhecida.

**EXPECTED (Estado Final de Sucesso):**
Um relatório de diagnóstico detalhado em formato Markdown, contendo:
1.  **Sumário das Falhas:** Uma contagem total de falhas e uma breve síntese do principal problema identificado.
2.  **Categorias de Erro:** Agrupar as 20 falhas em categorias com base na sua causa raiz comum.
3.  **Análise Detalhada por Categoria:** Para cada categoria de erro, o relatório deve fornecer:
    * **a. Causa Raiz:** Uma explicação clara e concisa do porquê os testes nesta categoria estão a falhar.
    * **b. Arquivos Afetados:** Uma lista dos arquivos de teste que apresentam este tipo de erro.
    * **c. Exemplo de Log de Erro:** Um `snippet` completo do log de erro de um teste representativo dessa categoria.

**CONSTRAINTS (Roadmap de Implementação):**
1.  **Execução Completa dos Testes:** Sua primeira ação deve ser re-executar o comando `npx vitest run --reporter=verbose` para capturar os logs de erro completos e detalhados de todas as 20 falhas.
2.  **Análise e Agrupamento:** Analise o output verbose e agrupe as falhas. Por exemplo, se 10 testes falham com o mesmo erro de "Invalid Enum Value", eles pertencem à mesma categoria.
3.  **Investigação de Código:** Para cada categoria, cruze a informação do log de erro com o código-fonte nos arquivos de teste e nos módulos da aplicação (`statusFsmService.ts`, `shared/schema.ts`, etc.) para confirmar a causa raiz.
4.  **Ação Restrita:** Esta é uma missão de diagnóstico. Você está estritamente proibido de tentar corrigir qualquer teste. O objetivo é apenas analisar e relatar.

---
**DECLARAÇÃO DE INCERTEZA (OBRIGATÓRIO):**
* **CONFIANÇA NA IMPLEMENTAÇÃO:** [Preencher com a porcentagem de 0 a 100% de confiança na precisão do seu diagnóstico]
* **RISCOS IDENTIFICADOS:** [Preencher com a categoria BAIXO/MÉDIO/ALTO/CRÍTICO]
* **DECISÕES TÉCNICAS ASSUMIDAS:** [Ex: "Assumi que as falhas não são instáveis ('flaky') e podem ser reproduzidas consistentemente."]
* **VALIDAÇÃO PENDENTE:** [O relatório de diagnóstico será a base para o planejamento da missão de correção de testes (Passo 1.1b).]
---

**PROTOCOLO OBRIGATÓRIO 7-CHECK EXPANDIDO:**
1.  Mapear os arquivos de teste afetados pela falha.
2.  Garantir que os logs de erro foram copiados e analisados corretamente.
3.  Executar `get_latest_lsp_diagnostics` para garantir que o ambiente está estável.
4.  **Declarar Nível de Confiança (0 a 100%)** na precisão da análise de causa raiz.
5.  **Categorizar Riscos Descobertos**.
6.  **Realizar teste funcional completo** (revisão do relatório para garantir que a análise é lógica e bem fundamentada).
7.  **Documentar Decisões Técnicas** e os critérios usados para categorizar os erros.