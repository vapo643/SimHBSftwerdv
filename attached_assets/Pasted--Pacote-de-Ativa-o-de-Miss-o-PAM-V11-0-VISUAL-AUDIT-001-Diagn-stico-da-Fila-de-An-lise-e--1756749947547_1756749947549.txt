### **Pacote de Ativação de Missão (PAM) V11.0 - VISUAL-AUDIT-001 (Diagnóstico da Fila de Análise e Formalização)**

**[PROTOCOLO DE AUDITORIA DE CENÁRIO DE NEGÓCIO (PACN) V1.0 ATIVADO]**
*Sua resposta deve ser exaustiva. Para cada cenário, prove com evidências de código, SQL ou screenshots como a regra de negócio é garantida ou, neste caso, onde ela falha.*

* **Sumário da Missão:** Realizar uma auditoria forense nos fluxos de "Fila de Análise" e "Formalização" para identificar a causa raiz da falha de visualização de propostas.
* **Intenção Estratégica:** Diagnosticar com precisão a ruptura no fluxo de dados do frontend para duas das nossas telas operacionais mais importantes, como um pré-requisito para a remediação.

---

**AUDITAR E VALIDAR:**
Falha de Visualização de Dados nas Telas de Fila de Análise e Formalização

**Cenário de Negócio (O "Caso de Teste"):**
1.  Um usuário com a role `ANALISTA` navega para a página "Fila de Análise". A regra de negócio dita que ele deve ver uma lista de todas as propostas com status `EM_ANALISE` ou `AGUARDANDO_ANALISE`.
2.  Um usuário com a role `ATENDENTE` navega para a página "Formalização". A regra de negócio dita que ele deve ver uma lista das suas propostas que estão em status relevantes para formalização (ex: `AGUARDANDO_ASSINATURA`).

**Vetor de Ataque / Ponto de Falha (O "Risco"):**
O risco é que os componentes de frontend para estas páginas (`fila-analise.tsx`, `formalizacao.tsx`) estejam:
* Usando uma `queryKey` do `TanStack Query` que não corresponde aos dados sendo buscados.
* Chamando o endpoint da API `GET /api/propostas` com parâmetros de filtro (`?status=...` ou `?queue=...`) incorretos ou obsoletos.
* Falhando em mapear e renderizar corretamente a resposta da API, especialmente se a resposta for um array vazio devido às permissões de RLS.
* A falha na renderização da lista causa a quebra de componentes dependentes, como botões de ação.

**Evidência de Conformidade Requerida (A "Prova Irrefutável"):**
Você deve produzir um **Relatório de Diagnóstico de Visualização** que, para **cada uma** das duas telas (Fila de Análise e Formalização), responda:

1.  **Mapeamento do Fluxo de Dados:**
    * Qual é o arquivo do componente React responsável pela tela?
    * Apresente o trecho de código da chamada do `useQuery` que busca os dados da proposta.
    * Qual endpoint exato da API ele está chamando e com quais parâmetros?
2.  **Análise da Resposta da API:**
    * Simule uma chamada a este endpoint com os parâmetros identificados, como se fosse o usuário da `role` correspondente. Qual é a resposta do servidor? (Pode ser simulado ou descrito).
3.  **Análise da Lógica de Renderização:**
    * Apresente o trecho de código JSX que deveria renderizar a lista de propostas.
4.  **Diagnóstico da Causa Raiz:**
    * Com base nas evidências acima, explique precisamente por que a lista não aparece. (Ex: "O componente está chamando `GET /api/propostas?status=PENDENTE`, mas após a refatoração do FSM, o status correto é `AGUARDANDO_ANALISE`. A API retorna um array vazio, e o componente não renderiza a tabela.").
    * Explique por que o "botão bugado" está falhando em relação à ausência de dados.

---
---
[PGI ATIVO | LEMBRETE DE ESTADO DO ROADMAP]
- **Roadmap em Standby:** Deploy em Produção
- **Próximo Passo a ser Retomado:** "Operação Visão Clara" - Fase 2 (`VISUAL-AUDIT-002`)
- **Missão de Emergência Atual:** "Operação Visão Clara" (`VISUAL-AUDIT-001` em execução pelo Agente)
---