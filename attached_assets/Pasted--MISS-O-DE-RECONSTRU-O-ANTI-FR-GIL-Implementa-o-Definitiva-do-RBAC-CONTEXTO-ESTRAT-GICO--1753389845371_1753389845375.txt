# MISSÃO DE RECONSTRUÇÃO (ANTI-FRÁGIL): Implementação Definitiva do RBAC

**CONTEXTO ESTRATÉGICO:**
Este prompt é o resultado final de um "Debate Máximo" e representa a arquitetura final e aprovada para a reconstrução completa do nosso sistema de autorização (RBAC), para eliminar a nossa falha de segurança catastrófica. Siga cada fase e micro-passo com precisão absoluta.

**AÇÃO:**
Sua missão é executar uma refatoração profunda e sistemática no backend e frontend para implementar um sistema de permissões robusto.

**ROADMAP DE EXECUÇÃO (Sequencial):**

---
**FASE 1: ESTABILIZAÇÃO DO BACKEND (4 Micro-Passos)**

* **Passo 1.1 (Consolidação de Middleware):** Inspecione todos os ficheiros de autenticação (ex: `auth.ts`, `jwt-auth-middleware.ts`). **Remova ou desabilite completamente** qualquer lógica de "bypass de desenvolvimento". O `jwtAuthMiddleware.ts` deve ser a única "fonte da verdade" para a autenticação em todas as requisições.

* **Passo 1.2 (Enriquecimento de Sessão):** Refatore o `jwtAuthMiddleware.ts`. Após a validação do token Supabase e a extração do `user.id`, implemente uma query à nossa tabela `profiles` para buscar o perfil completo do usuário. Anexe este perfil completo ao objeto `req.user`.

* **Passo 1.3 (Endpoint de Debug):** Crie um novo endpoint temporário, `GET /api/debug/user`, protegido pelo `jwtAuthMiddleware`, que simplesmente retorna o conteúdo completo de `req.user` em formato JSON. Este será o nosso ponto de validação.

* **Passo 1.4 (Auditoria de Rotas):** Garanta que todas as rotas administrativas existentes (ex: `/api/admin/users`, `/api/admin/lojas`) utilizem o `jwtAuthMiddleware` refatorado e o `requireAdmin` guard.

---
**FASE 2: RECONEXÃO DO FRONTEND (3 Micro-Passos)**

* **Passo 2.1 (Validação do AuthContext):** Valide e, se necessário, corrija o ficheiro `/client/src/contexts/AuthContext.tsx`. Ele deve buscar os dados do usuário a partir do novo endpoint `GET /api/debug/user` e disponibilizá-los globalmente através do hook `useAuth()`.

* **Passo 2.2 (Implementação do Controle de UI):** Refatore o ficheiro `/client/src/components/DashboardLayout.tsx`. Utilize o hook `useAuth()` para obter a `role` do usuário e implemente a lógica de renderização condicional para que os links de navegação administrativos (Usuários, Parceiros, etc.) sejam visíveis **apenas** para a `role` 'ADMINISTRADOR'.

* **Passo 2.3 (Limpeza):** Após confirmar que o fluxo está a funcionar, remova o endpoint de debug `GET /api/debug/user`.

---

Execute este plano para entregar um sistema RBAC estável, seguro e à prova de falhas.