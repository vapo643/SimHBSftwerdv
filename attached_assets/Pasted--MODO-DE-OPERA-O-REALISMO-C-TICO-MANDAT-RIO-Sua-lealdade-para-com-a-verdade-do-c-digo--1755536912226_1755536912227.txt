**### MODO DE OPERAÇÃO: REALISMO CÉTICO (MANDATÓRIO)**
Sua lealdade é para com a verdade do código e a estabilidade da produção.

---
**### Pacote de Ativação de Missão (PAM) V1.0**

* **Sumário da Missão (O Quê):** Realizar uma auditoria forense completa do fluxo de "Confirmar Veracidade" na "Tela de Pagamentos", mapeando o fluxo de dados do modal e a lógica de negócio atual.
* **Intenção Estratégica (O Porquê):** O Arquiteto determinou que o modal atual está poluído com informações desnecessárias e pode conter falhas de lógica. Antes de refatorá-lo para ser minimalista e seguro, precisamos de um "blueprint" da implementação existente.
* **Histórico Relevante (Consulta Obrigatória):** Em missões anteriores, blindamos o sistema de status. Sua auditoria deve verificar se este modal está a consumir o status correto (`BOLETOS_EMITIDOS`) para exibir as propostas.
* **Modelo Mental (Como se Encaixa):** Você é um auditor de UX e de backend. Sua tarefa é rastrear quais dados o modal está a solicitar e a exibir, e como a lógica de confirmação funciona.
* **Riscos Antecipados:** **Risco:** Uma análise superficial. **Contramedida:** Sua missão não é corrigir. É **PROVAR**, com evidências de código, como o sistema funciona hoje.

---

**IMPLEMENTAR:**
Um relatório de auditoria detalhado. **NÃO FAÇA MODIFICAÇÕES.**

**CURRENT STATE:**
A "Tela de Pagamentos" possui um fluxo de "Confirmar Veracidade" que é funcionalmente questionável e visualmente poluído.

**EXPECTED (Estado Final de Sucesso):**
Um relatório de auditoria que responda a todas as questões abaixo, com evidências de código.

**CONSTRAINTS (Roadmap de Auditoria Forense):**

**1. Auditoria da Fonte de Dados do Modal:**
    - **Ação:** Inspecione o componente de frontend `pagamentos.tsx`. Quando o usuário clica em "Confirmar Veracidade", quais dados são passados para o modal? O modal faz uma nova chamada de API para buscar mais detalhes, ou ele apenas usa os dados da linha da tabela?
    - **Relatório 1:** Descreva o fluxo de dados para o modal. Se houver uma chamada de API, apresente o endpoint e a sua query Drizzle correspondente no backend.

**2. Auditoria dos Dados Exibidos:**
    - **Ação:** Analise o código JSX do modal.
    - **Relatório 2:** Liste **TODOS** os campos de dados que o modal está a renderizar atualmente. Compare esta lista com o "Princípio do Minimalismo Crítico" do nosso novo Blueprint (Valor, Nome, CPF, Dados Bancários, CCB).

**3. Auditoria da Lógica de Confirmação:**
    - **Ação:** Analise a função `onClick` do botão de confirmação final dentro do modal e o endpoint de backend que ele chama.
    - **Relatório 3:** O que acontece quando o pagamento é confirmado? O sistema atualiza o `status` da proposta para `PAGO`? Existe alguma verificação para prevenir a duplicidade de pagamento para a mesma proposta?

**Relatório Final:**
O critério de sucesso é um relatório forense completo que nos dê um mapa claro de todas as correções necessárias para alinhar 100% o fluxo de veracidade com o nosso novo Blueprint de negócio.